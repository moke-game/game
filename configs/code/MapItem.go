//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import "errors"

type MapItem struct {
	ID     int32
	Name   string
	Scene  int32
	Res    string
	Type   int32
	Radius int32
	Skill  int32
	Drop   int32
	ItemCD int32
}

const TypeId_MapItem = -1793909137

func (*MapItem) GetTypeId() int32 {
	return -1793909137
}

func (_v *MapItem) Deserialize(_buf map[string]interface{}) (err error) {
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["ID"].(float64); !_ok_ {
			err = errors.New("ID error")
			return
		}
		_v.ID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		if _v.Name, _ok_ = _buf["Name"].(string); !_ok_ {
			err = errors.New("Name error")
			return
		}
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Scene"].(float64); !_ok_ {
			err = errors.New("Scene error")
			return
		}
		_v.Scene = int32(_tempNum_)
	}
	{
		var _ok_ bool
		if _v.Res, _ok_ = _buf["Res"].(string); !_ok_ {
			err = errors.New("Res error")
			return
		}
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Type"].(float64); !_ok_ {
			err = errors.New("Type error")
			return
		}
		_v.Type = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Radius"].(float64); !_ok_ {
			err = errors.New("Radius error")
			return
		}
		_v.Radius = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Skill"].(float64); !_ok_ {
			err = errors.New("Skill error")
			return
		}
		_v.Skill = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Drop"].(float64); !_ok_ {
			err = errors.New("Drop error")
			return
		}
		_v.Drop = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["ItemCD"].(float64); !_ok_ {
			err = errors.New("ItemCD error")
			return
		}
		_v.ItemCD = int32(_tempNum_)
	}
	return
}

func DeserializeMapItem(_buf map[string]interface{}) (*MapItem, error) {
	v := &MapItem{}
	if err := v.Deserialize(_buf); err == nil {
		return v, nil
	} else {
		return nil, err
	}
}
