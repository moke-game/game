//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import "errors"

type DropGroup struct {
	ID          int32
	Mark        string
	DropGroupID int32
	ItemID      int32
	DropWeights int32
	MinNum      int32
	MaxNum      int32
}

const TypeId_DropGroup = 1468265648

func (*DropGroup) GetTypeId() int32 {
	return 1468265648
}

func (_v *DropGroup) Deserialize(_buf map[string]interface{}) (err error) {
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["ID"].(float64); !_ok_ {
			err = errors.New("ID error")
			return
		}
		_v.ID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		if _v.Mark, _ok_ = _buf["Mark"].(string); !_ok_ {
			err = errors.New("Mark error")
			return
		}
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["DropGroupID"].(float64); !_ok_ {
			err = errors.New("DropGroupID error")
			return
		}
		_v.DropGroupID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["ItemID"].(float64); !_ok_ {
			err = errors.New("ItemID error")
			return
		}
		_v.ItemID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["DropWeights"].(float64); !_ok_ {
			err = errors.New("DropWeights error")
			return
		}
		_v.DropWeights = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["MinNum"].(float64); !_ok_ {
			err = errors.New("MinNum error")
			return
		}
		_v.MinNum = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["MaxNum"].(float64); !_ok_ {
			err = errors.New("MaxNum error")
			return
		}
		_v.MaxNum = int32(_tempNum_)
	}
	return
}

func DeserializeDropGroup(_buf map[string]interface{}) (*DropGroup, error) {
	v := &DropGroup{}
	if err := v.Deserialize(_buf); err == nil {
		return v, nil
	} else {
		return nil, err
	}
}
