//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import "errors"

type CharacterLvup struct {
	ID            int32
	HeroID        int32
	Name          string
	Level         int32
	AttrAtk       float32
	AttrHp        float32
	AttrDef       float32
	AttrCri       float32
	AttrMoveSpeed int32
	AttrCriDmg    float32
	LvUpGold      int32
	LvUpHeroCoin  int32
}

const TypeId_CharacterLvup = -991198130

func (*CharacterLvup) GetTypeId() int32 {
	return -991198130
}

func (_v *CharacterLvup) Deserialize(_buf map[string]interface{}) (err error) {
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["ID"].(float64); !_ok_ {
			err = errors.New("ID error")
			return
		}
		_v.ID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["HeroID"].(float64); !_ok_ {
			err = errors.New("HeroID error")
			return
		}
		_v.HeroID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		if _v.Name, _ok_ = _buf["Name"].(string); !_ok_ {
			err = errors.New("Name error")
			return
		}
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Level"].(float64); !_ok_ {
			err = errors.New("Level error")
			return
		}
		_v.Level = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["AttrAtk"].(float64); !_ok_ {
			err = errors.New("AttrAtk error")
			return
		}
		_v.AttrAtk = float32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["AttrHp"].(float64); !_ok_ {
			err = errors.New("AttrHp error")
			return
		}
		_v.AttrHp = float32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["AttrDef"].(float64); !_ok_ {
			err = errors.New("AttrDef error")
			return
		}
		_v.AttrDef = float32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["AttrCri"].(float64); !_ok_ {
			err = errors.New("AttrCri error")
			return
		}
		_v.AttrCri = float32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["AttrMoveSpeed"].(float64); !_ok_ {
			err = errors.New("AttrMoveSpeed error")
			return
		}
		_v.AttrMoveSpeed = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["AttrCriDmg"].(float64); !_ok_ {
			err = errors.New("AttrCriDmg error")
			return
		}
		_v.AttrCriDmg = float32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["LvUpGold"].(float64); !_ok_ {
			err = errors.New("LvUpGold error")
			return
		}
		_v.LvUpGold = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["LvUpHeroCoin"].(float64); !_ok_ {
			err = errors.New("LvUpHeroCoin error")
			return
		}
		_v.LvUpHeroCoin = int32(_tempNum_)
	}
	return
}

func DeserializeCharacterLvup(_buf map[string]interface{}) (*CharacterLvup, error) {
	v := &CharacterLvup{}
	if err := v.Deserialize(_buf); err == nil {
		return v, nil
	} else {
		return nil, err
	}
}
