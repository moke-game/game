//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import "errors"

type MedalReward struct {
	ID            int32
	MedalCount    int32
	Mark          string
	RewardType    int32
	TypeID        int32
	RewardNum     int32
	RewardDisplay string
	Name          string
	Desp          string
	Icon          string
	Quality       int32
	Distinction   int32
}

const TypeId_MedalReward = 1403387110

func (*MedalReward) GetTypeId() int32 {
	return 1403387110
}

func (_v *MedalReward) Deserialize(_buf map[string]interface{}) (err error) {
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["ID"].(float64); !_ok_ {
			err = errors.New("ID error")
			return
		}
		_v.ID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["MedalCount"].(float64); !_ok_ {
			err = errors.New("MedalCount error")
			return
		}
		_v.MedalCount = int32(_tempNum_)
	}
	{
		var _ok_ bool
		if _v.Mark, _ok_ = _buf["Mark"].(string); !_ok_ {
			err = errors.New("Mark error")
			return
		}
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["RewardType"].(float64); !_ok_ {
			err = errors.New("RewardType error")
			return
		}
		_v.RewardType = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["TypeID"].(float64); !_ok_ {
			err = errors.New("TypeID error")
			return
		}
		_v.TypeID = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["RewardNum"].(float64); !_ok_ {
			err = errors.New("RewardNum error")
			return
		}
		_v.RewardNum = int32(_tempNum_)
	}
	{
		var _ok_ bool
		if _v.RewardDisplay, _ok_ = _buf["RewardDisplay"].(string); !_ok_ {
			err = errors.New("RewardDisplay error")
			return
		}
	}
	{
		var _ok_ bool
		if _v.Name, _ok_ = _buf["Name"].(string); !_ok_ {
			err = errors.New("Name error")
			return
		}
	}
	{
		var _ok_ bool
		if _v.Desp, _ok_ = _buf["Desp"].(string); !_ok_ {
			err = errors.New("Desp error")
			return
		}
	}
	{
		var _ok_ bool
		if _v.Icon, _ok_ = _buf["Icon"].(string); !_ok_ {
			err = errors.New("Icon error")
			return
		}
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Quality"].(float64); !_ok_ {
			err = errors.New("Quality error")
			return
		}
		_v.Quality = int32(_tempNum_)
	}
	{
		var _ok_ bool
		var _tempNum_ float64
		if _tempNum_, _ok_ = _buf["Distinction"].(float64); !_ok_ {
			err = errors.New("Distinction error")
			return
		}
		_v.Distinction = int32(_tempNum_)
	}
	return
}

func DeserializeMedalReward(_buf map[string]interface{}) (*MedalReward, error) {
	v := &MedalReward{}
	if err := v.Deserialize(_buf); err == nil {
		return v, nil
	} else {
		return nil, err
	}
}
