// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cashbattle/cashbattle.proto

package cashbattle

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CashBattleStatus int32

const (
	CashBattleStatus_BATTLE_NONE      CashBattleStatus = 0 //未开放
	CashBattleStatus_BATTLE_SIGN      CashBattleStatus = 1 //报名期
	CashBattleStatus_BATTLE_SIGN_END  CashBattleStatus = 2 //报名截至
	CashBattleStatus_BATTLE_GUESSING  CashBattleStatus = 3 //竞猜期
	CashBattleStatus_BATTLE_GET_READY CashBattleStatus = 4 //选手准备期
	CashBattleStatus_BATTLE_BATTLING  CashBattleStatus = 5 //比赛期
	CashBattleStatus_BATTLE_IDLE      CashBattleStatus = 6 //等待期 休整期
	CashBattleStatus_BATTLE_END       CashBattleStatus = 7 //赛事结束
)

// Enum value maps for CashBattleStatus.
var (
	CashBattleStatus_name = map[int32]string{
		0: "BATTLE_NONE",
		1: "BATTLE_SIGN",
		2: "BATTLE_SIGN_END",
		3: "BATTLE_GUESSING",
		4: "BATTLE_GET_READY",
		5: "BATTLE_BATTLING",
		6: "BATTLE_IDLE",
		7: "BATTLE_END",
	}
	CashBattleStatus_value = map[string]int32{
		"BATTLE_NONE":      0,
		"BATTLE_SIGN":      1,
		"BATTLE_SIGN_END":  2,
		"BATTLE_GUESSING":  3,
		"BATTLE_GET_READY": 4,
		"BATTLE_BATTLING":  5,
		"BATTLE_IDLE":      6,
		"BATTLE_END":       7,
	}
)

func (x CashBattleStatus) Enum() *CashBattleStatus {
	p := new(CashBattleStatus)
	*p = x
	return p
}

func (x CashBattleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CashBattleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cashbattle_cashbattle_proto_enumTypes[0].Descriptor()
}

func (CashBattleStatus) Type() protoreflect.EnumType {
	return &file_cashbattle_cashbattle_proto_enumTypes[0]
}

func (x CashBattleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CashBattleStatus.Descriptor instead.
func (CashBattleStatus) EnumDescriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{0}
}

type CashBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime       int64                `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                    //现金solo赛开启报名时间 不可为空 秒时间戳
	Deadline        int64                `protobuf:"varint,2,opt,name=deadline,proto3" json:"deadline,omitempty"`                                                                                                       //截至日期 不可为空 秒时间戳
	SignCoe         int64                `protobuf:"varint,3,opt,name=sign_coe,json=signCoe,proto3" json:"sign_coe,omitempty"`                                                                                          //报名系数(系数*10000，不使用小数)
	StakeCoe        int64                `protobuf:"varint,4,opt,name=stake_coe,json=stakeCoe,proto3" json:"stake_coe,omitempty"`                                                                                       //下注人数系数(系数*10000)
	BattleIntroduce *CashBattleIntroduce `protobuf:"bytes,5,opt,name=battle_introduce,json=battleIntroduce,proto3" json:"battle_introduce,omitempty"`                                                                   //比赛信息 不可为空 key 语言
	MedalNum        int32                `protobuf:"varint,6,opt,name=medal_num,json=medalNum,proto3" json:"medal_num,omitempty"`                                                                                       //报名条件 账号奖杯数
	HeroNum         int32                `protobuf:"varint,7,opt,name=hero_num,json=heroNum,proto3" json:"hero_num,omitempty"`                                                                                          //报名条件 英雄数量
	PetNum          int32                `protobuf:"varint,8,opt,name=pet_num,json=petNum,proto3" json:"pet_num,omitempty"`                                                                                             //报名条件 宠物数量
	ItemMap         map[int32]int32      `protobuf:"bytes,9,rep,name=item_map,json=itemMap,proto3" json:"item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //报名条件 道具ID:数量
}

func (x *CashBattleInfo) Reset() {
	*x = CashBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleInfo) ProtoMessage() {}

func (x *CashBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleInfo.ProtoReflect.Descriptor instead.
func (*CashBattleInfo) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{0}
}

func (x *CashBattleInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CashBattleInfo) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *CashBattleInfo) GetSignCoe() int64 {
	if x != nil {
		return x.SignCoe
	}
	return 0
}

func (x *CashBattleInfo) GetStakeCoe() int64 {
	if x != nil {
		return x.StakeCoe
	}
	return 0
}

func (x *CashBattleInfo) GetBattleIntroduce() *CashBattleIntroduce {
	if x != nil {
		return x.BattleIntroduce
	}
	return nil
}

func (x *CashBattleInfo) GetMedalNum() int32 {
	if x != nil {
		return x.MedalNum
	}
	return 0
}

func (x *CashBattleInfo) GetHeroNum() int32 {
	if x != nil {
		return x.HeroNum
	}
	return 0
}

func (x *CashBattleInfo) GetPetNum() int32 {
	if x != nil {
		return x.PetNum
	}
	return 0
}

func (x *CashBattleInfo) GetItemMap() map[int32]int32 {
	if x != nil {
		return x.ItemMap
	}
	return nil
}

type CashBattleIntroduce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language     string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`         //语言 不可为空
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`               //活动标题 不可为空
	Introduction string `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"` //活动简介 需支持字号和颜色 不可为空
	Condition    string `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`       //活动条件描述
}

func (x *CashBattleIntroduce) Reset() {
	*x = CashBattleIntroduce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleIntroduce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleIntroduce) ProtoMessage() {}

func (x *CashBattleIntroduce) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleIntroduce.ProtoReflect.Descriptor instead.
func (*CashBattleIntroduce) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{1}
}

func (x *CashBattleIntroduce) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CashBattleIntroduce) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CashBattleIntroduce) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CashBattleIntroduce) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type GetCashBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`           //玩家ID
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"` //客户端语言
}

func (x *GetCashBattleRequest) Reset() {
	*x = GetCashBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleRequest) ProtoMessage() {}

func (x *GetCashBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{2}
}

func (x *GetCashBattleRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetCashBattleRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetCashBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleInfo    *CashBattleInfo  `protobuf:"bytes,1,opt,name=battle_info,json=battleInfo,proto3" json:"battle_info,omitempty"`
	Status        CashBattleStatus `protobuf:"varint,2,opt,name=status,proto3,enum=cashbattle.CashBattleStatus" json:"status,omitempty"`                                                       //当前阶段
	IsJoin        bool             `protobuf:"varint,3,opt,name=is_join,json=isJoin,proto3" json:"is_join,omitempty"`                                                                          //玩家是否报名
	IsPlayer      bool             `protobuf:"varint,4,opt,name=is_player,json=isPlayer,proto3" json:"is_player,omitempty"`                                                                    //玩家是否入选
	JoinNum       int32            `protobuf:"varint,5,opt,name=join_num,json=joinNum,proto3" json:"join_num,omitempty"`                                                                       //报名人数
	StatusEndTime int64            `protobuf:"varint,6,opt,name=status_end_time,json=statusEndTime,proto3" json:"status_end_time,omitempty"`                                                   //开赛时间戳
	HeroId        int32            `protobuf:"varint,7,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`                                                                          //选中角色ID
	Stake         map[int64]int64  `protobuf:"bytes,8,rep,name=stake,proto3" json:"stake,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //自己的竞猜信息 key:押注玩家ID value:押注钻石数量
	IsLock        bool             `protobuf:"varint,9,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"`                                                                          //当前英雄是否锁定
}

func (x *GetCashBattleResponse) Reset() {
	*x = GetCashBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleResponse) ProtoMessage() {}

func (x *GetCashBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{3}
}

func (x *GetCashBattleResponse) GetBattleInfo() *CashBattleInfo {
	if x != nil {
		return x.BattleInfo
	}
	return nil
}

func (x *GetCashBattleResponse) GetStatus() CashBattleStatus {
	if x != nil {
		return x.Status
	}
	return CashBattleStatus_BATTLE_NONE
}

func (x *GetCashBattleResponse) GetIsJoin() bool {
	if x != nil {
		return x.IsJoin
	}
	return false
}

func (x *GetCashBattleResponse) GetIsPlayer() bool {
	if x != nil {
		return x.IsPlayer
	}
	return false
}

func (x *GetCashBattleResponse) GetJoinNum() int32 {
	if x != nil {
		return x.JoinNum
	}
	return 0
}

func (x *GetCashBattleResponse) GetStatusEndTime() int64 {
	if x != nil {
		return x.StatusEndTime
	}
	return 0
}

func (x *GetCashBattleResponse) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *GetCashBattleResponse) GetStake() map[int64]int64 {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *GetCashBattleResponse) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

type CashBattlePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`        //玩家id
	PlayerHead string `protobuf:"bytes,2,opt,name=player_head,json=playerHead,proto3" json:"player_head,omitempty"`  //玩家头像
	PlayerNick string `protobuf:"bytes,3,opt,name=player_nick,json=playerNick,proto3" json:"player_nick,omitempty"`  //玩家昵称
	StakeValue int64  `protobuf:"varint,4,opt,name=stake_value,json=stakeValue,proto3" json:"stake_value,omitempty"` //竞猜钻石数
	HeroCup    int32  `protobuf:"varint,5,opt,name=hero_cup,json=heroCup,proto3" json:"hero_cup,omitempty"`          //英雄杯数
}

func (x *CashBattlePlayer) Reset() {
	*x = CashBattlePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattlePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattlePlayer) ProtoMessage() {}

func (x *CashBattlePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattlePlayer.ProtoReflect.Descriptor instead.
func (*CashBattlePlayer) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{4}
}

func (x *CashBattlePlayer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CashBattlePlayer) GetPlayerHead() string {
	if x != nil {
		return x.PlayerHead
	}
	return ""
}

func (x *CashBattlePlayer) GetPlayerNick() string {
	if x != nil {
		return x.PlayerNick
	}
	return ""
}

func (x *CashBattlePlayer) GetStakeValue() int64 {
	if x != nil {
		return x.StakeValue
	}
	return 0
}

func (x *CashBattlePlayer) GetHeroCup() int32 {
	if x != nil {
		return x.HeroCup
	}
	return 0
}

type CashBattleVersus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid         string            `protobuf:"bytes,1,opt,name=vid,proto3" json:"vid,omitempty"`                                    //对战信息唯一ID
	LeftPlayer  *CashBattlePlayer `protobuf:"bytes,2,opt,name=left_player,json=leftPlayer,proto3" json:"left_player,omitempty"`    //左侧玩家信息
	RightPlayer *CashBattlePlayer `protobuf:"bytes,3,opt,name=right_player,json=rightPlayer,proto3" json:"right_player,omitempty"` //右侧玩家信息
	IsFighting  bool              `protobuf:"varint,4,opt,name=is_fighting,json=isFighting,proto3" json:"is_fighting,omitempty"`   // bool 是否战斗中
	WinnerId    string            `protobuf:"bytes,5,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`          //获胜者ID
}

func (x *CashBattleVersus) Reset() {
	*x = CashBattleVersus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleVersus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleVersus) ProtoMessage() {}

func (x *CashBattleVersus) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleVersus.ProtoReflect.Descriptor instead.
func (*CashBattleVersus) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{5}
}

func (x *CashBattleVersus) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *CashBattleVersus) GetLeftPlayer() *CashBattlePlayer {
	if x != nil {
		return x.LeftPlayer
	}
	return nil
}

func (x *CashBattleVersus) GetRightPlayer() *CashBattlePlayer {
	if x != nil {
		return x.RightPlayer
	}
	return nil
}

func (x *CashBattleVersus) GetIsFighting() bool {
	if x != nil {
		return x.IsFighting
	}
	return false
}

func (x *CashBattleVersus) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

type GetCashBattleVersusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleVersusRequest) Reset() {
	*x = GetCashBattleVersusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleVersusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleVersusRequest) ProtoMessage() {}

func (x *GetCashBattleVersusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleVersusRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleVersusRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{6}
}

type GetCashBattleVersusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleVersus []*CashBattleVersus `protobuf:"bytes,1,rep,name=battle_versus,json=battleVersus,proto3" json:"battle_versus,omitempty"` //对战表
}

func (x *GetCashBattleVersusResponse) Reset() {
	*x = GetCashBattleVersusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleVersusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleVersusResponse) ProtoMessage() {}

func (x *GetCashBattleVersusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleVersusResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleVersusResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{7}
}

func (x *GetCashBattleVersusResponse) GetBattleVersus() []*CashBattleVersus {
	if x != nil {
		return x.BattleVersus
	}
	return nil
}

type GetCashBattleGuessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleGuessRequest) Reset() {
	*x = GetCashBattleGuessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleGuessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleGuessRequest) ProtoMessage() {}

func (x *GetCashBattleGuessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleGuessRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleGuessRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{8}
}

type GetCashBattleGuessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleGuessResponse) Reset() {
	*x = GetCashBattleGuessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleGuessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleGuessResponse) ProtoMessage() {}

func (x *GetCashBattleGuessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleGuessResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleGuessResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{9}
}

type JoinCashBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Head string `protobuf:"bytes,3,opt,name=head,proto3" json:"head,omitempty"`
}

func (x *JoinCashBattleRequest) Reset() {
	*x = JoinCashBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCashBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCashBattleRequest) ProtoMessage() {}

func (x *JoinCashBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCashBattleRequest.ProtoReflect.Descriptor instead.
func (*JoinCashBattleRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{10}
}

func (x *JoinCashBattleRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *JoinCashBattleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JoinCashBattleRequest) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

type JoinCashBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashBattleId string `protobuf:"bytes,1,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"`
}

func (x *JoinCashBattleResponse) Reset() {
	*x = JoinCashBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCashBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCashBattleResponse) ProtoMessage() {}

func (x *JoinCashBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCashBattleResponse.ProtoReflect.Descriptor instead.
func (*JoinCashBattleResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{11}
}

func (x *JoinCashBattleResponse) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type ConfirmCashBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ConfirmCashBattleRequest) Reset() {
	*x = ConfirmCashBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmCashBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmCashBattleRequest) ProtoMessage() {}

func (x *ConfirmCashBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmCashBattleRequest.ProtoReflect.Descriptor instead.
func (*ConfirmCashBattleRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{12}
}

func (x *ConfirmCashBattleRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ConfirmCashBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfirmCashBattleResponse) Reset() {
	*x = ConfirmCashBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmCashBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmCashBattleResponse) ProtoMessage() {}

func (x *ConfirmCashBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmCashBattleResponse.ProtoReflect.Descriptor instead.
func (*ConfirmCashBattleResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{13}
}

type StakeCashBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                  //玩家UID
	PlayerId   string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`        //下注的选手UID
	StakeValue int32  `protobuf:"varint,3,opt,name=stake_value,json=stakeValue,proto3" json:"stake_value,omitempty"` //下注额
}

func (x *StakeCashBattleRequest) Reset() {
	*x = StakeCashBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeCashBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeCashBattleRequest) ProtoMessage() {}

func (x *StakeCashBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeCashBattleRequest.ProtoReflect.Descriptor instead.
func (*StakeCashBattleRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{14}
}

func (x *StakeCashBattleRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *StakeCashBattleRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *StakeCashBattleRequest) GetStakeValue() int32 {
	if x != nil {
		return x.StakeValue
	}
	return 0
}

type StakeCashBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                   //下注的选手UID
	TotalStakeValue int64             `protobuf:"varint,2,opt,name=total_stake_value,json=totalStakeValue,proto3" json:"total_stake_value,omitempty"` //下注该玩家的总下注额
	Versus          *CashBattleVersus `protobuf:"bytes,3,opt,name=versus,proto3" json:"versus,omitempty"`                                             //对战信息
}

func (x *StakeCashBattleResponse) Reset() {
	*x = StakeCashBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeCashBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeCashBattleResponse) ProtoMessage() {}

func (x *StakeCashBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeCashBattleResponse.ProtoReflect.Descriptor instead.
func (*StakeCashBattleResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{15}
}

func (x *StakeCashBattleResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *StakeCashBattleResponse) GetTotalStakeValue() int64 {
	if x != nil {
		return x.TotalStakeValue
	}
	return 0
}

func (x *StakeCashBattleResponse) GetVersus() *CashBattleVersus {
	if x != nil {
		return x.Versus
	}
	return nil
}

type IsPlayerJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` //需要查询的玩家UID
}

func (x *IsPlayerJoinRequest) Reset() {
	*x = IsPlayerJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPlayerJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPlayerJoinRequest) ProtoMessage() {}

func (x *IsPlayerJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPlayerJoinRequest.ProtoReflect.Descriptor instead.
func (*IsPlayerJoinRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{16}
}

func (x *IsPlayerJoinRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type IsPlayerJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPlayerJoin bool `protobuf:"varint,1,opt,name=is_player_join,json=isPlayerJoin,proto3" json:"is_player_join,omitempty"`
}

func (x *IsPlayerJoinResponse) Reset() {
	*x = IsPlayerJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPlayerJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPlayerJoinResponse) ProtoMessage() {}

func (x *IsPlayerJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPlayerJoinResponse.ProtoReflect.Descriptor instead.
func (*IsPlayerJoinResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{17}
}

func (x *IsPlayerJoinResponse) GetIsPlayerJoin() bool {
	if x != nil {
		return x.IsPlayerJoin
	}
	return false
}

type IsPlayerBeSelectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` //需要查询的玩家ID
}

func (x *IsPlayerBeSelectedRequest) Reset() {
	*x = IsPlayerBeSelectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPlayerBeSelectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPlayerBeSelectedRequest) ProtoMessage() {}

func (x *IsPlayerBeSelectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPlayerBeSelectedRequest.ProtoReflect.Descriptor instead.
func (*IsPlayerBeSelectedRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{18}
}

func (x *IsPlayerBeSelectedRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type IsPlayerBeSelectedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPlayerBeSelected bool `protobuf:"varint,1,opt,name=is_player_be_selected,json=isPlayerBeSelected,proto3" json:"is_player_be_selected,omitempty"`
}

func (x *IsPlayerBeSelectedResponse) Reset() {
	*x = IsPlayerBeSelectedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPlayerBeSelectedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPlayerBeSelectedResponse) ProtoMessage() {}

func (x *IsPlayerBeSelectedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPlayerBeSelectedResponse.ProtoReflect.Descriptor instead.
func (*IsPlayerBeSelectedResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{19}
}

func (x *IsPlayerBeSelectedResponse) GetIsPlayerBeSelected() bool {
	if x != nil {
		return x.IsPlayerBeSelected
	}
	return false
}

type IsPlayerConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` //需要查询的玩家ID
}

func (x *IsPlayerConfirmRequest) Reset() {
	*x = IsPlayerConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPlayerConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPlayerConfirmRequest) ProtoMessage() {}

func (x *IsPlayerConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPlayerConfirmRequest.ProtoReflect.Descriptor instead.
func (*IsPlayerConfirmRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{20}
}

func (x *IsPlayerConfirmRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type IsPlayerConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPlayerConfirm bool `protobuf:"varint,1,opt,name=is_player_confirm,json=isPlayerConfirm,proto3" json:"is_player_confirm,omitempty"`
}

func (x *IsPlayerConfirmResponse) Reset() {
	*x = IsPlayerConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPlayerConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPlayerConfirmResponse) ProtoMessage() {}

func (x *IsPlayerConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPlayerConfirmResponse.ProtoReflect.Descriptor instead.
func (*IsPlayerConfirmResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{21}
}

func (x *IsPlayerConfirmResponse) GetIsPlayerConfirm() bool {
	if x != nil {
		return x.IsPlayerConfirm
	}
	return false
}

type GetCashBattleConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleConditionRequest) Reset() {
	*x = GetCashBattleConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleConditionRequest) ProtoMessage() {}

func (x *GetCashBattleConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleConditionRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleConditionRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{22}
}

type GetCashBattleConditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MedalNum int32 `protobuf:"varint,1,opt,name=medal_num,json=medalNum,proto3" json:"medal_num,omitempty"` //报名条件 奖杯数
	HeroNum  int32 `protobuf:"varint,2,opt,name=hero_num,json=heroNum,proto3" json:"hero_num,omitempty"`    //报名条件 英雄数
	PetNum   int32 `protobuf:"varint,3,opt,name=pet_num,json=petNum,proto3" json:"pet_num,omitempty"`       //报名条件 宠物数
	ItemId   int32 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`       //报名条件 道具ID
	ItemNum  int32 `protobuf:"varint,5,opt,name=item_num,json=itemNum,proto3" json:"item_num,omitempty"`    //报名条件 道具数量
}

func (x *GetCashBattleConditionResponse) Reset() {
	*x = GetCashBattleConditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleConditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleConditionResponse) ProtoMessage() {}

func (x *GetCashBattleConditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleConditionResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleConditionResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{23}
}

func (x *GetCashBattleConditionResponse) GetMedalNum() int32 {
	if x != nil {
		return x.MedalNum
	}
	return 0
}

func (x *GetCashBattleConditionResponse) GetHeroNum() int32 {
	if x != nil {
		return x.HeroNum
	}
	return 0
}

func (x *GetCashBattleConditionResponse) GetPetNum() int32 {
	if x != nil {
		return x.PetNum
	}
	return 0
}

func (x *GetCashBattleConditionResponse) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetCashBattleConditionResponse) GetItemNum() int32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

type SelectBattleHeroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	HeroId int32  `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	IsLock bool   `protobuf:"varint,3,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"` //是否锁定
}

func (x *SelectBattleHeroRequest) Reset() {
	*x = SelectBattleHeroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectBattleHeroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectBattleHeroRequest) ProtoMessage() {}

func (x *SelectBattleHeroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectBattleHeroRequest.ProtoReflect.Descriptor instead.
func (*SelectBattleHeroRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{24}
}

func (x *SelectBattleHeroRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SelectBattleHeroRequest) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *SelectBattleHeroRequest) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

type SelectBattleHeroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelectBattleHeroResponse) Reset() {
	*x = SelectBattleHeroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectBattleHeroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectBattleHeroResponse) ProtoMessage() {}

func (x *SelectBattleHeroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectBattleHeroResponse.ProtoReflect.Descriptor instead.
func (*SelectBattleHeroResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{25}
}

type GetCashBattleStartTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleStartTimeRequest) Reset() {
	*x = GetCashBattleStartTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleStartTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleStartTimeRequest) ProtoMessage() {}

func (x *GetCashBattleStartTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleStartTimeRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleStartTimeRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{26}
}

type GetCashBattleStartTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleStartTime int64 `protobuf:"varint,1,opt,name=battle_start_time,json=battleStartTime,proto3" json:"battle_start_time,omitempty"`
}

func (x *GetCashBattleStartTimeResponse) Reset() {
	*x = GetCashBattleStartTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleStartTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleStartTimeResponse) ProtoMessage() {}

func (x *GetCashBattleStartTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleStartTimeResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleStartTimeResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{27}
}

func (x *GetCashBattleStartTimeResponse) GetBattleStartTime() int64 {
	if x != nil {
		return x.BattleStartTime
	}
	return 0
}

type WatchCashBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *WatchCashBattleRequest) Reset() {
	*x = WatchCashBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchCashBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCashBattleRequest) ProtoMessage() {}

func (x *WatchCashBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCashBattleRequest.ProtoReflect.Descriptor instead.
func (*WatchCashBattleRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{28}
}

func (x *WatchCashBattleRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type WatchCashBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *GetCashBattleResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *WatchCashBattleResponse) Reset() {
	*x = WatchCashBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchCashBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCashBattleResponse) ProtoMessage() {}

func (x *WatchCashBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCashBattleResponse.ProtoReflect.Descriptor instead.
func (*WatchCashBattleResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{29}
}

func (x *WatchCashBattleResponse) GetResponse() *GetCashBattleResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type BattleResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player_1Uid  string `protobuf:"bytes,1,opt,name=player_1_uid,json=player1Uid,proto3" json:"player_1_uid,omitempty"`     //玩家1ID
	Player_1Kill int32  `protobuf:"varint,2,opt,name=player_1_kill,json=player1Kill,proto3" json:"player_1_kill,omitempty"` //玩家1击杀数
	Player_1Die  int32  `protobuf:"varint,3,opt,name=player_1_die,json=player1Die,proto3" json:"player_1_die,omitempty"`    //玩家1死亡数
	Player_2Uid  string `protobuf:"bytes,4,opt,name=player_2_uid,json=player2Uid,proto3" json:"player_2_uid,omitempty"`     //玩家2ID
	Player_2Kill int32  `protobuf:"varint,5,opt,name=player_2_kill,json=player2Kill,proto3" json:"player_2_kill,omitempty"` //玩家2击杀数
	Player_2Die  int32  `protobuf:"varint,6,opt,name=player_2_die,json=player2Die,proto3" json:"player_2_die,omitempty"`    //玩家2死亡数
	Winner       string `protobuf:"bytes,7,opt,name=winner,proto3" json:"winner,omitempty"`                                 //最终获胜玩家ID
}

func (x *BattleResultRequest) Reset() {
	*x = BattleResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleResultRequest) ProtoMessage() {}

func (x *BattleResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleResultRequest.ProtoReflect.Descriptor instead.
func (*BattleResultRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{30}
}

func (x *BattleResultRequest) GetPlayer_1Uid() string {
	if x != nil {
		return x.Player_1Uid
	}
	return ""
}

func (x *BattleResultRequest) GetPlayer_1Kill() int32 {
	if x != nil {
		return x.Player_1Kill
	}
	return 0
}

func (x *BattleResultRequest) GetPlayer_1Die() int32 {
	if x != nil {
		return x.Player_1Die
	}
	return 0
}

func (x *BattleResultRequest) GetPlayer_2Uid() string {
	if x != nil {
		return x.Player_2Uid
	}
	return ""
}

func (x *BattleResultRequest) GetPlayer_2Kill() int32 {
	if x != nil {
		return x.Player_2Kill
	}
	return 0
}

func (x *BattleResultRequest) GetPlayer_2Die() int32 {
	if x != nil {
		return x.Player_2Die
	}
	return 0
}

func (x *BattleResultRequest) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

type BattleResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BattleResultResponse) Reset() {
	*x = BattleResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleResultResponse) ProtoMessage() {}

func (x *BattleResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleResultResponse.ProtoReflect.Descriptor instead.
func (*BattleResultResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{31}
}

type CashBattleGratuityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       //玩家ID
	GratuityId string `protobuf:"bytes,2,opt,name=gratuity_id,json=gratuityId,proto3" json:"gratuity_id,omitempty"` //被打赏的选手ID
	Gold       int64  `protobuf:"varint,3,opt,name=gold,proto3" json:"gold,omitempty"`                              //打赏的金币数
}

func (x *CashBattleGratuityRequest) Reset() {
	*x = CashBattleGratuityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleGratuityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleGratuityRequest) ProtoMessage() {}

func (x *CashBattleGratuityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleGratuityRequest.ProtoReflect.Descriptor instead.
func (*CashBattleGratuityRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{32}
}

func (x *CashBattleGratuityRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CashBattleGratuityRequest) GetGratuityId() string {
	if x != nil {
		return x.GratuityId
	}
	return ""
}

func (x *CashBattleGratuityRequest) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type CashBattleGratuityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CashBattleGratuityResponse) Reset() {
	*x = CashBattleGratuityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleGratuityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleGratuityResponse) ProtoMessage() {}

func (x *CashBattleGratuityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleGratuityResponse.ProtoReflect.Descriptor instead.
func (*CashBattleGratuityResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{33}
}

type PubCashBattleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashBattleId string `protobuf:"bytes,1,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"`
}

func (x *PubCashBattleInfoRequest) Reset() {
	*x = PubCashBattleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleInfoRequest) ProtoMessage() {}

func (x *PubCashBattleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleInfoRequest.ProtoReflect.Descriptor instead.
func (*PubCashBattleInfoRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{34}
}

func (x *PubCashBattleInfoRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type PubCashBattleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PubCashBattleInfoResponse) Reset() {
	*x = PubCashBattleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleInfoResponse) ProtoMessage() {}

func (x *PubCashBattleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleInfoResponse.ProtoReflect.Descriptor instead.
func (*PubCashBattleInfoResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{35}
}

type PubCashBattleVersusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashBattleId string `protobuf:"bytes,1,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"`
}

func (x *PubCashBattleVersusRequest) Reset() {
	*x = PubCashBattleVersusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleVersusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleVersusRequest) ProtoMessage() {}

func (x *PubCashBattleVersusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleVersusRequest.ProtoReflect.Descriptor instead.
func (*PubCashBattleVersusRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{36}
}

func (x *PubCashBattleVersusRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type PubCashBattleVersusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PubCashBattleVersusResponse) Reset() {
	*x = PubCashBattleVersusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleVersusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleVersusResponse) ProtoMessage() {}

func (x *PubCashBattleVersusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleVersusResponse.ProtoReflect.Descriptor instead.
func (*PubCashBattleVersusResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{37}
}

type PubCashBattleCoeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashBattleId string `protobuf:"bytes,1,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"`
	Type         int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`   //系数类型 1=报名人数系数 2=竞猜参与人数系数
	Value        int32  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"` //系数值
}

func (x *PubCashBattleCoeRequest) Reset() {
	*x = PubCashBattleCoeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleCoeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleCoeRequest) ProtoMessage() {}

func (x *PubCashBattleCoeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleCoeRequest.ProtoReflect.Descriptor instead.
func (*PubCashBattleCoeRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{38}
}

func (x *PubCashBattleCoeRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

func (x *PubCashBattleCoeRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PubCashBattleCoeRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PubCashBattleCoeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PubCashBattleCoeResponse) Reset() {
	*x = PubCashBattleCoeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleCoeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleCoeResponse) ProtoMessage() {}

func (x *PubCashBattleCoeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleCoeResponse.ProtoReflect.Descriptor instead.
func (*PubCashBattleCoeResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{39}
}

type GetCashBattleVersusMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleVersusMatchRequest) Reset() {
	*x = GetCashBattleVersusMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleVersusMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleVersusMatchRequest) ProtoMessage() {}

func (x *GetCashBattleVersusMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleVersusMatchRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleVersusMatchRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{40}
}

type GetCashBattleVersusMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match []*CashBattleVersus `protobuf:"bytes,1,rep,name=match,proto3" json:"match,omitempty"`
}

func (x *GetCashBattleVersusMatchResponse) Reset() {
	*x = GetCashBattleVersusMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleVersusMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleVersusMatchResponse) ProtoMessage() {}

func (x *GetCashBattleVersusMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleVersusMatchResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleVersusMatchResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{41}
}

func (x *GetCashBattleVersusMatchResponse) GetMatch() []*CashBattleVersus {
	if x != nil {
		return x.Match
	}
	return nil
}

type GetCashBattleResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCashBattleResultRequest) Reset() {
	*x = GetCashBattleResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleResultRequest) ProtoMessage() {}

func (x *GetCashBattleResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleResultRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleResultRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{42}
}

type GetCashBattleResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match []*CashBattleVersus `protobuf:"bytes,1,rep,name=match,proto3" json:"match,omitempty"`
}

func (x *GetCashBattleResultResponse) Reset() {
	*x = GetCashBattleResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleResultResponse) ProtoMessage() {}

func (x *GetCashBattleResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleResultResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleResultResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{43}
}

func (x *GetCashBattleResultResponse) GetMatch() []*CashBattleVersus {
	if x != nil {
		return x.Match
	}
	return nil
}

type SettleCashBattleRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SettleCashBattleRewardRequest) Reset() {
	*x = SettleCashBattleRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleCashBattleRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleCashBattleRewardRequest) ProtoMessage() {}

func (x *SettleCashBattleRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleCashBattleRewardRequest.ProtoReflect.Descriptor instead.
func (*SettleCashBattleRewardRequest) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{44}
}

type SettleCashBattleRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SettleCashBattleRewardResponse) Reset() {
	*x = SettleCashBattleRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cashbattle_cashbattle_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleCashBattleRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleCashBattleRewardResponse) ProtoMessage() {}

func (x *SettleCashBattleRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashbattle_cashbattle_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleCashBattleRewardResponse.ProtoReflect.Descriptor instead.
func (*SettleCashBattleRewardResponse) Descriptor() ([]byte, []int) {
	return file_cashbattle_cashbattle_proto_rawDescGZIP(), []int{45}
}

var File_cashbattle_cashbattle_proto protoreflect.FileDescriptor

var file_cashbattle_cashbattle_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2f, 0x63, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x0e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x63, 0x6f, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x43,
	0x6f, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x0f, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x65, 0x64, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x72, 0x6f,
	0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x42, 0x0a, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70,
	0x1a, 0x3a, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a,
	0x13, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xb3,
	0x03, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x1a, 0x38, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x72,
	0x6f, 0x5f, 0x63, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x72,
	0x6f, 0x43, 0x75, 0x70, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a,
	0x6c, 0x65, 0x66, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0b,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x0c, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x68, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x17, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x75, 0x73, 0x52, 0x06, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x13,
	0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x14, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a,
	0x6f, 0x69, 0x6e, 0x22, 0x2d, 0x0a, 0x19, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x4f, 0x0a, 0x1a, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x65,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x45, 0x0a, 0x17, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x64, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x4e,
	0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x22,
	0x5d, 0x0a, 0x17, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48,
	0x65, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x1a,
	0x0a, 0x18, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65,
	0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x16, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xfd, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x31, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x31, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x31, 0x5f, 0x64, 0x69, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x44, 0x69, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x32, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x55, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x32, 0x5f, 0x6b, 0x69,
	0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x32, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x32, 0x5f, 0x64, 0x69, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x32, 0x44, 0x69, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22,
	0x16, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x50, 0x75, 0x62, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x43, 0x6f, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x75, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x56, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75,
	0x73, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x75, 0x73, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xaa, 0x01, 0x0a,
	0x10, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x5f, 0x47, 0x55, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x42, 0x41,
	0x54, 0x54, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x07, 0x32, 0xdb, 0x10, 0x0a, 0x11, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x56, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x12, 0x26,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x47, 0x75, 0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x12, 0x49, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x25, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x49, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x12, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74,
	0x79, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x12, 0x26, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x43, 0x6f, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2b, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x29,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x63, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cashbattle_cashbattle_proto_rawDescOnce sync.Once
	file_cashbattle_cashbattle_proto_rawDescData = file_cashbattle_cashbattle_proto_rawDesc
)

func file_cashbattle_cashbattle_proto_rawDescGZIP() []byte {
	file_cashbattle_cashbattle_proto_rawDescOnce.Do(func() {
		file_cashbattle_cashbattle_proto_rawDescData = protoimpl.X.CompressGZIP(file_cashbattle_cashbattle_proto_rawDescData)
	})
	return file_cashbattle_cashbattle_proto_rawDescData
}

var file_cashbattle_cashbattle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cashbattle_cashbattle_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_cashbattle_cashbattle_proto_goTypes = []interface{}{
	(CashBattleStatus)(0),                    // 0: cashbattle.CashBattleStatus
	(*CashBattleInfo)(nil),                   // 1: cashbattle.CashBattleInfo
	(*CashBattleIntroduce)(nil),              // 2: cashbattle.CashBattleIntroduce
	(*GetCashBattleRequest)(nil),             // 3: cashbattle.GetCashBattleRequest
	(*GetCashBattleResponse)(nil),            // 4: cashbattle.GetCashBattleResponse
	(*CashBattlePlayer)(nil),                 // 5: cashbattle.CashBattlePlayer
	(*CashBattleVersus)(nil),                 // 6: cashbattle.CashBattleVersus
	(*GetCashBattleVersusRequest)(nil),       // 7: cashbattle.GetCashBattleVersusRequest
	(*GetCashBattleVersusResponse)(nil),      // 8: cashbattle.GetCashBattleVersusResponse
	(*GetCashBattleGuessRequest)(nil),        // 9: cashbattle.GetCashBattleGuessRequest
	(*GetCashBattleGuessResponse)(nil),       // 10: cashbattle.GetCashBattleGuessResponse
	(*JoinCashBattleRequest)(nil),            // 11: cashbattle.JoinCashBattleRequest
	(*JoinCashBattleResponse)(nil),           // 12: cashbattle.JoinCashBattleResponse
	(*ConfirmCashBattleRequest)(nil),         // 13: cashbattle.ConfirmCashBattleRequest
	(*ConfirmCashBattleResponse)(nil),        // 14: cashbattle.ConfirmCashBattleResponse
	(*StakeCashBattleRequest)(nil),           // 15: cashbattle.StakeCashBattleRequest
	(*StakeCashBattleResponse)(nil),          // 16: cashbattle.StakeCashBattleResponse
	(*IsPlayerJoinRequest)(nil),              // 17: cashbattle.IsPlayerJoinRequest
	(*IsPlayerJoinResponse)(nil),             // 18: cashbattle.IsPlayerJoinResponse
	(*IsPlayerBeSelectedRequest)(nil),        // 19: cashbattle.IsPlayerBeSelectedRequest
	(*IsPlayerBeSelectedResponse)(nil),       // 20: cashbattle.IsPlayerBeSelectedResponse
	(*IsPlayerConfirmRequest)(nil),           // 21: cashbattle.IsPlayerConfirmRequest
	(*IsPlayerConfirmResponse)(nil),          // 22: cashbattle.IsPlayerConfirmResponse
	(*GetCashBattleConditionRequest)(nil),    // 23: cashbattle.GetCashBattleConditionRequest
	(*GetCashBattleConditionResponse)(nil),   // 24: cashbattle.GetCashBattleConditionResponse
	(*SelectBattleHeroRequest)(nil),          // 25: cashbattle.SelectBattleHeroRequest
	(*SelectBattleHeroResponse)(nil),         // 26: cashbattle.SelectBattleHeroResponse
	(*GetCashBattleStartTimeRequest)(nil),    // 27: cashbattle.GetCashBattleStartTimeRequest
	(*GetCashBattleStartTimeResponse)(nil),   // 28: cashbattle.GetCashBattleStartTimeResponse
	(*WatchCashBattleRequest)(nil),           // 29: cashbattle.WatchCashBattleRequest
	(*WatchCashBattleResponse)(nil),          // 30: cashbattle.WatchCashBattleResponse
	(*BattleResultRequest)(nil),              // 31: cashbattle.BattleResultRequest
	(*BattleResultResponse)(nil),             // 32: cashbattle.BattleResultResponse
	(*CashBattleGratuityRequest)(nil),        // 33: cashbattle.CashBattleGratuityRequest
	(*CashBattleGratuityResponse)(nil),       // 34: cashbattle.CashBattleGratuityResponse
	(*PubCashBattleInfoRequest)(nil),         // 35: cashbattle.PubCashBattleInfoRequest
	(*PubCashBattleInfoResponse)(nil),        // 36: cashbattle.PubCashBattleInfoResponse
	(*PubCashBattleVersusRequest)(nil),       // 37: cashbattle.PubCashBattleVersusRequest
	(*PubCashBattleVersusResponse)(nil),      // 38: cashbattle.PubCashBattleVersusResponse
	(*PubCashBattleCoeRequest)(nil),          // 39: cashbattle.PubCashBattleCoeRequest
	(*PubCashBattleCoeResponse)(nil),         // 40: cashbattle.PubCashBattleCoeResponse
	(*GetCashBattleVersusMatchRequest)(nil),  // 41: cashbattle.GetCashBattleVersusMatchRequest
	(*GetCashBattleVersusMatchResponse)(nil), // 42: cashbattle.GetCashBattleVersusMatchResponse
	(*GetCashBattleResultRequest)(nil),       // 43: cashbattle.GetCashBattleResultRequest
	(*GetCashBattleResultResponse)(nil),      // 44: cashbattle.GetCashBattleResultResponse
	(*SettleCashBattleRewardRequest)(nil),    // 45: cashbattle.SettleCashBattleRewardRequest
	(*SettleCashBattleRewardResponse)(nil),   // 46: cashbattle.SettleCashBattleRewardResponse
	nil,                                      // 47: cashbattle.CashBattleInfo.ItemMapEntry
	nil,                                      // 48: cashbattle.GetCashBattleResponse.StakeEntry
}
var file_cashbattle_cashbattle_proto_depIdxs = []int32{
	2,  // 0: cashbattle.CashBattleInfo.battle_introduce:type_name -> cashbattle.CashBattleIntroduce
	47, // 1: cashbattle.CashBattleInfo.item_map:type_name -> cashbattle.CashBattleInfo.ItemMapEntry
	1,  // 2: cashbattle.GetCashBattleResponse.battle_info:type_name -> cashbattle.CashBattleInfo
	0,  // 3: cashbattle.GetCashBattleResponse.status:type_name -> cashbattle.CashBattleStatus
	48, // 4: cashbattle.GetCashBattleResponse.stake:type_name -> cashbattle.GetCashBattleResponse.StakeEntry
	5,  // 5: cashbattle.CashBattleVersus.left_player:type_name -> cashbattle.CashBattlePlayer
	5,  // 6: cashbattle.CashBattleVersus.right_player:type_name -> cashbattle.CashBattlePlayer
	6,  // 7: cashbattle.GetCashBattleVersusResponse.battle_versus:type_name -> cashbattle.CashBattleVersus
	6,  // 8: cashbattle.StakeCashBattleResponse.versus:type_name -> cashbattle.CashBattleVersus
	4,  // 9: cashbattle.WatchCashBattleResponse.response:type_name -> cashbattle.GetCashBattleResponse
	6,  // 10: cashbattle.GetCashBattleVersusMatchResponse.match:type_name -> cashbattle.CashBattleVersus
	6,  // 11: cashbattle.GetCashBattleResultResponse.match:type_name -> cashbattle.CashBattleVersus
	3,  // 12: cashbattle.CashBattleService.GetCashBattle:input_type -> cashbattle.GetCashBattleRequest
	7,  // 13: cashbattle.CashBattleService.GetCashBattleVersus:input_type -> cashbattle.GetCashBattleVersusRequest
	9,  // 14: cashbattle.CashBattleService.GetCashBattleGuess:input_type -> cashbattle.GetCashBattleGuessRequest
	11, // 15: cashbattle.CashBattleService.JoinCashBattle:input_type -> cashbattle.JoinCashBattleRequest
	13, // 16: cashbattle.CashBattleService.ConfirmCashBattle:input_type -> cashbattle.ConfirmCashBattleRequest
	15, // 17: cashbattle.CashBattleService.StakeCashBattle:input_type -> cashbattle.StakeCashBattleRequest
	17, // 18: cashbattle.CashBattleService.IsPlayerJoin:input_type -> cashbattle.IsPlayerJoinRequest
	19, // 19: cashbattle.CashBattleService.IsPlayerBeSelected:input_type -> cashbattle.IsPlayerBeSelectedRequest
	21, // 20: cashbattle.CashBattleService.IsPlayerConfirm:input_type -> cashbattle.IsPlayerConfirmRequest
	23, // 21: cashbattle.CashBattleService.GetCashBattleCondition:input_type -> cashbattle.GetCashBattleConditionRequest
	25, // 22: cashbattle.CashBattleService.SelectBattleHero:input_type -> cashbattle.SelectBattleHeroRequest
	27, // 23: cashbattle.CashBattleService.GetCashBattleStartTime:input_type -> cashbattle.GetCashBattleStartTimeRequest
	29, // 24: cashbattle.CashBattleService.WatchCashBattle:input_type -> cashbattle.WatchCashBattleRequest
	31, // 25: cashbattle.CashBattleService.BattleResult:input_type -> cashbattle.BattleResultRequest
	33, // 26: cashbattle.CashBattleService.CashBattleGratuity:input_type -> cashbattle.CashBattleGratuityRequest
	35, // 27: cashbattle.CashBattleService.PubCashBattleInfo:input_type -> cashbattle.PubCashBattleInfoRequest
	37, // 28: cashbattle.CashBattleService.PubCashBattleVersus:input_type -> cashbattle.PubCashBattleVersusRequest
	39, // 29: cashbattle.CashBattleService.PubCashBattleCoe:input_type -> cashbattle.PubCashBattleCoeRequest
	41, // 30: cashbattle.CashBattleService.GetCashBattleVersusMatch:input_type -> cashbattle.GetCashBattleVersusMatchRequest
	43, // 31: cashbattle.CashBattleService.GetCashBattleResult:input_type -> cashbattle.GetCashBattleResultRequest
	45, // 32: cashbattle.CashBattleService.SettleCashBattleReward:input_type -> cashbattle.SettleCashBattleRewardRequest
	4,  // 33: cashbattle.CashBattleService.GetCashBattle:output_type -> cashbattle.GetCashBattleResponse
	8,  // 34: cashbattle.CashBattleService.GetCashBattleVersus:output_type -> cashbattle.GetCashBattleVersusResponse
	10, // 35: cashbattle.CashBattleService.GetCashBattleGuess:output_type -> cashbattle.GetCashBattleGuessResponse
	12, // 36: cashbattle.CashBattleService.JoinCashBattle:output_type -> cashbattle.JoinCashBattleResponse
	14, // 37: cashbattle.CashBattleService.ConfirmCashBattle:output_type -> cashbattle.ConfirmCashBattleResponse
	16, // 38: cashbattle.CashBattleService.StakeCashBattle:output_type -> cashbattle.StakeCashBattleResponse
	18, // 39: cashbattle.CashBattleService.IsPlayerJoin:output_type -> cashbattle.IsPlayerJoinResponse
	20, // 40: cashbattle.CashBattleService.IsPlayerBeSelected:output_type -> cashbattle.IsPlayerBeSelectedResponse
	22, // 41: cashbattle.CashBattleService.IsPlayerConfirm:output_type -> cashbattle.IsPlayerConfirmResponse
	24, // 42: cashbattle.CashBattleService.GetCashBattleCondition:output_type -> cashbattle.GetCashBattleConditionResponse
	26, // 43: cashbattle.CashBattleService.SelectBattleHero:output_type -> cashbattle.SelectBattleHeroResponse
	28, // 44: cashbattle.CashBattleService.GetCashBattleStartTime:output_type -> cashbattle.GetCashBattleStartTimeResponse
	30, // 45: cashbattle.CashBattleService.WatchCashBattle:output_type -> cashbattle.WatchCashBattleResponse
	32, // 46: cashbattle.CashBattleService.BattleResult:output_type -> cashbattle.BattleResultResponse
	34, // 47: cashbattle.CashBattleService.CashBattleGratuity:output_type -> cashbattle.CashBattleGratuityResponse
	36, // 48: cashbattle.CashBattleService.PubCashBattleInfo:output_type -> cashbattle.PubCashBattleInfoResponse
	38, // 49: cashbattle.CashBattleService.PubCashBattleVersus:output_type -> cashbattle.PubCashBattleVersusResponse
	40, // 50: cashbattle.CashBattleService.PubCashBattleCoe:output_type -> cashbattle.PubCashBattleCoeResponse
	42, // 51: cashbattle.CashBattleService.GetCashBattleVersusMatch:output_type -> cashbattle.GetCashBattleVersusMatchResponse
	44, // 52: cashbattle.CashBattleService.GetCashBattleResult:output_type -> cashbattle.GetCashBattleResultResponse
	46, // 53: cashbattle.CashBattleService.SettleCashBattleReward:output_type -> cashbattle.SettleCashBattleRewardResponse
	33, // [33:54] is the sub-list for method output_type
	12, // [12:33] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_cashbattle_cashbattle_proto_init() }
func file_cashbattle_cashbattle_proto_init() {
	if File_cashbattle_cashbattle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cashbattle_cashbattle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleIntroduce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattlePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleVersus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleVersusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleVersusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleGuessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleGuessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCashBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCashBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmCashBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmCashBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeCashBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeCashBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPlayerJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPlayerJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPlayerBeSelectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPlayerBeSelectedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPlayerConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPlayerConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleConditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectBattleHeroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectBattleHeroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleStartTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleStartTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchCashBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchCashBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleGratuityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleGratuityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleVersusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleVersusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleCoeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleCoeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleVersusMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleVersusMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleCashBattleRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cashbattle_cashbattle_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleCashBattleRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cashbattle_cashbattle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cashbattle_cashbattle_proto_goTypes,
		DependencyIndexes: file_cashbattle_cashbattle_proto_depIdxs,
		EnumInfos:         file_cashbattle_cashbattle_proto_enumTypes,
		MessageInfos:      file_cashbattle_cashbattle_proto_msgTypes,
	}.Build()
	File_cashbattle_cashbattle_proto = out.File
	file_cashbattle_cashbattle_proto_rawDesc = nil
	file_cashbattle_cashbattle_proto_goTypes = nil
	file_cashbattle_cashbattle_proto_depIdxs = nil
}
