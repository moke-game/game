// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bff/pet.proto

package bffpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EPetPart int32

const (
	EPetPart_Part_None   EPetPart = 0
	EPetPart_Part_Body   EPetPart = 1 //部位 身体
	EPetPart_Part_Head   EPetPart = 2 //部位 头(帽子)
	EPetPart_Part_Wing   EPetPart = 3 //部位 翅膀
	EPetPart_Part_Weapon EPetPart = 4 //部位 武器
)

// Enum value maps for EPetPart.
var (
	EPetPart_name = map[int32]string{
		0: "Part_None",
		1: "Part_Body",
		2: "Part_Head",
		3: "Part_Wing",
		4: "Part_Weapon",
	}
	EPetPart_value = map[string]int32{
		"Part_None":   0,
		"Part_Body":   1,
		"Part_Head":   2,
		"Part_Wing":   3,
		"Part_Weapon": 4,
	}
)

func (x EPetPart) Enum() *EPetPart {
	p := new(EPetPart)
	*p = x
	return p
}

func (x EPetPart) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetPart) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_pet_proto_enumTypes[0].Descriptor()
}

func (EPetPart) Type() protoreflect.EnumType {
	return &file_bff_pet_proto_enumTypes[0]
}

func (x EPetPart) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPetPart.Descriptor instead.
func (EPetPart) EnumDescriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{0}
}

type PetTaskStatus int32

const (
	PetTaskStatus_Task_Idle        PetTaskStatus = 0 //0=未开始
	PetTaskStatus_Task_Progressing PetTaskStatus = 1 //1=进行中
	PetTaskStatus_Task_Complete    PetTaskStatus = 2 //2=已完成可领取奖励
	PetTaskStatus_Task_Finish      PetTaskStatus = 3 //3=已结束
)

// Enum value maps for PetTaskStatus.
var (
	PetTaskStatus_name = map[int32]string{
		0: "Task_Idle",
		1: "Task_Progressing",
		2: "Task_Complete",
		3: "Task_Finish",
	}
	PetTaskStatus_value = map[string]int32{
		"Task_Idle":        0,
		"Task_Progressing": 1,
		"Task_Complete":    2,
		"Task_Finish":      3,
	}
)

func (x PetTaskStatus) Enum() *PetTaskStatus {
	p := new(PetTaskStatus)
	*p = x
	return p
}

func (x PetTaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PetTaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_pet_proto_enumTypes[1].Descriptor()
}

func (PetTaskStatus) Type() protoreflect.EnumType {
	return &file_bff_pet_proto_enumTypes[1]
}

func (x PetTaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PetTaskStatus.Descriptor instead.
func (PetTaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{1}
}

type Pet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                                        //宠物ID
	Name           string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                                                                     //宠物昵称
	BindHero       int32              `protobuf:"varint,3,opt,name=bind_hero,json=bindHero,proto3" json:"bind_hero,omitempty"`                                                                                                            //绑定的英雄ID 未绑定任何英雄时为0
	TotalAttribute map[int32]int32    `protobuf:"bytes,4,rep,name=total_attribute,json=totalAttribute,proto3" json:"total_attribute,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //宠物附加属性总值 key:属性ID value:属性值*10000
	Parts          map[int32]*PetPart `protobuf:"bytes,5,rep,name=parts,proto3" json:"parts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                                          //各部件信息 key:部位
	RenameCount    int32              `protobuf:"varint,6,opt,name=rename_count,json=renameCount,proto3" json:"rename_count,omitempty"`                                                                                                   //改名次数
	RecastPart     map[int32]*PetPart `protobuf:"bytes,7,rep,name=recast_part,json=recastPart,proto3" json:"recast_part,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`              //上一次洗练未应用的部件
	SkillStone     map[int32]int32    `protobuf:"bytes,8,rep,name=skill_stone,json=skillStone,proto3" json:"skill_stone,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`             //当前宠物身上的石头 key:技能插槽序号 从1开始 暂时只有1
}

func (x *Pet) Reset() {
	*x = Pet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pet) ProtoMessage() {}

func (x *Pet) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pet.ProtoReflect.Descriptor instead.
func (*Pet) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{0}
}

func (x *Pet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pet) GetBindHero() int32 {
	if x != nil {
		return x.BindHero
	}
	return 0
}

func (x *Pet) GetTotalAttribute() map[int32]int32 {
	if x != nil {
		return x.TotalAttribute
	}
	return nil
}

func (x *Pet) GetParts() map[int32]*PetPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *Pet) GetRenameCount() int32 {
	if x != nil {
		return x.RenameCount
	}
	return 0
}

func (x *Pet) GetRecastPart() map[int32]*PetPart {
	if x != nil {
		return x.RecastPart
	}
	return nil
}

func (x *Pet) GetSkillStone() map[int32]int32 {
	if x != nil {
		return x.SkillStone
	}
	return nil
}

type PetPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId   int32           `protobuf:"varint,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Attribute  map[int32]int32 `protobuf:"bytes,2,rep,name=attribute,proto3" json:"attribute,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //属性 key:属性ID value:属性值*10000
	PowerValue int32           `protobuf:"varint,3,opt,name=power_value,json=powerValue,proto3" json:"power_value,omitempty"`                                                                      //战力值(时尚值)
}

func (x *PetPart) Reset() {
	*x = PetPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetPart) ProtoMessage() {}

func (x *PetPart) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetPart.ProtoReflect.Descriptor instead.
func (*PetPart) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{1}
}

func (x *PetPart) GetConfigId() int32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *PetPart) GetAttribute() map[int32]int32 {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *PetPart) GetPowerValue() int32 {
	if x != nil {
		return x.PowerValue
	}
	return 0
}

// 孵化中的蛋
type Egg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //蛋ID
	ConfigId int32          `protobuf:"varint,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"` //配置表中的ID
	NeedTime int64          `protobuf:"varint,3,opt,name=need_time,json=needTime,proto3" json:"need_time,omitempty"` //孵化所需要的时间 秒
	UsedTime int64          `protobuf:"varint,4,opt,name=used_time,json=usedTime,proto3" json:"used_time,omitempty"` //当前用时 秒
	Progress []*EggProgress `protobuf:"bytes,5,rep,name=progress,proto3" json:"progress,omitempty"`                  //喂养进度 身体 头(帽子) 翅膀 武器
}

func (x *Egg) Reset() {
	*x = Egg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Egg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Egg) ProtoMessage() {}

func (x *Egg) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Egg.ProtoReflect.Descriptor instead.
func (*Egg) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{2}
}

func (x *Egg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Egg) GetConfigId() int32 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *Egg) GetNeedTime() int64 {
	if x != nil {
		return x.NeedTime
	}
	return 0
}

func (x *Egg) GetUsedTime() int64 {
	if x != nil {
		return x.UsedTime
	}
	return 0
}

func (x *Egg) GetProgress() []*EggProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type EggProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanetProgress map[int32]int32 `protobuf:"bytes,1,rep,name=planet_progress,json=planetProgress,proto3" json:"planet_progress,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //各星球喂养占比 key 星球ID value 喂养值
}

func (x *EggProgress) Reset() {
	*x = EggProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EggProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EggProgress) ProtoMessage() {}

func (x *EggProgress) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EggProgress.ProtoReflect.Descriptor instead.
func (*EggProgress) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{3}
}

func (x *EggProgress) GetPlanetProgress() map[int32]int32 {
	if x != nil {
		return x.PlanetProgress
	}
	return nil
}

// 获取当前所有的宠物信息
type C2SGetPetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SGetPetInfo) Reset() {
	*x = C2SGetPetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SGetPetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SGetPetInfo) ProtoMessage() {}

func (x *C2SGetPetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SGetPetInfo.ProtoReflect.Descriptor instead.
func (*C2SGetPetInfo) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{4}
}

type S2CGetPetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggKnapsack int32  `protobuf:"varint,1,opt,name=egg_knapsack,json=eggKnapsack,proto3" json:"egg_knapsack,omitempty"` //蛋孵化槽
	Eggs        []*Egg `protobuf:"bytes,2,rep,name=eggs,proto3" json:"eggs,omitempty"`                                   //孵化中的蛋
	Pets        []*Pet `protobuf:"bytes,3,rep,name=pets,proto3" json:"pets,omitempty"`                                   //宠物信息
}

func (x *S2CGetPetInfo) Reset() {
	*x = S2CGetPetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CGetPetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CGetPetInfo) ProtoMessage() {}

func (x *S2CGetPetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CGetPetInfo.ProtoReflect.Descriptor instead.
func (*S2CGetPetInfo) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{5}
}

func (x *S2CGetPetInfo) GetEggKnapsack() int32 {
	if x != nil {
		return x.EggKnapsack
	}
	return 0
}

func (x *S2CGetPetInfo) GetEggs() []*Egg {
	if x != nil {
		return x.Eggs
	}
	return nil
}

func (x *S2CGetPetInfo) GetPets() []*Pet {
	if x != nil {
		return x.Pets
	}
	return nil
}

// 孵化蛋
type C2SPetHatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` //要孵化的蛋(道具)ID
}

func (x *C2SPetHatch) Reset() {
	*x = C2SPetHatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetHatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetHatch) ProtoMessage() {}

func (x *C2SPetHatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetHatch.ProtoReflect.Descriptor instead.
func (*C2SPetHatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{6}
}

func (x *C2SPetHatch) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type S2CPetHatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Egg *Egg `protobuf:"bytes,1,opt,name=egg,proto3" json:"egg,omitempty"` //孵化蛋信息
}

func (x *S2CPetHatch) Reset() {
	*x = S2CPetHatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetHatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetHatch) ProtoMessage() {}

func (x *S2CPetHatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetHatch.ProtoReflect.Descriptor instead.
func (*S2CPetHatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{7}
}

func (x *S2CPetHatch) GetEgg() *Egg {
	if x != nil {
		return x.Egg
	}
	return nil
}

// 取消孵化中的蛋
type C2SCancelHatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId int64 `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"` //要取消孵化的蛋ID
}

func (x *C2SCancelHatch) Reset() {
	*x = C2SCancelHatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCancelHatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCancelHatch) ProtoMessage() {}

func (x *C2SCancelHatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCancelHatch.ProtoReflect.Descriptor instead.
func (*C2SCancelHatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{8}
}

func (x *C2SCancelHatch) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

type S2CCancelHatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId int64 `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"` //取消孵化的蛋ID
}

func (x *S2CCancelHatch) Reset() {
	*x = S2CCancelHatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCancelHatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCancelHatch) ProtoMessage() {}

func (x *S2CCancelHatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCancelHatch.ProtoReflect.Descriptor instead.
func (*S2CCancelHatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{9}
}

func (x *S2CCancelHatch) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

// 喂养蛋
type C2SPetFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId int64    `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"`    //蛋ID
	Part  EPetPart `protobuf:"varint,2,opt,name=part,proto3,enum=bff.EPetPart" json:"part,omitempty"` //喂养部位 1=身体 2=头(帽子) 3=翅膀 4=武器
	Item  []*Item  `protobuf:"bytes,3,rep,name=item,proto3" json:"item,omitempty"`                    //喂养道具
}

func (x *C2SPetFeed) Reset() {
	*x = C2SPetFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetFeed) ProtoMessage() {}

func (x *C2SPetFeed) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetFeed.ProtoReflect.Descriptor instead.
func (*C2SPetFeed) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{10}
}

func (x *C2SPetFeed) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

func (x *C2SPetFeed) GetPart() EPetPart {
	if x != nil {
		return x.Part
	}
	return EPetPart_Part_None
}

func (x *C2SPetFeed) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type S2CPetFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId    int64        `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"`
	Part     EPetPart     `protobuf:"varint,2,opt,name=part,proto3,enum=bff.EPetPart" json:"part,omitempty"` //喂养部位 1=身体 2=头(帽子) 3=翅膀 4=武器
	Progress *EggProgress `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`            //喂养后的进度信息
}

func (x *S2CPetFeed) Reset() {
	*x = S2CPetFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetFeed) ProtoMessage() {}

func (x *S2CPetFeed) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetFeed.ProtoReflect.Descriptor instead.
func (*S2CPetFeed) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{11}
}

func (x *S2CPetFeed) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

func (x *S2CPetFeed) GetPart() EPetPart {
	if x != nil {
		return x.Part
	}
	return EPetPart_Part_None
}

func (x *S2CPetFeed) GetProgress() *EggProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

// 使用加速道具
type C2SPetSpeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId int64 `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"` //蛋ID
	Item  *Item `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`                 //加速道具ID
}

func (x *C2SPetSpeed) Reset() {
	*x = C2SPetSpeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetSpeed) ProtoMessage() {}

func (x *C2SPetSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetSpeed.ProtoReflect.Descriptor instead.
func (*C2SPetSpeed) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{12}
}

func (x *C2SPetSpeed) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

func (x *C2SPetSpeed) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type S2CPetSpeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId    int64 `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"`          //蛋ID
	NeedTime int64 `protobuf:"varint,2,opt,name=need_time,json=needTime,proto3" json:"need_time,omitempty"` //孵化所需要的时间 秒
	UsedTime int64 `protobuf:"varint,3,opt,name=used_time,json=usedTime,proto3" json:"used_time,omitempty"` //当前用时 秒
}

func (x *S2CPetSpeed) Reset() {
	*x = S2CPetSpeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetSpeed) ProtoMessage() {}

func (x *S2CPetSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetSpeed.ProtoReflect.Descriptor instead.
func (*S2CPetSpeed) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{13}
}

func (x *S2CPetSpeed) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

func (x *S2CPetSpeed) GetNeedTime() int64 {
	if x != nil {
		return x.NeedTime
	}
	return 0
}

func (x *S2CPetSpeed) GetUsedTime() int64 {
	if x != nil {
		return x.UsedTime
	}
	return 0
}

// 确认蛋孵化成宠物
type C2SPetIncubate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggId int64 `protobuf:"varint,1,opt,name=egg_id,json=eggId,proto3" json:"egg_id,omitempty"` //蛋ID
}

func (x *C2SPetIncubate) Reset() {
	*x = C2SPetIncubate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetIncubate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetIncubate) ProtoMessage() {}

func (x *C2SPetIncubate) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetIncubate.ProtoReflect.Descriptor instead.
func (*C2SPetIncubate) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{14}
}

func (x *C2SPetIncubate) GetEggId() int64 {
	if x != nil {
		return x.EggId
	}
	return 0
}

type S2CPetIncubate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pet *Pet `protobuf:"bytes,1,opt,name=pet,proto3" json:"pet,omitempty"` //孵化出的宠物信息
}

func (x *S2CPetIncubate) Reset() {
	*x = S2CPetIncubate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetIncubate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetIncubate) ProtoMessage() {}

func (x *S2CPetIncubate) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetIncubate.ProtoReflect.Descriptor instead.
func (*S2CPetIncubate) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{15}
}

func (x *S2CPetIncubate) GetPet() *Pet {
	if x != nil {
		return x.Pet
	}
	return nil
}

// 宠物绑定英雄
type C2SPetBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId  int64 `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`    //宠物ID
	HeroId int32 `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"` //要绑定/解绑的英雄ID
	Bind   bool  `protobuf:"varint,3,opt,name=bind,proto3" json:"bind,omitempty"`                   //true 绑定 false 解绑
}

func (x *C2SPetBind) Reset() {
	*x = C2SPetBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetBind) ProtoMessage() {}

func (x *C2SPetBind) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetBind.ProtoReflect.Descriptor instead.
func (*C2SPetBind) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{16}
}

func (x *C2SPetBind) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *C2SPetBind) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *C2SPetBind) GetBind() bool {
	if x != nil {
		return x.Bind
	}
	return false
}

type S2CPetBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId        int64 `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`                        //宠物ID
	BindHeroId   int32 `protobuf:"varint,2,opt,name=bind_hero_id,json=bindHeroId,proto3" json:"bind_hero_id,omitempty"`       //绑定英雄ID 有可能为0
	UnbindHeroId int32 `protobuf:"varint,3,opt,name=unbind_hero_id,json=unbindHeroId,proto3" json:"unbind_hero_id,omitempty"` //解绑的英雄ID 有可能为0
	Bind         bool  `protobuf:"varint,4,opt,name=bind,proto3" json:"bind,omitempty"`                                       //true 绑定 false 解绑
}

func (x *S2CPetBind) Reset() {
	*x = S2CPetBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetBind) ProtoMessage() {}

func (x *S2CPetBind) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetBind.ProtoReflect.Descriptor instead.
func (*S2CPetBind) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{17}
}

func (x *S2CPetBind) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *S2CPetBind) GetBindHeroId() int32 {
	if x != nil {
		return x.BindHeroId
	}
	return 0
}

func (x *S2CPetBind) GetUnbindHeroId() int32 {
	if x != nil {
		return x.UnbindHeroId
	}
	return 0
}

func (x *S2CPetBind) GetBind() bool {
	if x != nil {
		return x.Bind
	}
	return false
}

// 放生宠物
type C2SPetRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId int64 `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"` //放生的宠物ID
}

func (x *C2SPetRelease) Reset() {
	*x = C2SPetRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetRelease) ProtoMessage() {}

func (x *C2SPetRelease) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetRelease.ProtoReflect.Descriptor instead.
func (*C2SPetRelease) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{18}
}

func (x *C2SPetRelease) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

type S2CPetRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId int64   `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"` //放生的宠物ID
	Items []*Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`               //放生获得的道具
}

func (x *S2CPetRelease) Reset() {
	*x = S2CPetRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetRelease) ProtoMessage() {}

func (x *S2CPetRelease) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetRelease.ProtoReflect.Descriptor instead.
func (*S2CPetRelease) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{19}
}

func (x *S2CPetRelease) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *S2CPetRelease) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// 宠物修改名字
type C2SPetRename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId int64  `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"` //要修改名字的宠物ID
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //要修改成的名字
}

func (x *C2SPetRename) Reset() {
	*x = C2SPetRename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetRename) ProtoMessage() {}

func (x *C2SPetRename) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetRename.ProtoReflect.Descriptor instead.
func (*C2SPetRename) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{20}
}

func (x *C2SPetRename) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *C2SPetRename) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type S2CPetRename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId int64  `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"` //修改名字的宠物ID
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //修改后的名字
}

func (x *S2CPetRename) Reset() {
	*x = S2CPetRename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetRename) ProtoMessage() {}

func (x *S2CPetRename) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetRename.ProtoReflect.Descriptor instead.
func (*S2CPetRename) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{21}
}

func (x *S2CPetRename) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *S2CPetRename) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 扩展孵化槽
type C2SUpgradeEggKnapsack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SUpgradeEggKnapsack) Reset() {
	*x = C2SUpgradeEggKnapsack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SUpgradeEggKnapsack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SUpgradeEggKnapsack) ProtoMessage() {}

func (x *C2SUpgradeEggKnapsack) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SUpgradeEggKnapsack.ProtoReflect.Descriptor instead.
func (*C2SUpgradeEggKnapsack) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{22}
}

type S2CUpgradeEggKnapsack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item        *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`                                   //消耗的道具
	EggKnapsack int32 `protobuf:"varint,2,opt,name=egg_knapsack,json=eggKnapsack,proto3" json:"egg_knapsack,omitempty"` //槽的数量
}

func (x *S2CUpgradeEggKnapsack) Reset() {
	*x = S2CUpgradeEggKnapsack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CUpgradeEggKnapsack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CUpgradeEggKnapsack) ProtoMessage() {}

func (x *S2CUpgradeEggKnapsack) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CUpgradeEggKnapsack.ProtoReflect.Descriptor instead.
func (*S2CUpgradeEggKnapsack) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{23}
}

func (x *S2CUpgradeEggKnapsack) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *S2CUpgradeEggKnapsack) GetEggKnapsack() int32 {
	if x != nil {
		return x.EggKnapsack
	}
	return 0
}

type NTFPetBindChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                         //玩家ID
	PetProfileId int64 `protobuf:"varint,2,opt,name=pet_profile_id,json=petProfileId,proto3" json:"pet_profile_id,omitempty"` //宠物外观组合ID 身体  + 帽子 * 10000 + 翅膀*10000^2 + 武器*10000^3
}

func (x *NTFPetBindChange) Reset() {
	*x = NTFPetBindChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFPetBindChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFPetBindChange) ProtoMessage() {}

func (x *NTFPetBindChange) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFPetBindChange.ProtoReflect.Descriptor instead.
func (*NTFPetBindChange) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{24}
}

func (x *NTFPetBindChange) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NTFPetBindChange) GetPetProfileId() int64 {
	if x != nil {
		return x.PetProfileId
	}
	return 0
}

// 获取当前宠物任务
type C2SPetTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SPetTask) Reset() {
	*x = C2SPetTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetTask) ProtoMessage() {}

func (x *C2SPetTask) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetTask.ProtoReflect.Descriptor instead.
func (*C2SPetTask) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{25}
}

type S2CPetTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetTask          []*PetTask `protobuf:"bytes,1,rep,name=pet_task,json=petTask,proto3" json:"pet_task,omitempty"`
	RefreshCount     int32      `protobuf:"varint,2,opt,name=refresh_count,json=refreshCount,proto3" json:"refresh_count,omitempty"`             //当前任务已经刷新次数
	RefreshCountdown int32      `protobuf:"varint,3,opt,name=refresh_countdown,json=refreshCountdown,proto3" json:"refresh_countdown,omitempty"` //系统刷新倒计时
}

func (x *S2CPetTask) Reset() {
	*x = S2CPetTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetTask) ProtoMessage() {}

func (x *S2CPetTask) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetTask.ProtoReflect.Descriptor instead.
func (*S2CPetTask) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{26}
}

func (x *S2CPetTask) GetPetTask() []*PetTask {
	if x != nil {
		return x.PetTask
	}
	return nil
}

func (x *S2CPetTask) GetRefreshCount() int32 {
	if x != nil {
		return x.RefreshCount
	}
	return 0
}

func (x *S2CPetTask) GetRefreshCountdown() int32 {
	if x != nil {
		return x.RefreshCountdown
	}
	return 0
}

type PetTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //任务唯一ID
	TaskId     int32         `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                    //任务config id
	TaskStatus PetTaskStatus `protobuf:"varint,3,opt,name=task_status,json=taskStatus,proto3,enum=bff.PetTaskStatus" json:"task_status,omitempty"` //任务状态
	Countdown  int32         `protobuf:"varint,4,opt,name=countdown,proto3" json:"countdown,omitempty"`                                            //任务完成倒计时 秒
	PetId      []int64       `protobuf:"varint,5,rep,packed,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`                                //在执行任务的宠物ID
}

func (x *PetTask) Reset() {
	*x = PetTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetTask) ProtoMessage() {}

func (x *PetTask) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetTask.ProtoReflect.Descriptor instead.
func (*PetTask) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{27}
}

func (x *PetTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PetTask) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *PetTask) GetTaskStatus() PetTaskStatus {
	if x != nil {
		return x.TaskStatus
	}
	return PetTaskStatus_Task_Idle
}

func (x *PetTask) GetCountdown() int32 {
	if x != nil {
		return x.Countdown
	}
	return 0
}

func (x *PetTask) GetPetId() []int64 {
	if x != nil {
		return x.PetId
	}
	return nil
}

// 派遣
type C2SPetTaskDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dispatch []*PetTaskDispatch `protobuf:"bytes,1,rep,name=dispatch,proto3" json:"dispatch,omitempty"`
}

func (x *C2SPetTaskDispatch) Reset() {
	*x = C2SPetTaskDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetTaskDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetTaskDispatch) ProtoMessage() {}

func (x *C2SPetTaskDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetTaskDispatch.ProtoReflect.Descriptor instead.
func (*C2SPetTaskDispatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{28}
}

func (x *C2SPetTaskDispatch) GetDispatch() []*PetTaskDispatch {
	if x != nil {
		return x.Dispatch
	}
	return nil
}

type S2CPetTaskDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dispatch []*PetTaskDispatch `protobuf:"bytes,1,rep,name=dispatch,proto3" json:"dispatch,omitempty"`
}

func (x *S2CPetTaskDispatch) Reset() {
	*x = S2CPetTaskDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetTaskDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetTaskDispatch) ProtoMessage() {}

func (x *S2CPetTaskDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetTaskDispatch.ProtoReflect.Descriptor instead.
func (*S2CPetTaskDispatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{29}
}

func (x *S2CPetTaskDispatch) GetDispatch() []*PetTaskDispatch {
	if x != nil {
		return x.Dispatch
	}
	return nil
}

type PetTaskDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                            //任务唯一ID
	PetId []int64 `protobuf:"varint,2,rep,packed,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"` //要派遣的宠物ID
}

func (x *PetTaskDispatch) Reset() {
	*x = PetTaskDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetTaskDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetTaskDispatch) ProtoMessage() {}

func (x *PetTaskDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetTaskDispatch.ProtoReflect.Descriptor instead.
func (*PetTaskDispatch) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{30}
}

func (x *PetTaskDispatch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PetTaskDispatch) GetPetId() []int64 {
	if x != nil {
		return x.PetId
	}
	return nil
}

// 领取任务奖励
type C2SPetTaskReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //要领取奖励的任务ID 不填(空)为一键领取
}

func (x *C2SPetTaskReward) Reset() {
	*x = C2SPetTaskReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetTaskReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetTaskReward) ProtoMessage() {}

func (x *C2SPetTaskReward) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetTaskReward.ProtoReflect.Descriptor instead.
func (*C2SPetTaskReward) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{31}
}

func (x *C2SPetTaskReward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type S2CPetTaskReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskReward []*PetTaskReward `protobuf:"bytes,1,rep,name=task_reward,json=taskReward,proto3" json:"task_reward,omitempty"` //获得的奖励
}

func (x *S2CPetTaskReward) Reset() {
	*x = S2CPetTaskReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetTaskReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetTaskReward) ProtoMessage() {}

func (x *S2CPetTaskReward) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetTaskReward.ProtoReflect.Descriptor instead.
func (*S2CPetTaskReward) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{32}
}

func (x *S2CPetTaskReward) GetTaskReward() []*PetTaskReward {
	if x != nil {
		return x.TaskReward
	}
	return nil
}

type PetTaskReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //任务唯一ID
	Item []*Item `protobuf:"bytes,2,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *PetTaskReward) Reset() {
	*x = PetTaskReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetTaskReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetTaskReward) ProtoMessage() {}

func (x *PetTaskReward) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetTaskReward.ProtoReflect.Descriptor instead.
func (*PetTaskReward) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{33}
}

func (x *PetTaskReward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PetTaskReward) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// 任务刷新
type C2SPetTaskRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SPetTaskRefresh) Reset() {
	*x = C2SPetTaskRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetTaskRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetTaskRefresh) ProtoMessage() {}

func (x *C2SPetTaskRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetTaskRefresh.ProtoReflect.Descriptor instead.
func (*C2SPetTaskRefresh) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{34}
}

type S2CPetTaskRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CPetTaskRefresh) Reset() {
	*x = S2CPetTaskRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetTaskRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetTaskRefresh) ProtoMessage() {}

func (x *S2CPetTaskRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetTaskRefresh.ProtoReflect.Descriptor instead.
func (*S2CPetTaskRefresh) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{35}
}

// 任务加速
type C2SPetTaskQuick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *C2SPetTaskQuick) Reset() {
	*x = C2SPetTaskQuick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetTaskQuick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetTaskQuick) ProtoMessage() {}

func (x *C2SPetTaskQuick) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetTaskQuick.ProtoReflect.Descriptor instead.
func (*C2SPetTaskQuick) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{36}
}

func (x *C2SPetTaskQuick) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type S2CPetTaskQuick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetTask *PetTask `protobuf:"bytes,1,opt,name=pet_task,json=petTask,proto3" json:"pet_task,omitempty"`
}

func (x *S2CPetTaskQuick) Reset() {
	*x = S2CPetTaskQuick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetTaskQuick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetTaskQuick) ProtoMessage() {}

func (x *S2CPetTaskQuick) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetTaskQuick.ProtoReflect.Descriptor instead.
func (*S2CPetTaskQuick) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{37}
}

func (x *S2CPetTaskQuick) GetPetTask() *PetTask {
	if x != nil {
		return x.PetTask
	}
	return nil
}

// 升级任务槽位数量
type C2SPetTaskUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SPetTaskUpgrade) Reset() {
	*x = C2SPetTaskUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetTaskUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetTaskUpgrade) ProtoMessage() {}

func (x *C2SPetTaskUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetTaskUpgrade.ProtoReflect.Descriptor instead.
func (*C2SPetTaskUpgrade) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{38}
}

type S2CPetTaskUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetTask *PetTask `protobuf:"bytes,1,opt,name=pet_task,json=petTask,proto3" json:"pet_task,omitempty"`
}

func (x *S2CPetTaskUpgrade) Reset() {
	*x = S2CPetTaskUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetTaskUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetTaskUpgrade) ProtoMessage() {}

func (x *S2CPetTaskUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetTaskUpgrade.ProtoReflect.Descriptor instead.
func (*S2CPetTaskUpgrade) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{39}
}

func (x *S2CPetTaskUpgrade) GetPetTask() *PetTask {
	if x != nil {
		return x.PetTask
	}
	return nil
}

// 宠物洗练
type C2SPetRecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId    int64      `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`                                   //宠物ID
	LockPart []EPetPart `protobuf:"varint,2,rep,packed,name=lock_part,json=lockPart,proto3,enum=bff.EPetPart" json:"lock_part,omitempty"` //锁定的部位
	DesignId int32      `protobuf:"varint,3,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`                          //设计图道具ID 只有使用设计图时有用
}

func (x *C2SPetRecast) Reset() {
	*x = C2SPetRecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetRecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetRecast) ProtoMessage() {}

func (x *C2SPetRecast) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetRecast.ProtoReflect.Descriptor instead.
func (*C2SPetRecast) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{40}
}

func (x *C2SPetRecast) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *C2SPetRecast) GetLockPart() []EPetPart {
	if x != nil {
		return x.LockPart
	}
	return nil
}

func (x *C2SPetRecast) GetDesignId() int32 {
	if x != nil {
		return x.DesignId
	}
	return 0
}

type S2CPetRecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId int64              `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`                                                                            //宠物ID
	Parts map[int32]*PetPart `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //洗练后的部件信息
}

func (x *S2CPetRecast) Reset() {
	*x = S2CPetRecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetRecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetRecast) ProtoMessage() {}

func (x *S2CPetRecast) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetRecast.ProtoReflect.Descriptor instead.
func (*S2CPetRecast) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{41}
}

func (x *S2CPetRecast) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *S2CPetRecast) GetParts() map[int32]*PetPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

// 宠物洗练确认替换
type C2SPetRecastReplace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId     int64 `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`             //宠物ID
	IsReplace bool  `protobuf:"varint,2,opt,name=is_replace,json=isReplace,proto3" json:"is_replace,omitempty"` //true 替换 false 取消
}

func (x *C2SPetRecastReplace) Reset() {
	*x = C2SPetRecastReplace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetRecastReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetRecastReplace) ProtoMessage() {}

func (x *C2SPetRecastReplace) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetRecastReplace.ProtoReflect.Descriptor instead.
func (*C2SPetRecastReplace) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{42}
}

func (x *C2SPetRecastReplace) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *C2SPetRecastReplace) GetIsReplace() bool {
	if x != nil {
		return x.IsReplace
	}
	return false
}

type S2CPetRecastReplace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId          int64              `protobuf:"varint,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`                                                                                                                     //宠物ID
	IsReplace      bool               `protobuf:"varint,2,opt,name=is_replace,json=isReplace,proto3" json:"is_replace,omitempty"`                                                                                                         //true 替换 false 取消
	TotalAttribute map[int32]int32    `protobuf:"bytes,3,rep,name=total_attribute,json=totalAttribute,proto3" json:"total_attribute,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //宠物附加属性总值 key:属性ID value:属性值*10000
	Parts          map[int32]*PetPart `protobuf:"bytes,4,rep,name=parts,proto3" json:"parts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                                          //各部件信息 key:部位
}

func (x *S2CPetRecastReplace) Reset() {
	*x = S2CPetRecastReplace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetRecastReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetRecastReplace) ProtoMessage() {}

func (x *S2CPetRecastReplace) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetRecastReplace.ProtoReflect.Descriptor instead.
func (*S2CPetRecastReplace) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{43}
}

func (x *S2CPetRecastReplace) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *S2CPetRecastReplace) GetIsReplace() bool {
	if x != nil {
		return x.IsReplace
	}
	return false
}

func (x *S2CPetRecastReplace) GetTotalAttribute() map[int32]int32 {
	if x != nil {
		return x.TotalAttribute
	}
	return nil
}

func (x *S2CPetRecastReplace) GetParts() map[int32]*PetPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

// 学习技能
type C2SPetSkillStudy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` //要消耗的技能石ID
	PetId  int64 `protobuf:"varint,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`    //要学习技能的宠物ID
}

func (x *C2SPetSkillStudy) Reset() {
	*x = C2SPetSkillStudy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetSkillStudy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetSkillStudy) ProtoMessage() {}

func (x *C2SPetSkillStudy) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetSkillStudy.ProtoReflect.Descriptor instead.
func (*C2SPetSkillStudy) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{44}
}

func (x *C2SPetSkillStudy) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *C2SPetSkillStudy) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

type S2CPetSkillStudy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	PetId  int64 `protobuf:"varint,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
}

func (x *S2CPetSkillStudy) Reset() {
	*x = S2CPetSkillStudy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetSkillStudy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetSkillStudy) ProtoMessage() {}

func (x *S2CPetSkillStudy) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetSkillStudy.ProtoReflect.Descriptor instead.
func (*S2CPetSkillStudy) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{45}
}

func (x *S2CPetSkillStudy) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *S2CPetSkillStudy) GetPetId() int64 {
	if x != nil {
		return x.PetId
	}
	return 0
}

// 抽取技能石
type C2SPetSkillDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"` //抽取次数
}

func (x *C2SPetSkillDraw) Reset() {
	*x = C2SPetSkillDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetSkillDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetSkillDraw) ProtoMessage() {}

func (x *C2SPetSkillDraw) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetSkillDraw.ProtoReflect.Descriptor instead.
func (*C2SPetSkillDraw) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{46}
}

func (x *C2SPetSkillDraw) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type S2CPetSkillDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*Item `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"` //抽取获得的道具
}

func (x *S2CPetSkillDraw) Reset() {
	*x = S2CPetSkillDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetSkillDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetSkillDraw) ProtoMessage() {}

func (x *S2CPetSkillDraw) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetSkillDraw.ProtoReflect.Descriptor instead.
func (*S2CPetSkillDraw) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{47}
}

func (x *S2CPetSkillDraw) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// 技能石回收
type C2SPetSkillReclaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*Item `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"` //要回收的技能石
}

func (x *C2SPetSkillReclaim) Reset() {
	*x = C2SPetSkillReclaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetSkillReclaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetSkillReclaim) ProtoMessage() {}

func (x *C2SPetSkillReclaim) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetSkillReclaim.ProtoReflect.Descriptor instead.
func (*C2SPetSkillReclaim) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{48}
}

func (x *C2SPetSkillReclaim) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type S2CPetSkillReclaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*Item `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"` //回收获得的道具
}

func (x *S2CPetSkillReclaim) Reset() {
	*x = S2CPetSkillReclaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_pet_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetSkillReclaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetSkillReclaim) ProtoMessage() {}

func (x *S2CPetSkillReclaim) ProtoReflect() protoreflect.Message {
	mi := &file_bff_pet_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetSkillReclaim.ProtoReflect.Descriptor instead.
func (*S2CPetSkillReclaim) Descriptor() ([]byte, []int) {
	return file_bff_pet_proto_rawDescGZIP(), []int{49}
}

func (x *S2CPetSkillReclaim) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_bff_pet_proto protoreflect.FileDescriptor

var file_bff_pet_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x66, 0x66, 0x2f, 0x70, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x62, 0x66, 0x66, 0x1a, 0x11, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x04, 0x0a, 0x03, 0x50, 0x65, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x48, 0x65, 0x72, 0x6f,
	0x12, 0x45, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x50, 0x65, 0x74, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x50, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x12, 0x39, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x2e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x1a, 0x41, 0x0a, 0x13, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46,
	0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x07, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a, 0x03, 0x45, 0x67, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e,
	0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x45, 0x67, 0x67,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x45, 0x67, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x45, 0x67, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x1a, 0x41, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x67, 0x67, 0x5f, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x67,
	0x67, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x04, 0x65, 0x67, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x45, 0x67,
	0x67, 0x52, 0x04, 0x65, 0x67, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x65, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x52,
	0x04, 0x70, 0x65, 0x74, 0x73, 0x22, 0x26, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x48,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x29, 0x0a,
	0x0b, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x48, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x03,
	0x65, 0x67, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x45, 0x67, 0x67, 0x52, 0x03, 0x65, 0x67, 0x67, 0x22, 0x27, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x61, 0x74, 0x63, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x67,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x67, 0x67, 0x49,
	0x64, 0x22, 0x27, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x67, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x67, 0x67, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x0a, 0x43, 0x32,
	0x53, 0x50, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x67, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x67, 0x67, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04, 0x70, 0x61,
	0x72, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x74, 0x0a, 0x0a, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x65, 0x67, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x65, 0x67, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x45, 0x67, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x50, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x67, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x67, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5e, 0x0a, 0x0b,
	0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65,
	0x67, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x67, 0x67,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0e,
	0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x75, 0x62, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x65, 0x67, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x65, 0x67, 0x67, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x49,
	0x6e, 0x63, 0x75, 0x62, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x70, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x52, 0x03,
	0x70, 0x65, 0x74, 0x22, 0x50, 0x0a, 0x0a, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x42, 0x69, 0x6e,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x62, 0x69, 0x6e, 0x64, 0x22, 0x7f, 0x0a, 0x0a, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69,
	0x6e, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x48, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x22, 0x26, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x0d, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x39, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x50, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x43, 0x32, 0x53, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x45, 0x67, 0x67, 0x4b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x22, 0x59, 0x0a, 0x15, 0x53, 0x32, 0x43, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x45, 0x67, 0x67, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x12,
	0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x67, 0x67, 0x5f, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x67, 0x67, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63,
	0x6b, 0x22, 0x4a, 0x0a, 0x10, 0x4e, 0x54, 0x46, 0x50, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x70, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x0c, 0x0a,
	0x0a, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x87, 0x01, 0x0a, 0x0a,
	0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x65,
	0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x70, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x07, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x15, 0x0a,
	0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x08, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x46, 0x0a, 0x12,
	0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x08, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x22, 0x38, 0x0a, 0x0f, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0x22,
	0x0a, 0x10, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x47, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x0a, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x3e, 0x0a, 0x0d, 0x50,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x43,
	0x32, 0x53, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x22, 0x13, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0x2a, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x69, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x70, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x13, 0x0a,
	0x11, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x22, 0x3c, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x65, 0x74, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x70, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x22, 0x6e, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x45, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64,
	0x22, 0xa1, 0x01, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x52, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x53, 0x32,
	0x43, 0x50, 0x65, 0x74, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x1a, 0x46, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x22, 0xe8, 0x02, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x52, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12,
	0x55, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x53,
	0x32, 0x43, 0x50, 0x65, 0x74, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x53, 0x32, 0x43, 0x50,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x42, 0x0a, 0x10,
	0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x42, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x44, 0x72, 0x61, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x30, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x72,
	0x61, 0x77, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x33, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x33, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1d, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x2a, 0x57, 0x0a, 0x08, 0x45,
	0x50, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x5f,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x5f, 0x42,
	0x6f, 0x64, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x5f, 0x48, 0x65,
	0x61, 0x64, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x5f, 0x57, 0x69, 0x6e,
	0x67, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x5f, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x10, 0x04, 0x2a, 0x58, 0x0a, 0x0d, 0x50, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x49, 0x64,
	0x6c, 0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x61,
	0x73, 0x6b, 0x5f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x10, 0x03, 0x42, 0x0c,
	0x5a, 0x0a, 0x62, 0x66, 0x66, 0x2f, 0x3b, 0x62, 0x66, 0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_pet_proto_rawDescOnce sync.Once
	file_bff_pet_proto_rawDescData = file_bff_pet_proto_rawDesc
)

func file_bff_pet_proto_rawDescGZIP() []byte {
	file_bff_pet_proto_rawDescOnce.Do(func() {
		file_bff_pet_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_pet_proto_rawDescData)
	})
	return file_bff_pet_proto_rawDescData
}

var file_bff_pet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bff_pet_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_bff_pet_proto_goTypes = []any{
	(EPetPart)(0),                 // 0: bff.EPetPart
	(PetTaskStatus)(0),            // 1: bff.PetTaskStatus
	(*Pet)(nil),                   // 2: bff.Pet
	(*PetPart)(nil),               // 3: bff.PetPart
	(*Egg)(nil),                   // 4: bff.Egg
	(*EggProgress)(nil),           // 5: bff.EggProgress
	(*C2SGetPetInfo)(nil),         // 6: bff.C2SGetPetInfo
	(*S2CGetPetInfo)(nil),         // 7: bff.S2CGetPetInfo
	(*C2SPetHatch)(nil),           // 8: bff.C2SPetHatch
	(*S2CPetHatch)(nil),           // 9: bff.S2CPetHatch
	(*C2SCancelHatch)(nil),        // 10: bff.C2SCancelHatch
	(*S2CCancelHatch)(nil),        // 11: bff.S2CCancelHatch
	(*C2SPetFeed)(nil),            // 12: bff.C2SPetFeed
	(*S2CPetFeed)(nil),            // 13: bff.S2CPetFeed
	(*C2SPetSpeed)(nil),           // 14: bff.C2SPetSpeed
	(*S2CPetSpeed)(nil),           // 15: bff.S2CPetSpeed
	(*C2SPetIncubate)(nil),        // 16: bff.C2SPetIncubate
	(*S2CPetIncubate)(nil),        // 17: bff.S2CPetIncubate
	(*C2SPetBind)(nil),            // 18: bff.C2SPetBind
	(*S2CPetBind)(nil),            // 19: bff.S2CPetBind
	(*C2SPetRelease)(nil),         // 20: bff.C2SPetRelease
	(*S2CPetRelease)(nil),         // 21: bff.S2CPetRelease
	(*C2SPetRename)(nil),          // 22: bff.C2SPetRename
	(*S2CPetRename)(nil),          // 23: bff.S2CPetRename
	(*C2SUpgradeEggKnapsack)(nil), // 24: bff.C2SUpgradeEggKnapsack
	(*S2CUpgradeEggKnapsack)(nil), // 25: bff.S2CUpgradeEggKnapsack
	(*NTFPetBindChange)(nil),      // 26: bff.NTFPetBindChange
	(*C2SPetTask)(nil),            // 27: bff.C2SPetTask
	(*S2CPetTask)(nil),            // 28: bff.S2CPetTask
	(*PetTask)(nil),               // 29: bff.PetTask
	(*C2SPetTaskDispatch)(nil),    // 30: bff.C2SPetTaskDispatch
	(*S2CPetTaskDispatch)(nil),    // 31: bff.S2CPetTaskDispatch
	(*PetTaskDispatch)(nil),       // 32: bff.PetTaskDispatch
	(*C2SPetTaskReward)(nil),      // 33: bff.C2SPetTaskReward
	(*S2CPetTaskReward)(nil),      // 34: bff.S2CPetTaskReward
	(*PetTaskReward)(nil),         // 35: bff.PetTaskReward
	(*C2SPetTaskRefresh)(nil),     // 36: bff.C2SPetTaskRefresh
	(*S2CPetTaskRefresh)(nil),     // 37: bff.S2CPetTaskRefresh
	(*C2SPetTaskQuick)(nil),       // 38: bff.C2SPetTaskQuick
	(*S2CPetTaskQuick)(nil),       // 39: bff.S2CPetTaskQuick
	(*C2SPetTaskUpgrade)(nil),     // 40: bff.C2SPetTaskUpgrade
	(*S2CPetTaskUpgrade)(nil),     // 41: bff.S2CPetTaskUpgrade
	(*C2SPetRecast)(nil),          // 42: bff.C2SPetRecast
	(*S2CPetRecast)(nil),          // 43: bff.S2CPetRecast
	(*C2SPetRecastReplace)(nil),   // 44: bff.C2SPetRecastReplace
	(*S2CPetRecastReplace)(nil),   // 45: bff.S2CPetRecastReplace
	(*C2SPetSkillStudy)(nil),      // 46: bff.C2SPetSkillStudy
	(*S2CPetSkillStudy)(nil),      // 47: bff.S2CPetSkillStudy
	(*C2SPetSkillDraw)(nil),       // 48: bff.C2SPetSkillDraw
	(*S2CPetSkillDraw)(nil),       // 49: bff.S2CPetSkillDraw
	(*C2SPetSkillReclaim)(nil),    // 50: bff.C2SPetSkillReclaim
	(*S2CPetSkillReclaim)(nil),    // 51: bff.S2CPetSkillReclaim
	nil,                           // 52: bff.Pet.TotalAttributeEntry
	nil,                           // 53: bff.Pet.PartsEntry
	nil,                           // 54: bff.Pet.RecastPartEntry
	nil,                           // 55: bff.Pet.SkillStoneEntry
	nil,                           // 56: bff.PetPart.AttributeEntry
	nil,                           // 57: bff.EggProgress.PlanetProgressEntry
	nil,                           // 58: bff.S2CPetRecast.PartsEntry
	nil,                           // 59: bff.S2CPetRecastReplace.TotalAttributeEntry
	nil,                           // 60: bff.S2CPetRecastReplace.PartsEntry
	(*Item)(nil),                  // 61: bff.Item
}
var file_bff_pet_proto_depIdxs = []int32{
	52, // 0: bff.Pet.total_attribute:type_name -> bff.Pet.TotalAttributeEntry
	53, // 1: bff.Pet.parts:type_name -> bff.Pet.PartsEntry
	54, // 2: bff.Pet.recast_part:type_name -> bff.Pet.RecastPartEntry
	55, // 3: bff.Pet.skill_stone:type_name -> bff.Pet.SkillStoneEntry
	56, // 4: bff.PetPart.attribute:type_name -> bff.PetPart.AttributeEntry
	5,  // 5: bff.Egg.progress:type_name -> bff.EggProgress
	57, // 6: bff.EggProgress.planet_progress:type_name -> bff.EggProgress.PlanetProgressEntry
	4,  // 7: bff.S2CGetPetInfo.eggs:type_name -> bff.Egg
	2,  // 8: bff.S2CGetPetInfo.pets:type_name -> bff.Pet
	4,  // 9: bff.S2CPetHatch.egg:type_name -> bff.Egg
	0,  // 10: bff.C2SPetFeed.part:type_name -> bff.EPetPart
	61, // 11: bff.C2SPetFeed.item:type_name -> bff.Item
	0,  // 12: bff.S2CPetFeed.part:type_name -> bff.EPetPart
	5,  // 13: bff.S2CPetFeed.progress:type_name -> bff.EggProgress
	61, // 14: bff.C2SPetSpeed.item:type_name -> bff.Item
	2,  // 15: bff.S2CPetIncubate.pet:type_name -> bff.Pet
	61, // 16: bff.S2CPetRelease.items:type_name -> bff.Item
	61, // 17: bff.S2CUpgradeEggKnapsack.item:type_name -> bff.Item
	29, // 18: bff.S2CPetTask.pet_task:type_name -> bff.PetTask
	1,  // 19: bff.PetTask.task_status:type_name -> bff.PetTaskStatus
	32, // 20: bff.C2SPetTaskDispatch.dispatch:type_name -> bff.PetTaskDispatch
	32, // 21: bff.S2CPetTaskDispatch.dispatch:type_name -> bff.PetTaskDispatch
	35, // 22: bff.S2CPetTaskReward.task_reward:type_name -> bff.PetTaskReward
	61, // 23: bff.PetTaskReward.item:type_name -> bff.Item
	29, // 24: bff.S2CPetTaskQuick.pet_task:type_name -> bff.PetTask
	29, // 25: bff.S2CPetTaskUpgrade.pet_task:type_name -> bff.PetTask
	0,  // 26: bff.C2SPetRecast.lock_part:type_name -> bff.EPetPart
	58, // 27: bff.S2CPetRecast.parts:type_name -> bff.S2CPetRecast.PartsEntry
	59, // 28: bff.S2CPetRecastReplace.total_attribute:type_name -> bff.S2CPetRecastReplace.TotalAttributeEntry
	60, // 29: bff.S2CPetRecastReplace.parts:type_name -> bff.S2CPetRecastReplace.PartsEntry
	61, // 30: bff.S2CPetSkillDraw.item:type_name -> bff.Item
	61, // 31: bff.C2SPetSkillReclaim.item:type_name -> bff.Item
	61, // 32: bff.S2CPetSkillReclaim.item:type_name -> bff.Item
	3,  // 33: bff.Pet.PartsEntry.value:type_name -> bff.PetPart
	3,  // 34: bff.Pet.RecastPartEntry.value:type_name -> bff.PetPart
	3,  // 35: bff.S2CPetRecast.PartsEntry.value:type_name -> bff.PetPart
	3,  // 36: bff.S2CPetRecastReplace.PartsEntry.value:type_name -> bff.PetPart
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_bff_pet_proto_init() }
func file_bff_pet_proto_init() {
	if File_bff_pet_proto != nil {
		return
	}
	file_bff_bcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bff_pet_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Pet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PetPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Egg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EggProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*C2SGetPetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*S2CGetPetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetHatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetHatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*C2SCancelHatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*S2CCancelHatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetSpeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetSpeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetIncubate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetIncubate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetRename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetRename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*C2SUpgradeEggKnapsack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*S2CUpgradeEggKnapsack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*NTFPetBindChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PetTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetTaskDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetTaskDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*PetTaskDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetTaskReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetTaskReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*PetTaskReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetTaskRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetTaskRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetTaskQuick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetTaskQuick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetTaskUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetTaskUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetRecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetRecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetRecastReplace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetRecastReplace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetSkillStudy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetSkillStudy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetSkillDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetSkillDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPetSkillReclaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_pet_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPetSkillReclaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_pet_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bff_pet_proto_goTypes,
		DependencyIndexes: file_bff_pet_proto_depIdxs,
		EnumInfos:         file_bff_pet_proto_enumTypes,
		MessageInfos:      file_bff_pet_proto_msgTypes,
	}.Build()
	File_bff_pet_proto = out.File
	file_bff_pet_proto_rawDesc = nil
	file_bff_pet_proto_goTypes = nil
	file_bff_pet_proto_depIdxs = nil
}
