// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: bff/assit.proto

package bffpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoticeDotType int32

const (
	NoticeDotType_DOT_NONE NoticeDotType = 0
	NoticeDotType_DOT_MAIL NoticeDotType = 11 //邮件
)

// Enum value maps for NoticeDotType.
var (
	NoticeDotType_name = map[int32]string{
		0:  "DOT_NONE",
		11: "DOT_MAIL",
	}
	NoticeDotType_value = map[string]int32{
		"DOT_NONE": 0,
		"DOT_MAIL": 11,
	}
)

func (x NoticeDotType) Enum() *NoticeDotType {
	p := new(NoticeDotType)
	*p = x
	return p
}

func (x NoticeDotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoticeDotType) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_assit_proto_enumTypes[0].Descriptor()
}

func (NoticeDotType) Type() protoreflect.EnumType {
	return &file_bff_assit_proto_enumTypes[0]
}

func (x NoticeDotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoticeDotType.Descriptor instead.
func (NoticeDotType) EnumDescriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{0}
}

type GameNoticeType int32

const (
	GameNoticeType_NOTICE_NONE   GameNoticeType = 0
	GameNoticeType_NOTICE_SYSTEM GameNoticeType = 1 //系统跑马灯
	GameNoticeType_NOTICE_GAME   GameNoticeType = 2 //玩家触发的跑马灯
)

// Enum value maps for GameNoticeType.
var (
	GameNoticeType_name = map[int32]string{
		0: "NOTICE_NONE",
		1: "NOTICE_SYSTEM",
		2: "NOTICE_GAME",
	}
	GameNoticeType_value = map[string]int32{
		"NOTICE_NONE":   0,
		"NOTICE_SYSTEM": 1,
		"NOTICE_GAME":   2,
	}
)

func (x GameNoticeType) Enum() *GameNoticeType {
	p := new(GameNoticeType)
	*p = x
	return p
}

func (x GameNoticeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameNoticeType) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_assit_proto_enumTypes[1].Descriptor()
}

func (GameNoticeType) Type() protoreflect.EnumType {
	return &file_bff_assit_proto_enumTypes[1]
}

func (x GameNoticeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameNoticeType.Descriptor instead.
func (GameNoticeType) EnumDescriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{1}
}

type GameNoticeDataType int32

const (
	GameNoticeDataType_DATA_NONE   GameNoticeDataType = 0
	GameNoticeDataType_DATA_STRING GameNoticeDataType = 1 //字符串
	GameNoticeDataType_DATA_KEY    GameNoticeDataType = 2 //多语言KEY
)

// Enum value maps for GameNoticeDataType.
var (
	GameNoticeDataType_name = map[int32]string{
		0: "DATA_NONE",
		1: "DATA_STRING",
		2: "DATA_KEY",
	}
	GameNoticeDataType_value = map[string]int32{
		"DATA_NONE":   0,
		"DATA_STRING": 1,
		"DATA_KEY":    2,
	}
)

func (x GameNoticeDataType) Enum() *GameNoticeDataType {
	p := new(GameNoticeDataType)
	*p = x
	return p
}

func (x GameNoticeDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameNoticeDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_assit_proto_enumTypes[2].Descriptor()
}

func (GameNoticeDataType) Type() protoreflect.EnumType {
	return &file_bff_assit_proto_enumTypes[2]
}

func (x GameNoticeDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameNoticeDataType.Descriptor instead.
func (GameNoticeDataType) EnumDescriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{2}
}

type GameNoticeCategory int32

const (
	GameNoticeCategory_GN_NONE                  GameNoticeCategory = 0
	GameNoticeCategory_GN_FIRST_CHARGE          GameNoticeCategory = 1 //首充获得雷
	GameNoticeCategory_GN_ADVANCED_FIRST_CHARGE GameNoticeCategory = 2 //高级首充获得皮肤
	GameNoticeCategory_GN_SHOP_BUY_GIFT         GameNoticeCategory = 3 //商城购买血蔷薇礼包
	GameNoticeCategory_GN_PET_RECAST            GameNoticeCategory = 4 //星使洗练出橙色装备
	GameNoticeCategory_GN_PET_DRAW              GameNoticeCategory = 5 //星魂祈愿出橙色星魂
	GameNoticeCategory_GN_PET_INCUBATE          GameNoticeCategory = 6 //星魂培育出橙色装备
	GameNoticeCategory_GN_RANK_PERSONAL_SHOOT   GameNoticeCategory = 7 //个人射手榜第一名人员交替(日榜第一天开始发布)
	GameNoticeCategory_GN_RANK_PERSONAL_KILL    GameNoticeCategory = 8 //个人击杀榜第一名人员交替(周榜第二天开始发布)
	GameNoticeCategory_GN_RANK_PERSONAL_BOSS    GameNoticeCategory = 9 //个人BOSS榜第一名人员交替(周榜第二天开始发布)
)

// Enum value maps for GameNoticeCategory.
var (
	GameNoticeCategory_name = map[int32]string{
		0: "GN_NONE",
		1: "GN_FIRST_CHARGE",
		2: "GN_ADVANCED_FIRST_CHARGE",
		3: "GN_SHOP_BUY_GIFT",
		4: "GN_PET_RECAST",
		5: "GN_PET_DRAW",
		6: "GN_PET_INCUBATE",
		7: "GN_RANK_PERSONAL_SHOOT",
		8: "GN_RANK_PERSONAL_KILL",
		9: "GN_RANK_PERSONAL_BOSS",
	}
	GameNoticeCategory_value = map[string]int32{
		"GN_NONE":                  0,
		"GN_FIRST_CHARGE":          1,
		"GN_ADVANCED_FIRST_CHARGE": 2,
		"GN_SHOP_BUY_GIFT":         3,
		"GN_PET_RECAST":            4,
		"GN_PET_DRAW":              5,
		"GN_PET_INCUBATE":          6,
		"GN_RANK_PERSONAL_SHOOT":   7,
		"GN_RANK_PERSONAL_KILL":    8,
		"GN_RANK_PERSONAL_BOSS":    9,
	}
)

func (x GameNoticeCategory) Enum() *GameNoticeCategory {
	p := new(GameNoticeCategory)
	*p = x
	return p
}

func (x GameNoticeCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameNoticeCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_assit_proto_enumTypes[3].Descriptor()
}

func (GameNoticeCategory) Type() protoreflect.EnumType {
	return &file_bff_assit_proto_enumTypes[3]
}

func (x GameNoticeCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameNoticeCategory.Descriptor instead.
func (GameNoticeCategory) EnumDescriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{3}
}

type C2SPlaySelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SPlaySelectList) Reset() {
	*x = C2SPlaySelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPlaySelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPlaySelectList) ProtoMessage() {}

func (x *C2SPlaySelectList) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPlaySelectList.ProtoReflect.Descriptor instead.
func (*C2SPlaySelectList) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{0}
}

type S2CPlaySelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayList []*PlayData `protobuf:"bytes,1,rep,name=play_list,json=playList,proto3" json:"play_list,omitempty"` //玩法列表 playSelect中的ID
}

func (x *S2CPlaySelectList) Reset() {
	*x = S2CPlaySelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPlaySelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPlaySelectList) ProtoMessage() {}

func (x *S2CPlaySelectList) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPlaySelectList.ProtoReflect.Descriptor instead.
func (*S2CPlaySelectList) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{1}
}

func (x *S2CPlaySelectList) GetPlayList() []*PlayData {
	if x != nil {
		return x.PlayList
	}
	return nil
}

type PlayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayId         int32 `protobuf:"varint,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	PlayMode       int32 `protobuf:"varint,2,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`                     //0=常规玩法 1=限时玩法
	CountDown      int32 `protobuf:"varint,3,opt,name=count_down,json=countDown,proto3" json:"count_down,omitempty"`                  //结束倒计时 play_mode为1时有效 秒
	StartCountDown int32 `protobuf:"varint,4,opt,name=start_count_down,json=startCountDown,proto3" json:"start_count_down,omitempty"` //开始时间倒计时 play_mode为1时有效 秒
}

func (x *PlayData) Reset() {
	*x = PlayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayData) ProtoMessage() {}

func (x *PlayData) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayData.ProtoReflect.Descriptor instead.
func (*PlayData) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{2}
}

func (x *PlayData) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *PlayData) GetPlayMode() int32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *PlayData) GetCountDown() int32 {
	if x != nil {
		return x.CountDown
	}
	return 0
}

func (x *PlayData) GetStartCountDown() int32 {
	if x != nil {
		return x.StartCountDown
	}
	return 0
}

type C2SGetPlayerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SGetPlayerSetting) Reset() {
	*x = C2SGetPlayerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SGetPlayerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SGetPlayerSetting) ProtoMessage() {}

func (x *C2SGetPlayerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SGetPlayerSetting.ProtoReflect.Descriptor instead.
func (*C2SGetPlayerSetting) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{3}
}

type S2CGetPlayerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotAllowFriend bool `protobuf:"varint,1,opt,name=not_allow_friend,json=notAllowFriend,proto3" json:"not_allow_friend,omitempty"`
}

func (x *S2CGetPlayerSetting) Reset() {
	*x = S2CGetPlayerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CGetPlayerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CGetPlayerSetting) ProtoMessage() {}

func (x *S2CGetPlayerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CGetPlayerSetting.ProtoReflect.Descriptor instead.
func (*S2CGetPlayerSetting) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{4}
}

func (x *S2CGetPlayerSetting) GetNotAllowFriend() bool {
	if x != nil {
		return x.NotAllowFriend
	}
	return false
}

type C2SModifyPlayerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotAllowFriend bool `protobuf:"varint,1,opt,name=not_allow_friend,json=notAllowFriend,proto3" json:"not_allow_friend,omitempty"`
}

func (x *C2SModifyPlayerSetting) Reset() {
	*x = C2SModifyPlayerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SModifyPlayerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SModifyPlayerSetting) ProtoMessage() {}

func (x *C2SModifyPlayerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SModifyPlayerSetting.ProtoReflect.Descriptor instead.
func (*C2SModifyPlayerSetting) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{5}
}

func (x *C2SModifyPlayerSetting) GetNotAllowFriend() bool {
	if x != nil {
		return x.NotAllowFriend
	}
	return false
}

type S2CModifyPlayerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotAllowFriend bool `protobuf:"varint,1,opt,name=not_allow_friend,json=notAllowFriend,proto3" json:"not_allow_friend,omitempty"`
}

func (x *S2CModifyPlayerSetting) Reset() {
	*x = S2CModifyPlayerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CModifyPlayerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CModifyPlayerSetting) ProtoMessage() {}

func (x *S2CModifyPlayerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CModifyPlayerSetting.ProtoReflect.Descriptor instead.
func (*S2CModifyPlayerSetting) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{6}
}

func (x *S2CModifyPlayerSetting) GetNotAllowFriend() bool {
	if x != nil {
		return x.NotAllowFriend
	}
	return false
}

type C2SCDKeyReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdKey string `protobuf:"bytes,1,opt,name=cd_key,json=cdKey,proto3" json:"cd_key,omitempty"`
}

func (x *C2SCDKeyReward) Reset() {
	*x = C2SCDKeyReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCDKeyReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCDKeyReward) ProtoMessage() {}

func (x *C2SCDKeyReward) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCDKeyReward.ProtoReflect.Descriptor instead.
func (*C2SCDKeyReward) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{7}
}

func (x *C2SCDKeyReward) GetCdKey() string {
	if x != nil {
		return x.CdKey
	}
	return ""
}

type S2CCDKeyReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"` //领取状态 同ERROR_CODE
}

func (x *S2CCDKeyReward) Reset() {
	*x = S2CCDKeyReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCDKeyReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCDKeyReward) ProtoMessage() {}

func (x *S2CCDKeyReward) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCDKeyReward.ProtoReflect.Descriptor instead.
func (*S2CCDKeyReward) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{8}
}

func (x *S2CCDKeyReward) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

// 获取限时活动列表
type C2SActiveTimeLimited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SActiveTimeLimited) Reset() {
	*x = C2SActiveTimeLimited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SActiveTimeLimited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SActiveTimeLimited) ProtoMessage() {}

func (x *C2SActiveTimeLimited) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SActiveTimeLimited.ProtoReflect.Descriptor instead.
func (*C2SActiveTimeLimited) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{9}
}

type S2CActiveTimeLimited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveId []int32 `protobuf:"varint,1,rep,packed,name=active_id,json=activeId,proto3" json:"active_id,omitempty"` //限时活动ID 暂定现金SOLO赛为101
}

func (x *S2CActiveTimeLimited) Reset() {
	*x = S2CActiveTimeLimited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CActiveTimeLimited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CActiveTimeLimited) ProtoMessage() {}

func (x *S2CActiveTimeLimited) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CActiveTimeLimited.ProtoReflect.Descriptor instead.
func (*S2CActiveTimeLimited) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{10}
}

func (x *S2CActiveTimeLimited) GetActiveId() []int32 {
	if x != nil {
		return x.ActiveId
	}
	return nil
}

// 服务器主动推送红点消息
type NTFNoticeDot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DotType NoticeDotType `protobuf:"varint,1,opt,name=dot_type,json=dotType,proto3,enum=bff.NoticeDotType" json:"dot_type,omitempty"` //红点类型
	Num     int32         `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                                               //数量(需要数量的红点就填 不需要数量的红点忽略)
}

func (x *NTFNoticeDot) Reset() {
	*x = NTFNoticeDot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFNoticeDot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFNoticeDot) ProtoMessage() {}

func (x *NTFNoticeDot) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFNoticeDot.ProtoReflect.Descriptor instead.
func (*NTFNoticeDot) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{11}
}

func (x *NTFNoticeDot) GetDotType() NoticeDotType {
	if x != nil {
		return x.DotType
	}
	return NoticeDotType_DOT_NONE
}

func (x *NTFNoticeDot) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type C2SPlayerLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"` //玩家当前设置的语言代码
}

func (x *C2SPlayerLanguage) Reset() {
	*x = C2SPlayerLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPlayerLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPlayerLanguage) ProtoMessage() {}

func (x *C2SPlayerLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPlayerLanguage.ProtoReflect.Descriptor instead.
func (*C2SPlayerLanguage) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{12}
}

func (x *C2SPlayerLanguage) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type S2CPlayerLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CPlayerLanguage) Reset() {
	*x = S2CPlayerLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPlayerLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPlayerLanguage) ProtoMessage() {}

func (x *S2CPlayerLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPlayerLanguage.ProtoReflect.Descriptor instead.
func (*S2CPlayerLanguage) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{13}
}

type NTFGameNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeType GameNoticeType `protobuf:"varint,1,opt,name=notice_type,json=noticeType,proto3,enum=bff.GameNoticeType" json:"notice_type,omitempty"`
	Content    *GameNotice    `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //跑马灯内容
	Params     []*GameNotice  `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`   //跑马灯参数
	Amount     int32          `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`  //播放次数
	Delay      int32          `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`    //播放间隔 毫秒
}

func (x *NTFGameNotice) Reset() {
	*x = NTFGameNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFGameNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFGameNotice) ProtoMessage() {}

func (x *NTFGameNotice) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFGameNotice.ProtoReflect.Descriptor instead.
func (*NTFGameNotice) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{14}
}

func (x *NTFGameNotice) GetNoticeType() GameNoticeType {
	if x != nil {
		return x.NoticeType
	}
	return GameNoticeType_NOTICE_NONE
}

func (x *NTFGameNotice) GetContent() *GameNotice {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NTFGameNotice) GetParams() []*GameNotice {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *NTFGameNotice) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *NTFGameNotice) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type GameNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType GameNoticeDataType `protobuf:"varint,1,opt,name=data_type,json=dataType,proto3,enum=bff.GameNoticeDataType" json:"data_type,omitempty"`
	Data     string             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameNotice) Reset() {
	*x = GameNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNotice) ProtoMessage() {}

func (x *GameNotice) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNotice.ProtoReflect.Descriptor instead.
func (*GameNotice) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{15}
}

func (x *GameNotice) GetDataType() GameNoticeDataType {
	if x != nil {
		return x.DataType
	}
	return GameNoticeDataType_DATA_NONE
}

func (x *GameNotice) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GameNoticeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeMap map[string]*GameNotice `protobuf:"bytes,1,rep,name=notice_map,json=noticeMap,proto3" json:"notice_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameNoticeMsg) Reset() {
	*x = GameNoticeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_assit_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNoticeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNoticeMsg) ProtoMessage() {}

func (x *GameNoticeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bff_assit_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNoticeMsg.ProtoReflect.Descriptor instead.
func (*GameNoticeMsg) Descriptor() ([]byte, []int) {
	return file_bff_assit_proto_rawDescGZIP(), []int{16}
}

func (x *GameNoticeMsg) GetNoticeMap() map[string]*GameNotice {
	if x != nil {
		return x.NoticeMap
	}
	return nil
}

var File_bff_assit_proto protoreflect.FileDescriptor

var file_bff_assit_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x66, 0x66, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x62, 0x66, 0x66, 0x1a, 0x11, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x32, 0x53,
	0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3f,
	0x0a, 0x11, 0x53, 0x32, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x89, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x43,
	0x32, 0x53, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0x3f, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f, 0x74,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x22, 0x42, 0x0a, 0x16, 0x43, 0x32, 0x53, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a,
	0x10, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x42, 0x0a, 0x16, 0x53, 0x32, 0x43, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x6f, 0x74,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x27, 0x0a, 0x0e, 0x43,
	0x32, 0x53, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x63, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x64, 0x4b, 0x65, 0x79, 0x22, 0x2b, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x43, 0x44, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x32, 0x53, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x53, 0x32, 0x43,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x4f,
	0x0a, 0x0c, 0x4e, 0x54, 0x46, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x74, 0x12, 0x2d,
	0x0a, 0x08, 0x64, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22,
	0x2f, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x4e, 0x54, 0x46, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22,
	0x56, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x40, 0x0a, 0x0a, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73,
	0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x4d, 0x0a, 0x0e, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x2b, 0x0a, 0x0d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x54,
	0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x0b, 0x2a, 0x45, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54,
	0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f,
	0x54, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x2a, 0x42,
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4b, 0x45, 0x59,
	0x10, 0x02, 0x2a, 0xf5, 0x01, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x4e, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x4e, 0x5f, 0x46, 0x49, 0x52,
	0x53, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x47,
	0x4e, 0x5f, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x4e, 0x5f,
	0x53, 0x48, 0x4f, 0x50, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x47, 0x4e, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x53, 0x54,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x4e, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x44, 0x52, 0x41,
	0x57, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x4e, 0x5f, 0x50, 0x45, 0x54, 0x5f, 0x49, 0x4e,
	0x43, 0x55, 0x42, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x4e, 0x5f, 0x52,
	0x41, 0x4e, 0x4b, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x48, 0x4f,
	0x4f, 0x54, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x5f,
	0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x08, 0x12,
	0x19, 0x0a, 0x15, 0x47, 0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f,
	0x4e, 0x41, 0x4c, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x10, 0x09, 0x42, 0x0c, 0x5a, 0x0a, 0x62, 0x66,
	0x66, 0x2f, 0x3b, 0x62, 0x66, 0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_assit_proto_rawDescOnce sync.Once
	file_bff_assit_proto_rawDescData = file_bff_assit_proto_rawDesc
)

func file_bff_assit_proto_rawDescGZIP() []byte {
	file_bff_assit_proto_rawDescOnce.Do(func() {
		file_bff_assit_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_assit_proto_rawDescData)
	})
	return file_bff_assit_proto_rawDescData
}

var file_bff_assit_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_bff_assit_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bff_assit_proto_goTypes = []interface{}{
	(NoticeDotType)(0),             // 0: bff.NoticeDotType
	(GameNoticeType)(0),            // 1: bff.GameNoticeType
	(GameNoticeDataType)(0),        // 2: bff.GameNoticeDataType
	(GameNoticeCategory)(0),        // 3: bff.GameNoticeCategory
	(*C2SPlaySelectList)(nil),      // 4: bff.C2SPlaySelectList
	(*S2CPlaySelectList)(nil),      // 5: bff.S2CPlaySelectList
	(*PlayData)(nil),               // 6: bff.PlayData
	(*C2SGetPlayerSetting)(nil),    // 7: bff.C2SGetPlayerSetting
	(*S2CGetPlayerSetting)(nil),    // 8: bff.S2CGetPlayerSetting
	(*C2SModifyPlayerSetting)(nil), // 9: bff.C2SModifyPlayerSetting
	(*S2CModifyPlayerSetting)(nil), // 10: bff.S2CModifyPlayerSetting
	(*C2SCDKeyReward)(nil),         // 11: bff.C2SCDKeyReward
	(*S2CCDKeyReward)(nil),         // 12: bff.S2CCDKeyReward
	(*C2SActiveTimeLimited)(nil),   // 13: bff.C2SActiveTimeLimited
	(*S2CActiveTimeLimited)(nil),   // 14: bff.S2CActiveTimeLimited
	(*NTFNoticeDot)(nil),           // 15: bff.NTFNoticeDot
	(*C2SPlayerLanguage)(nil),      // 16: bff.C2SPlayerLanguage
	(*S2CPlayerLanguage)(nil),      // 17: bff.S2CPlayerLanguage
	(*NTFGameNotice)(nil),          // 18: bff.NTFGameNotice
	(*GameNotice)(nil),             // 19: bff.GameNotice
	(*GameNoticeMsg)(nil),          // 20: bff.GameNoticeMsg
	nil,                            // 21: bff.GameNoticeMsg.NoticeMapEntry
}
var file_bff_assit_proto_depIdxs = []int32{
	6,  // 0: bff.S2CPlaySelectList.play_list:type_name -> bff.PlayData
	0,  // 1: bff.NTFNoticeDot.dot_type:type_name -> bff.NoticeDotType
	1,  // 2: bff.NTFGameNotice.notice_type:type_name -> bff.GameNoticeType
	19, // 3: bff.NTFGameNotice.content:type_name -> bff.GameNotice
	19, // 4: bff.NTFGameNotice.params:type_name -> bff.GameNotice
	2,  // 5: bff.GameNotice.data_type:type_name -> bff.GameNoticeDataType
	21, // 6: bff.GameNoticeMsg.notice_map:type_name -> bff.GameNoticeMsg.NoticeMapEntry
	19, // 7: bff.GameNoticeMsg.NoticeMapEntry.value:type_name -> bff.GameNotice
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_bff_assit_proto_init() }
func file_bff_assit_proto_init() {
	if File_bff_assit_proto != nil {
		return
	}
	file_bff_bcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bff_assit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPlaySelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPlaySelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SGetPlayerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CGetPlayerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SModifyPlayerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CModifyPlayerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCDKeyReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCDKeyReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SActiveTimeLimited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CActiveTimeLimited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFNoticeDot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPlayerLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPlayerLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFGameNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_assit_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNoticeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_assit_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bff_assit_proto_goTypes,
		DependencyIndexes: file_bff_assit_proto_depIdxs,
		EnumInfos:         file_bff_assit_proto_enumTypes,
		MessageInfos:      file_bff_assit_proto_msgTypes,
	}.Build()
	File_bff_assit_proto = out.File
	file_bff_assit_proto_rawDesc = nil
	file_bff_assit_proto_goTypes = nil
	file_bff_assit_proto_depIdxs = nil
}
