// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: bff/cashbattle.proto

package bffpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CashBattleStatus int32

const (
	CashBattleStatus_BATTLE_NONE      CashBattleStatus = 0 //未开放
	CashBattleStatus_BATTLE_SIGN      CashBattleStatus = 1 //报名期
	CashBattleStatus_BATTLE_SIGN_END  CashBattleStatus = 2 //报名截至
	CashBattleStatus_BATTLE_GUESSING  CashBattleStatus = 3 //竞猜期
	CashBattleStatus_BATTLE_GET_READY CashBattleStatus = 4 //选手准备期
	CashBattleStatus_BATTLE_BATTLING  CashBattleStatus = 5 //比赛期
	CashBattleStatus_BATTLE_IDLE      CashBattleStatus = 6 //等待期 休整期
	CashBattleStatus_BATTLE_END       CashBattleStatus = 7 //赛事结束
)

// Enum value maps for CashBattleStatus.
var (
	CashBattleStatus_name = map[int32]string{
		0: "BATTLE_NONE",
		1: "BATTLE_SIGN",
		2: "BATTLE_SIGN_END",
		3: "BATTLE_GUESSING",
		4: "BATTLE_GET_READY",
		5: "BATTLE_BATTLING",
		6: "BATTLE_IDLE",
		7: "BATTLE_END",
	}
	CashBattleStatus_value = map[string]int32{
		"BATTLE_NONE":      0,
		"BATTLE_SIGN":      1,
		"BATTLE_SIGN_END":  2,
		"BATTLE_GUESSING":  3,
		"BATTLE_GET_READY": 4,
		"BATTLE_BATTLING":  5,
		"BATTLE_IDLE":      6,
		"BATTLE_END":       7,
	}
)

func (x CashBattleStatus) Enum() *CashBattleStatus {
	p := new(CashBattleStatus)
	*p = x
	return p
}

func (x CashBattleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CashBattleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_cashbattle_proto_enumTypes[0].Descriptor()
}

func (CashBattleStatus) Type() protoreflect.EnumType {
	return &file_bff_cashbattle_proto_enumTypes[0]
}

func (x CashBattleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CashBattleStatus.Descriptor instead.
func (CashBattleStatus) EnumDescriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{0}
}

// 获取现金赛信息
type C2SGetCashBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"` //客户端用的语言
}

func (x *C2SGetCashBattle) Reset() {
	*x = C2SGetCashBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SGetCashBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SGetCashBattle) ProtoMessage() {}

func (x *C2SGetCashBattle) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SGetCashBattle.ProtoReflect.Descriptor instead.
func (*C2SGetCashBattle) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{0}
}

func (x *C2SGetCashBattle) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// 现金赛信息返回
type S2CGetCashBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          CashBattleStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bff.CashBattleStatus" json:"status,omitempty"`
	StateFinishTime int64            `protobuf:"varint,2,opt,name=state_finish_time,json=stateFinishTime,proto3" json:"state_finish_time,omitempty"`                                             //阶段结束时间戳 秒 不知道的时候为0
	IsJoiner        bool             `protobuf:"varint,3,opt,name=is_joiner,json=isJoiner,proto3" json:"is_joiner,omitempty"`                                                                    //是否报名
	IsPlayer        bool             `protobuf:"varint,4,opt,name=is_player,json=isPlayer,proto3" json:"is_player,omitempty"`                                                                    //是否入选比赛
	JoinNum         int32            `protobuf:"varint,5,opt,name=join_num,json=joinNum,proto3" json:"join_num,omitempty"`                                                                       //报名人数/竞猜人数
	RoleId          int32            `protobuf:"varint,6,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                                                                          //选中角色ID
	Info            *CashBattleInfo  `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`                                                                                             //赛事信息
	Stake           map[int64]int64  `protobuf:"bytes,8,rep,name=stake,proto3" json:"stake,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //自己竞猜信息 key:押注玩家ID value:押注钻石数量
	IsLock          bool             `protobuf:"varint,9,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"`                                                                          //当前英雄是否锁定
}

func (x *S2CGetCashBattle) Reset() {
	*x = S2CGetCashBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CGetCashBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CGetCashBattle) ProtoMessage() {}

func (x *S2CGetCashBattle) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CGetCashBattle.ProtoReflect.Descriptor instead.
func (*S2CGetCashBattle) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{1}
}

func (x *S2CGetCashBattle) GetStatus() CashBattleStatus {
	if x != nil {
		return x.Status
	}
	return CashBattleStatus_BATTLE_NONE
}

func (x *S2CGetCashBattle) GetStateFinishTime() int64 {
	if x != nil {
		return x.StateFinishTime
	}
	return 0
}

func (x *S2CGetCashBattle) GetIsJoiner() bool {
	if x != nil {
		return x.IsJoiner
	}
	return false
}

func (x *S2CGetCashBattle) GetIsPlayer() bool {
	if x != nil {
		return x.IsPlayer
	}
	return false
}

func (x *S2CGetCashBattle) GetJoinNum() int32 {
	if x != nil {
		return x.JoinNum
	}
	return 0
}

func (x *S2CGetCashBattle) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *S2CGetCashBattle) GetInfo() *CashBattleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *S2CGetCashBattle) GetStake() map[int64]int64 {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *S2CGetCashBattle) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

// 获取现金赛对战表
type C2SGetCashBattleVersus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"` //客户端用的语言
}

func (x *C2SGetCashBattleVersus) Reset() {
	*x = C2SGetCashBattleVersus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SGetCashBattleVersus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SGetCashBattleVersus) ProtoMessage() {}

func (x *C2SGetCashBattleVersus) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SGetCashBattleVersus.ProtoReflect.Descriptor instead.
func (*C2SGetCashBattleVersus) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{2}
}

func (x *C2SGetCashBattleVersus) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type S2CGetCashBattleVersus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string              `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                   //标题
	BattleVersus []*CashBattleVersus `protobuf:"bytes,2,rep,name=battle_versus,json=battleVersus,proto3" json:"battle_versus,omitempty"` //对战表
}

func (x *S2CGetCashBattleVersus) Reset() {
	*x = S2CGetCashBattleVersus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CGetCashBattleVersus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CGetCashBattleVersus) ProtoMessage() {}

func (x *S2CGetCashBattleVersus) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CGetCashBattleVersus.ProtoReflect.Descriptor instead.
func (*S2CGetCashBattleVersus) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{3}
}

func (x *S2CGetCashBattleVersus) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *S2CGetCashBattleVersus) GetBattleVersus() []*CashBattleVersus {
	if x != nil {
		return x.BattleVersus
	}
	return nil
}

// 报名参赛
type C2SCashBattleJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SCashBattleJoin) Reset() {
	*x = C2SCashBattleJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCashBattleJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCashBattleJoin) ProtoMessage() {}

func (x *C2SCashBattleJoin) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCashBattleJoin.ProtoReflect.Descriptor instead.
func (*C2SCashBattleJoin) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{4}
}

// 报名参赛返回
type S2CCashBattleJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"` //同error_code
}

func (x *S2CCashBattleJoin) Reset() {
	*x = S2CCashBattleJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCashBattleJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCashBattleJoin) ProtoMessage() {}

func (x *S2CCashBattleJoin) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCashBattleJoin.ProtoReflect.Descriptor instead.
func (*S2CCashBattleJoin) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{5}
}

func (x *S2CCashBattleJoin) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

// 参与竞猜
type C2SGetCashBattleGuess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       //竞猜的玩家ID
	StakeValue int64 `protobuf:"varint,2,opt,name=stake_value,json=stakeValue,proto3" json:"stake_value,omitempty"` //下注额
}

func (x *C2SGetCashBattleGuess) Reset() {
	*x = C2SGetCashBattleGuess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SGetCashBattleGuess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SGetCashBattleGuess) ProtoMessage() {}

func (x *C2SGetCashBattleGuess) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SGetCashBattleGuess.ProtoReflect.Descriptor instead.
func (*C2SGetCashBattleGuess) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{6}
}

func (x *C2SGetCashBattleGuess) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *C2SGetCashBattleGuess) GetStakeValue() int64 {
	if x != nil {
		return x.StakeValue
	}
	return 0
}

// 参与竞猜返回
type S2CGetCashBattleGuess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId        int64             `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                        //竞猜的玩家ID
	TotalStakeValue int64             `protobuf:"varint,2,opt,name=total_stake_value,json=totalStakeValue,proto3" json:"total_stake_value,omitempty"` //下注该玩家的总下注额
	BattleVersus    *CashBattleVersus `protobuf:"bytes,3,opt,name=battle_versus,json=battleVersus,proto3" json:"battle_versus,omitempty"`             //对战表
}

func (x *S2CGetCashBattleGuess) Reset() {
	*x = S2CGetCashBattleGuess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CGetCashBattleGuess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CGetCashBattleGuess) ProtoMessage() {}

func (x *S2CGetCashBattleGuess) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CGetCashBattleGuess.ProtoReflect.Descriptor instead.
func (*S2CGetCashBattleGuess) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{7}
}

func (x *S2CGetCashBattleGuess) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *S2CGetCashBattleGuess) GetTotalStakeValue() int64 {
	if x != nil {
		return x.TotalStakeValue
	}
	return 0
}

func (x *S2CGetCashBattleGuess) GetBattleVersus() *CashBattleVersus {
	if x != nil {
		return x.BattleVersus
	}
	return nil
}

// 进入赛场
type C2SCashBattleEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SCashBattleEnter) Reset() {
	*x = C2SCashBattleEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCashBattleEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCashBattleEnter) ProtoMessage() {}

func (x *C2SCashBattleEnter) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCashBattleEnter.ProtoReflect.Descriptor instead.
func (*C2SCashBattleEnter) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{8}
}

// 进入赛场
type S2CCashBattleEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleTime int64 `protobuf:"varint,1,opt,name=battle_time,json=battleTime,proto3" json:"battle_time,omitempty"` //开赛时间戳 秒
}

func (x *S2CCashBattleEnter) Reset() {
	*x = S2CCashBattleEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCashBattleEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCashBattleEnter) ProtoMessage() {}

func (x *S2CCashBattleEnter) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCashBattleEnter.ProtoReflect.Descriptor instead.
func (*S2CCashBattleEnter) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{9}
}

func (x *S2CCashBattleEnter) GetBattleTime() int64 {
	if x != nil {
		return x.BattleTime
	}
	return 0
}

// 选定英雄
type C2SCaseBattleSelectHero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"` //选定的英雄ID
	Lock   bool  `protobuf:"varint,2,opt,name=lock,proto3" json:"lock,omitempty"`                   //是否锁定 true 锁定 false解锁
}

func (x *C2SCaseBattleSelectHero) Reset() {
	*x = C2SCaseBattleSelectHero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCaseBattleSelectHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCaseBattleSelectHero) ProtoMessage() {}

func (x *C2SCaseBattleSelectHero) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCaseBattleSelectHero.ProtoReflect.Descriptor instead.
func (*C2SCaseBattleSelectHero) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{10}
}

func (x *C2SCaseBattleSelectHero) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *C2SCaseBattleSelectHero) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

// 选定英雄返回
type S2CCaseBattleSelectHero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"` //选定的英雄ID
	Lock   bool  `protobuf:"varint,2,opt,name=lock,proto3" json:"lock,omitempty"`                   //是否锁定 true 锁定 false解锁
}

func (x *S2CCaseBattleSelectHero) Reset() {
	*x = S2CCaseBattleSelectHero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCaseBattleSelectHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCaseBattleSelectHero) ProtoMessage() {}

func (x *S2CCaseBattleSelectHero) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCaseBattleSelectHero.ProtoReflect.Descriptor instead.
func (*S2CCaseBattleSelectHero) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{11}
}

func (x *S2CCaseBattleSelectHero) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *S2CCaseBattleSelectHero) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

// 通知进入选手准备期
type NtfCashBattleReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleTime int64 `protobuf:"varint,1,opt,name=battle_time,json=battleTime,proto3" json:"battle_time,omitempty"` //开赛时间戳 秒
}

func (x *NtfCashBattleReady) Reset() {
	*x = NtfCashBattleReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfCashBattleReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfCashBattleReady) ProtoMessage() {}

func (x *NtfCashBattleReady) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfCashBattleReady.ProtoReflect.Descriptor instead.
func (*NtfCashBattleReady) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{12}
}

func (x *NtfCashBattleReady) GetBattleTime() int64 {
	if x != nil {
		return x.BattleTime
	}
	return 0
}

// 进入战斗场景
type C2SCashBattleStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SCashBattleStart) Reset() {
	*x = C2SCashBattleStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCashBattleStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCashBattleStart) ProtoMessage() {}

func (x *C2SCashBattleStart) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCashBattleStart.ProtoReflect.Descriptor instead.
func (*C2SCashBattleStart) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{13}
}

// 进入战斗场景
type S2CCashBattleStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
}

func (x *S2CCashBattleStart) Reset() {
	*x = S2CCashBattleStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCashBattleStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCashBattleStart) ProtoMessage() {}

func (x *S2CCashBattleStart) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCashBattleStart.ProtoReflect.Descriptor instead.
func (*S2CCashBattleStart) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{14}
}

func (x *S2CCashBattleStart) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

// 赛事信息
type CashBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                        //标题
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                    //活动简介
	MedalNum  int32  `protobuf:"varint,3,opt,name=medal_num,json=medalNum,proto3" json:"medal_num,omitempty"` //报名条件 奖杯数
	HeroNum   int32  `protobuf:"varint,4,opt,name=hero_num,json=heroNum,proto3" json:"hero_num,omitempty"`    //报名条件 英雄数
	PetNum    int32  `protobuf:"varint,5,opt,name=pet_num,json=petNum,proto3" json:"pet_num,omitempty"`       //报名条件  宠物数量
	ItemId    int32  `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`       //报名条件 道具ID
	ItemNum   int32  `protobuf:"varint,7,opt,name=item_num,json=itemNum,proto3" json:"item_num,omitempty"`    //报名条件 道具数量
	Condition string `protobuf:"bytes,8,opt,name=condition,proto3" json:"condition,omitempty"`                //活动报名条件文字描述
}

func (x *CashBattleInfo) Reset() {
	*x = CashBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleInfo) ProtoMessage() {}

func (x *CashBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleInfo.ProtoReflect.Descriptor instead.
func (*CashBattleInfo) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{15}
}

func (x *CashBattleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CashBattleInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CashBattleInfo) GetMedalNum() int32 {
	if x != nil {
		return x.MedalNum
	}
	return 0
}

func (x *CashBattleInfo) GetHeroNum() int32 {
	if x != nil {
		return x.HeroNum
	}
	return 0
}

func (x *CashBattleInfo) GetPetNum() int32 {
	if x != nil {
		return x.PetNum
	}
	return 0
}

func (x *CashBattleInfo) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CashBattleInfo) GetItemNum() int32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

func (x *CashBattleInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type CashBattleVersus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                    //对战信息唯一ID
	LeftPlayer  *CashBattlePlayer `protobuf:"bytes,2,opt,name=left_player,json=leftPlayer,proto3" json:"left_player,omitempty"`    //左侧玩家信息
	RightPlayer *CashBattlePlayer `protobuf:"bytes,3,opt,name=right_player,json=rightPlayer,proto3" json:"right_player,omitempty"` //右侧玩家信息
	IsFighting  bool              `protobuf:"varint,4,opt,name=is_fighting,json=isFighting,proto3" json:"is_fighting,omitempty"`   // bool 是否战斗中
	WinnerId    int64             `protobuf:"varint,5,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`         //获胜者ID
}

func (x *CashBattleVersus) Reset() {
	*x = CashBattleVersus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleVersus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleVersus) ProtoMessage() {}

func (x *CashBattleVersus) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleVersus.ProtoReflect.Descriptor instead.
func (*CashBattleVersus) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{16}
}

func (x *CashBattleVersus) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CashBattleVersus) GetLeftPlayer() *CashBattlePlayer {
	if x != nil {
		return x.LeftPlayer
	}
	return nil
}

func (x *CashBattleVersus) GetRightPlayer() *CashBattlePlayer {
	if x != nil {
		return x.RightPlayer
	}
	return nil
}

func (x *CashBattleVersus) GetIsFighting() bool {
	if x != nil {
		return x.IsFighting
	}
	return false
}

func (x *CashBattleVersus) GetWinnerId() int64 {
	if x != nil {
		return x.WinnerId
	}
	return 0
}

// 参赛者信息
type CashBattlePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   int64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       //玩家id
	PlayerIcon string `protobuf:"bytes,2,opt,name=player_icon,json=playerIcon,proto3" json:"player_icon,omitempty"`  //玩家头像
	PlayerNick string `protobuf:"bytes,3,opt,name=player_nick,json=playerNick,proto3" json:"player_nick,omitempty"`  //玩家昵称
	StakeValue int64  `protobuf:"varint,4,opt,name=stake_value,json=stakeValue,proto3" json:"stake_value,omitempty"` //竞猜钻石数
}

func (x *CashBattlePlayer) Reset() {
	*x = CashBattlePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattlePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattlePlayer) ProtoMessage() {}

func (x *CashBattlePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattlePlayer.ProtoReflect.Descriptor instead.
func (*CashBattlePlayer) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{17}
}

func (x *CashBattlePlayer) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *CashBattlePlayer) GetPlayerIcon() string {
	if x != nil {
		return x.PlayerIcon
	}
	return ""
}

func (x *CashBattlePlayer) GetPlayerNick() string {
	if x != nil {
		return x.PlayerNick
	}
	return ""
}

func (x *CashBattlePlayer) GetStakeValue() int64 {
	if x != nil {
		return x.StakeValue
	}
	return 0
}

// 观战打赏
type C2SCashBattleGratuity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //要打赏的玩家id
	Gold     int64 `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`                         //要打赏的金币数
}

func (x *C2SCashBattleGratuity) Reset() {
	*x = C2SCashBattleGratuity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCashBattleGratuity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCashBattleGratuity) ProtoMessage() {}

func (x *C2SCashBattleGratuity) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCashBattleGratuity.ProtoReflect.Descriptor instead.
func (*C2SCashBattleGratuity) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{18}
}

func (x *C2SCashBattleGratuity) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *C2SCashBattleGratuity) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type S2CCashBattleGratuity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //要打赏的玩家id
	Gold     int64 `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`                         //打赏的金币数
}

func (x *S2CCashBattleGratuity) Reset() {
	*x = S2CCashBattleGratuity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_cashbattle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCashBattleGratuity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCashBattleGratuity) ProtoMessage() {}

func (x *S2CCashBattleGratuity) ProtoReflect() protoreflect.Message {
	mi := &file_bff_cashbattle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCashBattleGratuity.ProtoReflect.Descriptor instead.
func (*S2CCashBattleGratuity) Descriptor() ([]byte, []int) {
	return file_bff_cashbattle_proto_rawDescGZIP(), []int{19}
}

func (x *S2CCashBattleGratuity) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *S2CCashBattleGratuity) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

var File_bff_cashbattle_proto protoreflect.FileDescriptor

var file_bff_cashbattle_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x66, 0x66, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x62, 0x66, 0x66, 0x22, 0x2e, 0x0a, 0x10, 0x43,
	0x32, 0x53, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x8f, 0x03, 0x0a, 0x10,
	0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c,
	0x6f, 0x63, 0x6b, 0x1a, 0x38, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a,
	0x16, 0x43, 0x32, 0x53, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75,
	0x73, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x22,
	0x13, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x22, 0x2e, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x75, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x15,
	0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x47, 0x75, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a,
	0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52, 0x0c, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x32,
	0x53, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x22, 0x35, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x17, 0x43, 0x32, 0x53, 0x43, 0x61,
	0x73, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x65,
	0x72, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22,
	0x46, 0x0a, 0x17, 0x53, 0x32, 0x43, 0x43, 0x61, 0x73, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65,
	0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72,
	0x6f, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x35, 0x0a, 0x12, 0x4e, 0x74, 0x66, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x14,
	0x0a, 0x12, 0x43, 0x32, 0x53, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x22, 0x2f, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x64,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x4e, 0x75, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x10,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a,
	0x6c, 0x65, 0x66, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x6f, 0x6c,
	0x64, 0x22, 0x48, 0x0a, 0x15, 0x53, 0x32, 0x43, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x2a, 0xaa, 0x01, 0x0a, 0x10,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x47, 0x55, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x07, 0x42, 0x0c, 0x5a, 0x0a, 0x62, 0x66, 0x66, 0x2f,
	0x3b, 0x62, 0x66, 0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_cashbattle_proto_rawDescOnce sync.Once
	file_bff_cashbattle_proto_rawDescData = file_bff_cashbattle_proto_rawDesc
)

func file_bff_cashbattle_proto_rawDescGZIP() []byte {
	file_bff_cashbattle_proto_rawDescOnce.Do(func() {
		file_bff_cashbattle_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_cashbattle_proto_rawDescData)
	})
	return file_bff_cashbattle_proto_rawDescData
}

var file_bff_cashbattle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bff_cashbattle_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_bff_cashbattle_proto_goTypes = []interface{}{
	(CashBattleStatus)(0),           // 0: bff.CashBattleStatus
	(*C2SGetCashBattle)(nil),        // 1: bff.C2SGetCashBattle
	(*S2CGetCashBattle)(nil),        // 2: bff.S2CGetCashBattle
	(*C2SGetCashBattleVersus)(nil),  // 3: bff.C2SGetCashBattleVersus
	(*S2CGetCashBattleVersus)(nil),  // 4: bff.S2CGetCashBattleVersus
	(*C2SCashBattleJoin)(nil),       // 5: bff.C2SCashBattleJoin
	(*S2CCashBattleJoin)(nil),       // 6: bff.S2CCashBattleJoin
	(*C2SGetCashBattleGuess)(nil),   // 7: bff.C2SGetCashBattleGuess
	(*S2CGetCashBattleGuess)(nil),   // 8: bff.S2CGetCashBattleGuess
	(*C2SCashBattleEnter)(nil),      // 9: bff.C2SCashBattleEnter
	(*S2CCashBattleEnter)(nil),      // 10: bff.S2CCashBattleEnter
	(*C2SCaseBattleSelectHero)(nil), // 11: bff.C2SCaseBattleSelectHero
	(*S2CCaseBattleSelectHero)(nil), // 12: bff.S2CCaseBattleSelectHero
	(*NtfCashBattleReady)(nil),      // 13: bff.NtfCashBattleReady
	(*C2SCashBattleStart)(nil),      // 14: bff.C2SCashBattleStart
	(*S2CCashBattleStart)(nil),      // 15: bff.S2CCashBattleStart
	(*CashBattleInfo)(nil),          // 16: bff.CashBattleInfo
	(*CashBattleVersus)(nil),        // 17: bff.CashBattleVersus
	(*CashBattlePlayer)(nil),        // 18: bff.CashBattlePlayer
	(*C2SCashBattleGratuity)(nil),   // 19: bff.C2SCashBattleGratuity
	(*S2CCashBattleGratuity)(nil),   // 20: bff.S2CCashBattleGratuity
	nil,                             // 21: bff.S2CGetCashBattle.StakeEntry
}
var file_bff_cashbattle_proto_depIdxs = []int32{
	0,  // 0: bff.S2CGetCashBattle.status:type_name -> bff.CashBattleStatus
	16, // 1: bff.S2CGetCashBattle.info:type_name -> bff.CashBattleInfo
	21, // 2: bff.S2CGetCashBattle.stake:type_name -> bff.S2CGetCashBattle.StakeEntry
	17, // 3: bff.S2CGetCashBattleVersus.battle_versus:type_name -> bff.CashBattleVersus
	17, // 4: bff.S2CGetCashBattleGuess.battle_versus:type_name -> bff.CashBattleVersus
	18, // 5: bff.CashBattleVersus.left_player:type_name -> bff.CashBattlePlayer
	18, // 6: bff.CashBattleVersus.right_player:type_name -> bff.CashBattlePlayer
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_bff_cashbattle_proto_init() }
func file_bff_cashbattle_proto_init() {
	if File_bff_cashbattle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bff_cashbattle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SGetCashBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CGetCashBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SGetCashBattleVersus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CGetCashBattleVersus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCashBattleJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCashBattleJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SGetCashBattleGuess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CGetCashBattleGuess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCashBattleEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCashBattleEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCaseBattleSelectHero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCaseBattleSelectHero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtfCashBattleReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCashBattleStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCashBattleStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleVersus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattlePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCashBattleGratuity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_cashbattle_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCashBattleGratuity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_cashbattle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bff_cashbattle_proto_goTypes,
		DependencyIndexes: file_bff_cashbattle_proto_depIdxs,
		EnumInfos:         file_bff_cashbattle_proto_enumTypes,
		MessageInfos:      file_bff_cashbattle_proto_msgTypes,
	}.Build()
	File_bff_cashbattle_proto = out.File
	file_bff_cashbattle_proto_rawDesc = nil
	file_bff_cashbattle_proto_goTypes = nil
	file_bff_cashbattle_proto_depIdxs = nil
}
