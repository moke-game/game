// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: bff/login.proto

package bffpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// API: 用户删除账号
type C2SAccountDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SAccountDel) Reset() {
	*x = C2SAccountDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SAccountDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SAccountDel) ProtoMessage() {}

func (x *C2SAccountDel) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SAccountDel.ProtoReflect.Descriptor instead.
func (*C2SAccountDel) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{0}
}

type S2CAccountDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CAccountDel) Reset() {
	*x = S2CAccountDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CAccountDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CAccountDel) ProtoMessage() {}

func (x *S2CAccountDel) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CAccountDel.ProtoReflect.Descriptor instead.
func (*S2CAccountDel) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{1}
}

// 登录验证
type C2SAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`      //TOKEN
	Openid      string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`    //玩家唯一ID
	Visitor     int32  `protobuf:"varint,4,opt,name=visitor,proto3" json:"visitor,omitempty"` //_是否游客	[0:玩家,1:游客]
	Version     string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`  //游戏的大版本号
	MachineCode string `protobuf:"bytes,6,opt,name=machine_code,json=machineCode,proto3" json:"machine_code,omitempty"`
	TimeSpan    string `protobuf:"bytes,7,opt,name=time_span,json=timeSpan,proto3" json:"time_span,omitempty"`
	AppVersion  string `protobuf:"bytes,8,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` //这个版本无用
	MessageId   string `protobuf:"bytes,9,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	OsType      string `protobuf:"bytes,10,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`                // 1:安卓 2:ios
	Ip          string `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`                                      //IP
	CountryCode string `protobuf:"bytes,12,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` //国家代码
	Country     string `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`                            //国家
	Province    string `protobuf:"bytes,14,opt,name=province,proto3" json:"province,omitempty"`                          //省份
	City        string `protobuf:"bytes,15,opt,name=city,proto3" json:"city,omitempty"`                                  //城市
	Brand       string `protobuf:"bytes,16,opt,name=brand,proto3" json:"brand,omitempty"`                                //手机型号
	Network     string `protobuf:"bytes,17,opt,name=network,proto3" json:"network,omitempty"`                            //手机网络
	Language    string `protobuf:"bytes,18,opt,name=language,proto3" json:"language,omitempty"`                          //手机系统语言
	ResVersion  string `protobuf:"bytes,19,opt,name=res_version,json=resVersion,proto3" json:"res_version,omitempty"`    //热更的小版本号
}

func (x *C2SAuth) Reset() {
	*x = C2SAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SAuth) ProtoMessage() {}

func (x *C2SAuth) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SAuth.ProtoReflect.Descriptor instead.
func (*C2SAuth) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{2}
}

func (x *C2SAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *C2SAuth) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *C2SAuth) GetVisitor() int32 {
	if x != nil {
		return x.Visitor
	}
	return 0
}

func (x *C2SAuth) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *C2SAuth) GetMachineCode() string {
	if x != nil {
		return x.MachineCode
	}
	return ""
}

func (x *C2SAuth) GetTimeSpan() string {
	if x != nil {
		return x.TimeSpan
	}
	return ""
}

func (x *C2SAuth) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *C2SAuth) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *C2SAuth) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *C2SAuth) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *C2SAuth) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *C2SAuth) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *C2SAuth) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *C2SAuth) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *C2SAuth) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *C2SAuth) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *C2SAuth) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *C2SAuth) GetResVersion() string {
	if x != nil {
		return x.ResVersion
	}
	return ""
}

type S2CAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret             int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Uid             int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                                                 //UID
	SysTime         int64  `protobuf:"varint,4,opt,name=sys_time,json=sysTime,proto3" json:"sys_time,omitempty"`                          // 服务器系统时间(s)
	PlayerExist     bool   `protobuf:"varint,6,opt,name=player_exist,json=playerExist,proto3" json:"player_exist,omitempty"`              // 是否存在角色
	RmdName         string `protobuf:"bytes,7,opt,name=rmd_name,json=rmdName,proto3" json:"rmd_name,omitempty"`                           // 如果不存在角色后的推荐角色名
	Token           string `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`                                              //游戏 TOKEN
	IsBlocked       bool   `protobuf:"varint,9,opt,name=is_blocked,json=isBlocked,proto3" json:"is_blocked,omitempty"`                    // 是否被封禁
	BlockedDuration int64  `protobuf:"varint,10,opt,name=blocked_duration,json=blockedDuration,proto3" json:"blocked_duration,omitempty"` // 封禁剩余时间(秒), 0代表永久封禁
	BlockedReason   string `protobuf:"bytes,11,opt,name=blocked_reason,json=blockedReason,proto3" json:"blocked_reason,omitempty"`        // 封禁原因
	GuideStep       int32  `protobuf:"varint,12,opt,name=guide_step,json=guideStep,proto3" json:"guide_step,omitempty"`                   //新手引导完成步骤
	GuideStepPet    int32  `protobuf:"varint,13,opt,name=guide_step_pet,json=guideStepPet,proto3" json:"guide_step_pet,omitempty"`        //宠物引导完成步骤  -1:需要引导 >0:已引导步骤
	GuideStepBoss   int32  `protobuf:"varint,14,opt,name=guide_step_boss,json=guideStepBoss,proto3" json:"guide_step_boss,omitempty"`     //boss战引导完成步骤  -1:需要引导 >0:已引导步骤
	GuideStepPlay   int32  `protobuf:"varint,15,opt,name=guide_step_play,json=guideStepPlay,proto3" json:"guide_step_play,omitempty"`     //玩法引导完成步骤  -1:需要引导 >0:已引导步骤
}

func (x *S2CAuth) Reset() {
	*x = S2CAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CAuth) ProtoMessage() {}

func (x *S2CAuth) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CAuth.ProtoReflect.Descriptor instead.
func (*S2CAuth) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{3}
}

func (x *S2CAuth) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *S2CAuth) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *S2CAuth) GetSysTime() int64 {
	if x != nil {
		return x.SysTime
	}
	return 0
}

func (x *S2CAuth) GetPlayerExist() bool {
	if x != nil {
		return x.PlayerExist
	}
	return false
}

func (x *S2CAuth) GetRmdName() string {
	if x != nil {
		return x.RmdName
	}
	return ""
}

func (x *S2CAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *S2CAuth) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *S2CAuth) GetBlockedDuration() int64 {
	if x != nil {
		return x.BlockedDuration
	}
	return 0
}

func (x *S2CAuth) GetBlockedReason() string {
	if x != nil {
		return x.BlockedReason
	}
	return ""
}

func (x *S2CAuth) GetGuideStep() int32 {
	if x != nil {
		return x.GuideStep
	}
	return 0
}

func (x *S2CAuth) GetGuideStepPet() int32 {
	if x != nil {
		return x.GuideStepPet
	}
	return 0
}

func (x *S2CAuth) GetGuideStepBoss() int32 {
	if x != nil {
		return x.GuideStepBoss
	}
	return 0
}

func (x *S2CAuth) GetGuideStepPlay() int32 {
	if x != nil {
		return x.GuideStepPlay
	}
	return 0
}

// API: 用户绑定注册
type C2SUserBindReg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`     //UMS TOKEN
	Openid      string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`   //UMS 玩家唯一ID
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"` //_版本号
	MachineCode string `protobuf:"bytes,4,opt,name=machine_code,json=machineCode,proto3" json:"machine_code,omitempty"`
	TimeSpan    string `protobuf:"bytes,5,opt,name=time_span,json=timeSpan,proto3" json:"time_span,omitempty"`
	AppVersion  string `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	MessageId   string `protobuf:"bytes,7,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *C2SUserBindReg) Reset() {
	*x = C2SUserBindReg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SUserBindReg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SUserBindReg) ProtoMessage() {}

func (x *C2SUserBindReg) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SUserBindReg.ProtoReflect.Descriptor instead.
func (*C2SUserBindReg) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{4}
}

func (x *C2SUserBindReg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *C2SUserBindReg) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *C2SUserBindReg) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *C2SUserBindReg) GetMachineCode() string {
	if x != nil {
		return x.MachineCode
	}
	return ""
}

func (x *C2SUserBindReg) GetTimeSpan() string {
	if x != nil {
		return x.TimeSpan
	}
	return ""
}

func (x *C2SUserBindReg) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *C2SUserBindReg) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type S2CUserBindReg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"` //游戏 TOKEN
}

func (x *S2CUserBindReg) Reset() {
	*x = S2CUserBindReg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CUserBindReg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CUserBindReg) ProtoMessage() {}

func (x *S2CUserBindReg) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CUserBindReg.ProtoReflect.Descriptor instead.
func (*S2CUserBindReg) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{5}
}

func (x *S2CUserBindReg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *S2CUserBindReg) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *S2CUserBindReg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 心跳
type C2SHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params string `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"` // 参数
}

func (x *C2SHeartbeat) Reset() {
	*x = C2SHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SHeartbeat) ProtoMessage() {}

func (x *C2SHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SHeartbeat.ProtoReflect.Descriptor instead.
func (*C2SHeartbeat) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{6}
}

func (x *C2SHeartbeat) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type S2CHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysTime int32  `protobuf:"varint,1,opt,name=sys_time,json=sysTime,proto3" json:"sys_time,omitempty"` // 服务器系统时间(s)
	Params  string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`                   // 参数
}

func (x *S2CHeartbeat) Reset() {
	*x = S2CHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CHeartbeat) ProtoMessage() {}

func (x *S2CHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CHeartbeat.ProtoReflect.Descriptor instead.
func (*S2CHeartbeat) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{7}
}

func (x *S2CHeartbeat) GetSysTime() int32 {
	if x != nil {
		return x.SysTime
	}
	return 0
}

func (x *S2CHeartbeat) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

// Blocked details
type BlockedDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start   int64  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`                    // 开始时间
	End     int64  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`                        // 结束时间 (0代表永久封禁)
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                   // 封禁原因
	BanType int32  `protobuf:"varint,4,opt,name=ban_type,json=banType,proto3" json:"ban_type,omitempty"` // 封禁类型(1:禁言 2:账号封禁 3:重复登陆 4:被踢下线)
}

func (x *BlockedDetail) Reset() {
	*x = BlockedDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockedDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockedDetail) ProtoMessage() {}

func (x *BlockedDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockedDetail.ProtoReflect.Descriptor instead.
func (*BlockedDetail) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{8}
}

func (x *BlockedDetail) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *BlockedDetail) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *BlockedDetail) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BlockedDetail) GetBanType() int32 {
	if x != nil {
		return x.BanType
	}
	return 0
}

// Blocked notification
type NtfBlocked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *BlockedDetail `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *NtfBlocked) Reset() {
	*x = NtfBlocked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfBlocked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfBlocked) ProtoMessage() {}

func (x *NtfBlocked) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfBlocked.ProtoReflect.Descriptor instead.
func (*NtfBlocked) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{9}
}

func (x *NtfBlocked) GetDetails() *BlockedDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

// 登出
type C2SLogoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` //角色唯一ID
}

func (x *C2SLogoff) Reset() {
	*x = C2SLogoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SLogoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SLogoff) ProtoMessage() {}

func (x *C2SLogoff) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SLogoff.ProtoReflect.Descriptor instead.
func (*C2SLogoff) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{10}
}

func (x *C2SLogoff) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type S2CLogoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *S2CLogoff) Reset() {
	*x = S2CLogoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CLogoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CLogoff) ProtoMessage() {}

func (x *S2CLogoff) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CLogoff.ProtoReflect.Descriptor instead.
func (*S2CLogoff) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{11}
}

func (x *S2CLogoff) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// GM 指令
type C2SBffGMCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"` // 指令
}

func (x *C2SBffGMCommand) Reset() {
	*x = C2SBffGMCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SBffGMCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SBffGMCommand) ProtoMessage() {}

func (x *C2SBffGMCommand) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SBffGMCommand.ProtoReflect.Descriptor instead.
func (*C2SBffGMCommand) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{12}
}

func (x *C2SBffGMCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type S2CBffGMCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // 错误信息
}

func (x *S2CBffGMCommand) Reset() {
	*x = S2CBffGMCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CBffGMCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CBffGMCommand) ProtoMessage() {}

func (x *S2CBffGMCommand) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CBffGMCommand.ProtoReflect.Descriptor instead.
func (*S2CBffGMCommand) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{13}
}

func (x *S2CBffGMCommand) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 拉取队员到队长大厅 结构同S2CGetRoomInfo
type NtfPullMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomHost  string `protobuf:"bytes,1,opt,name=room_host,json=roomHost,proto3" json:"room_host,omitempty"`    // 房间地址
	RoomId    string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`          // 房间id
	RoomType  int32  `protobuf:"varint,3,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"`   //房间类型 0:世界 1:战斗 3:
	RoomToken string `protobuf:"bytes,4,opt,name=room_token,json=roomToken,proto3" json:"room_token,omitempty"` //战斗房间token
	PlayId    int32  `protobuf:"varint,5,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`         //玩法ID
	MapId     int32  `protobuf:"varint,6,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`            //地图ID
	Reason    int32  `protobuf:"varint,7,opt,name=reason,proto3" json:"reason,omitempty"`                       //拉取原因 101=组队拉取
}

func (x *NtfPullMember) Reset() {
	*x = NtfPullMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_login_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPullMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPullMember) ProtoMessage() {}

func (x *NtfPullMember) ProtoReflect() protoreflect.Message {
	mi := &file_bff_login_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPullMember.ProtoReflect.Descriptor instead.
func (*NtfPullMember) Descriptor() ([]byte, []int) {
	return file_bff_login_proto_rawDescGZIP(), []int{14}
}

func (x *NtfPullMember) GetRoomHost() string {
	if x != nil {
		return x.RoomHost
	}
	return ""
}

func (x *NtfPullMember) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *NtfPullMember) GetRoomType() int32 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

func (x *NtfPullMember) GetRoomToken() string {
	if x != nil {
		return x.RoomToken
	}
	return ""
}

func (x *NtfPullMember) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *NtfPullMember) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *NtfPullMember) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

var File_bff_login_proto protoreflect.FileDescriptor

var file_bff_login_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x66, 0x66, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x62, 0x66, 0x66, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x22, 0xee, 0x03, 0x0a, 0x07, 0x43, 0x32, 0x53,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x03, 0x0a, 0x07, 0x53, 0x32,
	0x43, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x79, 0x73,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x79, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6d, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6d, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67,
	0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x75, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x70, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x65, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x62, 0x6f, 0x73,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x42, 0x6f, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x65, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x67, 0x75, 0x69, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x22, 0xd8,
	0x01, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x53, 0x32, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x26, 0x0a, 0x0c, 0x43,
	0x32, 0x53, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x79, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x4e, 0x74, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1d,
	0x0a, 0x09, 0x43, 0x32, 0x53, 0x4c, 0x6f, 0x67, 0x6f, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1d, 0x0a,
	0x09, 0x53, 0x32, 0x43, 0x4c, 0x6f, 0x67, 0x6f, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x2b, 0x0a, 0x0f,
	0x43, 0x32, 0x53, 0x42, 0x66, 0x66, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x32, 0x43,
	0x42, 0x66, 0x66, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xc9, 0x01, 0x0a, 0x0d, 0x4e, 0x74, 0x66, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0c,
	0x5a, 0x0a, 0x62, 0x66, 0x66, 0x2f, 0x3b, 0x62, 0x66, 0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_login_proto_rawDescOnce sync.Once
	file_bff_login_proto_rawDescData = file_bff_login_proto_rawDesc
)

func file_bff_login_proto_rawDescGZIP() []byte {
	file_bff_login_proto_rawDescOnce.Do(func() {
		file_bff_login_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_login_proto_rawDescData)
	})
	return file_bff_login_proto_rawDescData
}

var file_bff_login_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_bff_login_proto_goTypes = []interface{}{
	(*C2SAccountDel)(nil),   // 0: bff.C2SAccountDel
	(*S2CAccountDel)(nil),   // 1: bff.S2CAccountDel
	(*C2SAuth)(nil),         // 2: bff.C2SAuth
	(*S2CAuth)(nil),         // 3: bff.S2CAuth
	(*C2SUserBindReg)(nil),  // 4: bff.C2SUserBindReg
	(*S2CUserBindReg)(nil),  // 5: bff.S2CUserBindReg
	(*C2SHeartbeat)(nil),    // 6: bff.C2SHeartbeat
	(*S2CHeartbeat)(nil),    // 7: bff.S2CHeartbeat
	(*BlockedDetail)(nil),   // 8: bff.BlockedDetail
	(*NtfBlocked)(nil),      // 9: bff.NtfBlocked
	(*C2SLogoff)(nil),       // 10: bff.C2SLogoff
	(*S2CLogoff)(nil),       // 11: bff.S2CLogoff
	(*C2SBffGMCommand)(nil), // 12: bff.C2SBffGMCommand
	(*S2CBffGMCommand)(nil), // 13: bff.S2CBffGMCommand
	(*NtfPullMember)(nil),   // 14: bff.NtfPullMember
}
var file_bff_login_proto_depIdxs = []int32{
	8, // 0: bff.NtfBlocked.details:type_name -> bff.BlockedDetail
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_bff_login_proto_init() }
func file_bff_login_proto_init() {
	if File_bff_login_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bff_login_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SAccountDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CAccountDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SUserBindReg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CUserBindReg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockedDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtfBlocked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SLogoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CLogoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SBffGMCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CBffGMCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_login_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtfPullMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_login_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bff_login_proto_goTypes,
		DependencyIndexes: file_bff_login_proto_depIdxs,
		MessageInfos:      file_bff_login_proto_msgTypes,
	}.Build()
	File_bff_login_proto = out.File
	file_bff_login_proto_rawDesc = nil
	file_bff_login_proto_goTypes = nil
	file_bff_login_proto_depIdxs = nil
}
