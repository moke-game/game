// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bff/party.proto

package bffpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartyMemberStatus int32

const (
	PartyMemberStatus_STATUS_UNSPECIFIED PartyMemberStatus = 0
	PartyMemberStatus_STATUS_READY       PartyMemberStatus = 1
	PartyMemberStatus_STATUS_NOT_READY   PartyMemberStatus = 2
)

// Enum value maps for PartyMemberStatus.
var (
	PartyMemberStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_READY",
		2: "STATUS_NOT_READY",
	}
	PartyMemberStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_READY":       1,
		"STATUS_NOT_READY":   2,
	}
)

func (x PartyMemberStatus) Enum() *PartyMemberStatus {
	p := new(PartyMemberStatus)
	*p = x
	return p
}

func (x PartyMemberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyMemberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_party_proto_enumTypes[0].Descriptor()
}

func (PartyMemberStatus) Type() protoreflect.EnumType {
	return &file_bff_party_proto_enumTypes[0]
}

func (x PartyMemberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyMemberStatus.Descriptor instead.
func (PartyMemberStatus) EnumDescriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{0}
}

type PartyReplyCode int32

const (
	PartyReplyCode_REPLY_NONE             PartyReplyCode = 0
	PartyReplyCode_REPLY_AGREE            PartyReplyCode = 1 //同意
	PartyReplyCode_REPLY_REFUSE           PartyReplyCode = 2 //拒绝
	PartyReplyCode_REPLY_REFUSE_SOME_TIME PartyReplyCode = 3 //一定时间内拒绝
	PartyReplyCode_REPLY_BUSY             PartyReplyCode = 4 //当前正忙
)

// Enum value maps for PartyReplyCode.
var (
	PartyReplyCode_name = map[int32]string{
		0: "REPLY_NONE",
		1: "REPLY_AGREE",
		2: "REPLY_REFUSE",
		3: "REPLY_REFUSE_SOME_TIME",
		4: "REPLY_BUSY",
	}
	PartyReplyCode_value = map[string]int32{
		"REPLY_NONE":             0,
		"REPLY_AGREE":            1,
		"REPLY_REFUSE":           2,
		"REPLY_REFUSE_SOME_TIME": 3,
		"REPLY_BUSY":             4,
	}
)

func (x PartyReplyCode) Enum() *PartyReplyCode {
	p := new(PartyReplyCode)
	*p = x
	return p
}

func (x PartyReplyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyReplyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_party_proto_enumTypes[1].Descriptor()
}

func (PartyReplyCode) Type() protoreflect.EnumType {
	return &file_bff_party_proto_enumTypes[1]
}

func (x PartyReplyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyReplyCode.Descriptor instead.
func (PartyReplyCode) EnumDescriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{1}
}

type PartyMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=simple_info,json=simpleInfo,proto3" json:"simple_info,omitempty"`
	Status     PartyMemberStatus `protobuf:"varint,2,opt,name=status,proto3,enum=bff.PartyMemberStatus" json:"status,omitempty"`
}

func (x *PartyMember) Reset() {
	*x = PartyMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyMember) ProtoMessage() {}

func (x *PartyMember) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyMember.ProtoReflect.Descriptor instead.
func (*PartyMember) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{0}
}

func (x *PartyMember) GetSimpleInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.SimpleInfo
	}
	return nil
}

func (x *PartyMember) GetStatus() PartyMemberStatus {
	if x != nil {
		return x.Status
	}
	return PartyMemberStatus_STATUS_UNSPECIFIED
}

type PartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId      string                 `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`                                                                                                         // 房间id
	PartyOwner   int64                  `protobuf:"varint,2,opt,name=party_owner,json=partyOwner,proto3" json:"party_owner,omitempty"`                                                                                               // 房主
	PlayId       int32                  `protobuf:"varint,3,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`                                                                                                           // 房间地图
	PartyMembers map[int64]*PartyMember `protobuf:"bytes,4,rep,name=party_members,json=partyMembers,proto3" json:"party_members,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 房间成员
}

func (x *PartyInfo) Reset() {
	*x = PartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInfo) ProtoMessage() {}

func (x *PartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInfo.ProtoReflect.Descriptor instead.
func (*PartyInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{1}
}

func (x *PartyInfo) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *PartyInfo) GetPartyOwner() int64 {
	if x != nil {
		return x.PartyOwner
	}
	return 0
}

func (x *PartyInfo) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *PartyInfo) GetPartyMembers() map[int64]*PartyMember {
	if x != nil {
		return x.PartyMembers
	}
	return nil
}

// 玩家加入party广播
type NtfPartyMemberJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*PartyMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"` // 房间成员信息
}

func (x *NtfPartyMemberJoin) Reset() {
	*x = NtfPartyMemberJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPartyMemberJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPartyMemberJoin) ProtoMessage() {}

func (x *NtfPartyMemberJoin) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPartyMemberJoin.ProtoReflect.Descriptor instead.
func (*NtfPartyMemberJoin) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{2}
}

func (x *NtfPartyMemberJoin) GetMembers() []*PartyMember {
	if x != nil {
		return x.Members
	}
	return nil
}

// 玩家离开party广播
type NtfPartyMemberLeave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberIds   []int64 `protobuf:"varint,1,rep,packed,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"` // 离开的玩家id
	LeaveReason int32   `protobuf:"varint,2,opt,name=leave_reason,json=leaveReason,proto3" json:"leave_reason,omitempty"`  // 离开原因 (1:leave, 2:kick out)
}

func (x *NtfPartyMemberLeave) Reset() {
	*x = NtfPartyMemberLeave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPartyMemberLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPartyMemberLeave) ProtoMessage() {}

func (x *NtfPartyMemberLeave) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPartyMemberLeave.ProtoReflect.Descriptor instead.
func (*NtfPartyMemberLeave) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{3}
}

func (x *NtfPartyMemberLeave) GetMemberIds() []int64 {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

func (x *NtfPartyMemberLeave) GetLeaveReason() int32 {
	if x != nil {
		return x.LeaveReason
	}
	return 0
}

// 玩家准备状态更新广播
type NtfPartyMemberStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status map[int64]PartyMemberStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=bff.PartyMemberStatus"` // 玩家状态
}

func (x *NtfPartyMemberStatus) Reset() {
	*x = NtfPartyMemberStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPartyMemberStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPartyMemberStatus) ProtoMessage() {}

func (x *NtfPartyMemberStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPartyMemberStatus.ProtoReflect.Descriptor instead.
func (*NtfPartyMemberStatus) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{4}
}

func (x *NtfPartyMemberStatus) GetStatus() map[int64]PartyMemberStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// 玩家英雄更新广播
type NtfPartyMemberHero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heros map[int64]int32 `protobuf:"bytes,1,rep,name=heros,proto3" json:"heros,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 玩家英雄
}

func (x *NtfPartyMemberHero) Reset() {
	*x = NtfPartyMemberHero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPartyMemberHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPartyMemberHero) ProtoMessage() {}

func (x *NtfPartyMemberHero) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPartyMemberHero.ProtoReflect.Descriptor instead.
func (*NtfPartyMemberHero) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{5}
}

func (x *NtfPartyMemberHero) GetHeros() map[int64]int32 {
	if x != nil {
		return x.Heros
	}
	return nil
}

// 房间信息更改
type NtfPartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayId int32 `protobuf:"varint,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"` // 地图id
	Owner  int64 `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`                 // 房主id
}

func (x *NtfPartyInfo) Reset() {
	*x = NtfPartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPartyInfo) ProtoMessage() {}

func (x *NtfPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPartyInfo.ProtoReflect.Descriptor instead.
func (*NtfPartyInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{6}
}

func (x *NtfPartyInfo) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *NtfPartyInfo) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

// 获取房间信息
type C2SGetPartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*C2SGetPartyInfo_PartyId
	//	*C2SGetPartyInfo_MemberId
	Kind isC2SGetPartyInfo_Kind `protobuf_oneof:"kind"`
}

func (x *C2SGetPartyInfo) Reset() {
	*x = C2SGetPartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SGetPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SGetPartyInfo) ProtoMessage() {}

func (x *C2SGetPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SGetPartyInfo.ProtoReflect.Descriptor instead.
func (*C2SGetPartyInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{7}
}

func (m *C2SGetPartyInfo) GetKind() isC2SGetPartyInfo_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *C2SGetPartyInfo) GetPartyId() string {
	if x, ok := x.GetKind().(*C2SGetPartyInfo_PartyId); ok {
		return x.PartyId
	}
	return ""
}

func (x *C2SGetPartyInfo) GetMemberId() int64 {
	if x, ok := x.GetKind().(*C2SGetPartyInfo_MemberId); ok {
		return x.MemberId
	}
	return 0
}

type isC2SGetPartyInfo_Kind interface {
	isC2SGetPartyInfo_Kind()
}

type C2SGetPartyInfo_PartyId struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof"` // 房间id
}

type C2SGetPartyInfo_MemberId struct {
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3,oneof"` // 玩家id
}

func (*C2SGetPartyInfo_PartyId) isC2SGetPartyInfo_Kind() {}

func (*C2SGetPartyInfo_MemberId) isC2SGetPartyInfo_Kind() {}

// 获取房间信息返回
type S2CGetPartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyInfo *PartyInfo `protobuf:"bytes,1,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"` // 房间信息
}

func (x *S2CGetPartyInfo) Reset() {
	*x = S2CGetPartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CGetPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CGetPartyInfo) ProtoMessage() {}

func (x *S2CGetPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CGetPartyInfo.ProtoReflect.Descriptor instead.
func (*S2CGetPartyInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{8}
}

func (x *S2CGetPartyInfo) GetPartyInfo() *PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

// 11-30新增协议 单独处理创建组队
type C2SCreateParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayId int32 `protobuf:"varint,2,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"` // 玩法id (创建时必填)
}

func (x *C2SCreateParty) Reset() {
	*x = C2SCreateParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCreateParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCreateParty) ProtoMessage() {}

func (x *C2SCreateParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCreateParty.ProtoReflect.Descriptor instead.
func (*C2SCreateParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{9}
}

func (x *C2SCreateParty) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

type S2CCreateParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyInfo *PartyInfo `protobuf:"bytes,1,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"` // 房间信息
}

func (x *S2CCreateParty) Reset() {
	*x = S2CCreateParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCreateParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCreateParty) ProtoMessage() {}

func (x *S2CCreateParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCreateParty.ProtoReflect.Descriptor instead.
func (*S2CCreateParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{10}
}

func (x *S2CCreateParty) GetPartyInfo() *PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

// 离开party
type C2SLeaveParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SLeaveParty) Reset() {
	*x = C2SLeaveParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SLeaveParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SLeaveParty) ProtoMessage() {}

func (x *C2SLeaveParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SLeaveParty.ProtoReflect.Descriptor instead.
func (*C2SLeaveParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{11}
}

// 离开party返回
type S2CLeaveParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CLeaveParty) Reset() {
	*x = S2CLeaveParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CLeaveParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CLeaveParty) ProtoMessage() {}

func (x *S2CLeaveParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CLeaveParty.ProtoReflect.Descriptor instead.
func (*S2CLeaveParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{12}
}

// 踢出玩家
type C2SKickParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *C2SKickParty) Reset() {
	*x = C2SKickParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SKickParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SKickParty) ProtoMessage() {}

func (x *C2SKickParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SKickParty.ProtoReflect.Descriptor instead.
func (*C2SKickParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{13}
}

func (x *C2SKickParty) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 踢出玩家返回
type S2CKickParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CKickParty) Reset() {
	*x = S2CKickParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CKickParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CKickParty) ProtoMessage() {}

func (x *S2CKickParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CKickParty.ProtoReflect.Descriptor instead.
func (*S2CKickParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{14}
}

// 准备
type C2SReadyParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SReadyParty) Reset() {
	*x = C2SReadyParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SReadyParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SReadyParty) ProtoMessage() {}

func (x *C2SReadyParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SReadyParty.ProtoReflect.Descriptor instead.
func (*C2SReadyParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{15}
}

// 准备返回
type S2CReadyParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CReadyParty) Reset() {
	*x = S2CReadyParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CReadyParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CReadyParty) ProtoMessage() {}

func (x *S2CReadyParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CReadyParty.ProtoReflect.Descriptor instead.
func (*S2CReadyParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{16}
}

// 取消准备
type C2SCancelReadyParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SCancelReadyParty) Reset() {
	*x = C2SCancelReadyParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCancelReadyParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCancelReadyParty) ProtoMessage() {}

func (x *C2SCancelReadyParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCancelReadyParty.ProtoReflect.Descriptor instead.
func (*C2SCancelReadyParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{17}
}

// 取消准备返回
type S2CCancelReadyParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CCancelReadyParty) Reset() {
	*x = S2CCancelReadyParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCancelReadyParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCancelReadyParty) ProtoMessage() {}

func (x *S2CCancelReadyParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCancelReadyParty.ProtoReflect.Descriptor instead.
func (*S2CCancelReadyParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{18}
}

// 选择玩法
type C2SChoosePartyMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayId int32 `protobuf:"varint,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"` // 玩法id
}

func (x *C2SChoosePartyMap) Reset() {
	*x = C2SChoosePartyMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SChoosePartyMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SChoosePartyMap) ProtoMessage() {}

func (x *C2SChoosePartyMap) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SChoosePartyMap.ProtoReflect.Descriptor instead.
func (*C2SChoosePartyMap) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{19}
}

func (x *C2SChoosePartyMap) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

// 选择玩法返回
type S2CChoosePartyMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CChoosePartyMap) Reset() {
	*x = S2CChoosePartyMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CChoosePartyMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CChoosePartyMap) ProtoMessage() {}

func (x *S2CChoosePartyMap) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CChoosePartyMap.ProtoReflect.Descriptor instead.
func (*S2CChoosePartyMap) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{20}
}

type C2SFriendPartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SFriendPartyInfo) Reset() {
	*x = C2SFriendPartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendPartyInfo) ProtoMessage() {}

func (x *C2SFriendPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendPartyInfo.ProtoReflect.Descriptor instead.
func (*C2SFriendPartyInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{21}
}

type S2CFriendPartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*PartyInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"` //只下发有空位的好友队伍信息
}

func (x *S2CFriendPartyInfo) Reset() {
	*x = S2CFriendPartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendPartyInfo) ProtoMessage() {}

func (x *S2CFriendPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendPartyInfo.ProtoReflect.Descriptor instead.
func (*S2CFriendPartyInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{22}
}

func (x *S2CFriendPartyInfo) GetInfo() []*PartyInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 申请加入Party
type C2SJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *C2SJoinParty) Reset() {
	*x = C2SJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SJoinParty) ProtoMessage() {}

func (x *C2SJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SJoinParty.ProtoReflect.Descriptor instead.
func (*C2SJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{23}
}

func (x *C2SJoinParty) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

// 加入party返回
type S2CJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	PartyId string `protobuf:"bytes,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *S2CJoinParty) Reset() {
	*x = S2CJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CJoinParty) ProtoMessage() {}

func (x *S2CJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CJoinParty.ProtoReflect.Descriptor instead.
func (*S2CJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{24}
}

func (x *S2CJoinParty) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S2CJoinParty) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

// 通知队长有人申请入队
type NtfApplyJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=simple_info,json=simpleInfo,proto3" json:"simple_info,omitempty"` //申请人信息
}

func (x *NtfApplyJoinParty) Reset() {
	*x = NtfApplyJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfApplyJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfApplyJoinParty) ProtoMessage() {}

func (x *NtfApplyJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfApplyJoinParty.ProtoReflect.Descriptor instead.
func (*NtfApplyJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{25}
}

func (x *NtfApplyJoinParty) GetSimpleInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.SimpleInfo
	}
	return nil
}

// 队长对加入申请回应
type C2SApplyJoinPartyReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplayCode int32 `protobuf:"varint,1,opt,name=replay_code,json=replayCode,proto3" json:"replay_code,omitempty"` //1=同意 2=拒绝 3=一定时间内拒绝再次申请
	PlayerId   int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       //申请玩家ID
}

func (x *C2SApplyJoinPartyReplay) Reset() {
	*x = C2SApplyJoinPartyReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SApplyJoinPartyReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SApplyJoinPartyReplay) ProtoMessage() {}

func (x *C2SApplyJoinPartyReplay) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SApplyJoinPartyReplay.ProtoReflect.Descriptor instead.
func (*C2SApplyJoinPartyReplay) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{26}
}

func (x *C2SApplyJoinPartyReplay) GetReplayCode() int32 {
	if x != nil {
		return x.ReplayCode
	}
	return 0
}

func (x *C2SApplyJoinPartyReplay) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// 回应返回
type S2CApplyJoinPartyReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode  int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`    //同cpb.error code
	PlayerId int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //申请玩家ID
}

func (x *S2CApplyJoinPartyReplay) Reset() {
	*x = S2CApplyJoinPartyReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CApplyJoinPartyReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CApplyJoinPartyReplay) ProtoMessage() {}

func (x *S2CApplyJoinPartyReplay) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CApplyJoinPartyReplay.ProtoReflect.Descriptor instead.
func (*S2CApplyJoinPartyReplay) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{27}
}

func (x *S2CApplyJoinPartyReplay) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S2CApplyJoinPartyReplay) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// 队长回应通知申请人
type NtfApplyJoinPartyReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplayCode int32             `protobuf:"varint,1,opt,name=replay_code,json=replayCode,proto3" json:"replay_code,omitempty"` //1=同意 2=拒绝 3=一定时间内拒绝再次申请
	PartyId    string            `protobuf:"bytes,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`           //队伍ID
	SimpleInfo *PlayerSimpleInfo `protobuf:"bytes,3,opt,name=simple_info,json=simpleInfo,proto3" json:"simple_info,omitempty"`  //队长信息
}

func (x *NtfApplyJoinPartyReplay) Reset() {
	*x = NtfApplyJoinPartyReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfApplyJoinPartyReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfApplyJoinPartyReplay) ProtoMessage() {}

func (x *NtfApplyJoinPartyReplay) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfApplyJoinPartyReplay.ProtoReflect.Descriptor instead.
func (*NtfApplyJoinPartyReplay) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{28}
}

func (x *NtfApplyJoinPartyReplay) GetReplayCode() int32 {
	if x != nil {
		return x.ReplayCode
	}
	return 0
}

func (x *NtfApplyJoinPartyReplay) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *NtfApplyJoinPartyReplay) GetSimpleInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.SimpleInfo
	}
	return nil
}

// 确认加入队伍
type C2SReadyJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"` //队伍ID
}

func (x *C2SReadyJoinParty) Reset() {
	*x = C2SReadyJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SReadyJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SReadyJoinParty) ProtoMessage() {}

func (x *C2SReadyJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SReadyJoinParty.ProtoReflect.Descriptor instead.
func (*C2SReadyJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{29}
}

func (x *C2SReadyJoinParty) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

// 确认加入队伍
type S2CReadyJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CReadyJoinParty) Reset() {
	*x = S2CReadyJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CReadyJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CReadyJoinParty) ProtoMessage() {}

func (x *S2CReadyJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CReadyJoinParty.ProtoReflect.Descriptor instead.
func (*S2CReadyJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{30}
}

// 队伍信息更新通知
type NtfPartyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyInfo *PartyInfo `protobuf:"bytes,1,opt,name=partyInfo,proto3" json:"partyInfo,omitempty"` //队伍信息
}

func (x *NtfPartyUpdate) Reset() {
	*x = NtfPartyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPartyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPartyUpdate) ProtoMessage() {}

func (x *NtfPartyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPartyUpdate.ProtoReflect.Descriptor instead.
func (*NtfPartyUpdate) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{31}
}

func (x *NtfPartyUpdate) GetPartyInfo() *PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

// 邀请玩家加入party
type C2SInviteJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //被邀请的玩家ID
	PlayId   int32 `protobuf:"varint,2,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`       // 玩法id (没有队伍时根据玩法ID创建玩法)
}

func (x *C2SInviteJoinParty) Reset() {
	*x = C2SInviteJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SInviteJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SInviteJoinParty) ProtoMessage() {}

func (x *C2SInviteJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SInviteJoinParty.ProtoReflect.Descriptor instead.
func (*C2SInviteJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{32}
}

func (x *C2SInviteJoinParty) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *C2SInviteJoinParty) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

// 邀请返回
type S2CInviteJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode   int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`    // 1=同意 2=拒绝 3=一定时间内拒绝再次被邀请 其它同cpb.error code
	PlayerId  int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //被邀请的玩家ID
	Countdown int32 `protobuf:"varint,3,opt,name=countdown,proto3" json:"countdown,omitempty"`               //邀请失效倒计时 秒
}

func (x *S2CInviteJoinParty) Reset() {
	*x = S2CInviteJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CInviteJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CInviteJoinParty) ProtoMessage() {}

func (x *S2CInviteJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CInviteJoinParty.ProtoReflect.Descriptor instead.
func (*S2CInviteJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{33}
}

func (x *S2CInviteJoinParty) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S2CInviteJoinParty) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *S2CInviteJoinParty) GetCountdown() int32 {
	if x != nil {
		return x.Countdown
	}
	return 0
}

// 通知被邀请玩家邀请信息
type NtfInviteJoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=simple_info,json=simpleInfo,proto3" json:"simple_info,omitempty"` //邀请人信息
	PartyInfo  *PartyInfo        `protobuf:"bytes,2,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"`    //房间信息
	Countdown  int32             `protobuf:"varint,3,opt,name=countdown,proto3" json:"countdown,omitempty"`                    //邀请失效倒计时 秒
}

func (x *NtfInviteJoinParty) Reset() {
	*x = NtfInviteJoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfInviteJoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfInviteJoinParty) ProtoMessage() {}

func (x *NtfInviteJoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfInviteJoinParty.ProtoReflect.Descriptor instead.
func (*NtfInviteJoinParty) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{34}
}

func (x *NtfInviteJoinParty) GetSimpleInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.SimpleInfo
	}
	return nil
}

func (x *NtfInviteJoinParty) GetPartyInfo() *PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

func (x *NtfInviteJoinParty) GetCountdown() int32 {
	if x != nil {
		return x.Countdown
	}
	return 0
}

// 回应邀请
type C2SInviteJoinPartyReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplayCode int32 `protobuf:"varint,1,opt,name=replay_code,json=replayCode,proto3" json:"replay_code,omitempty"` //1=同意 2=拒绝 3=一定时间内拒绝再次被邀请
	PlayerId   int64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       // 邀请人id
}

func (x *C2SInviteJoinPartyReplay) Reset() {
	*x = C2SInviteJoinPartyReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SInviteJoinPartyReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SInviteJoinPartyReplay) ProtoMessage() {}

func (x *C2SInviteJoinPartyReplay) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SInviteJoinPartyReplay.ProtoReflect.Descriptor instead.
func (*C2SInviteJoinPartyReplay) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{35}
}

func (x *C2SInviteJoinPartyReplay) GetReplayCode() int32 {
	if x != nil {
		return x.ReplayCode
	}
	return 0
}

func (x *C2SInviteJoinPartyReplay) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type S2CInviteJoinPartyReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CInviteJoinPartyReplay) Reset() {
	*x = S2CInviteJoinPartyReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CInviteJoinPartyReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CInviteJoinPartyReplay) ProtoMessage() {}

func (x *S2CInviteJoinPartyReplay) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CInviteJoinPartyReplay.ProtoReflect.Descriptor instead.
func (*S2CInviteJoinPartyReplay) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{36}
}

// 被邀请玩家回应信息通知
type NtfInviteJoinPartyReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=simple_info,json=simpleInfo,proto3" json:"simple_info,omitempty"`  //被邀请人信息
	ReplayCode int32             `protobuf:"varint,2,opt,name=replay_code,json=replayCode,proto3" json:"replay_code,omitempty"` //1=同意 2=拒绝 3=一定时间内拒绝再次被邀请
}

func (x *NtfInviteJoinPartyReplay) Reset() {
	*x = NtfInviteJoinPartyReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfInviteJoinPartyReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfInviteJoinPartyReplay) ProtoMessage() {}

func (x *NtfInviteJoinPartyReplay) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfInviteJoinPartyReplay.ProtoReflect.Descriptor instead.
func (*NtfInviteJoinPartyReplay) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{37}
}

func (x *NtfInviteJoinPartyReplay) GetSimpleInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.SimpleInfo
	}
	return nil
}

func (x *NtfInviteJoinPartyReplay) GetReplayCode() int32 {
	if x != nil {
		return x.ReplayCode
	}
	return 0
}

// 取消邀请
type C2SInviteCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //被邀请人ID
}

func (x *C2SInviteCancel) Reset() {
	*x = C2SInviteCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SInviteCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SInviteCancel) ProtoMessage() {}

func (x *C2SInviteCancel) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SInviteCancel.ProtoReflect.Descriptor instead.
func (*C2SInviteCancel) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{38}
}

func (x *C2SInviteCancel) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// 取消邀请回应
type S2CInviteCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CInviteCancel) Reset() {
	*x = S2CInviteCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CInviteCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CInviteCancel) ProtoMessage() {}

func (x *S2CInviteCancel) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CInviteCancel.ProtoReflect.Descriptor instead.
func (*S2CInviteCancel) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{39}
}

// 通知被邀请玩家取消邀请
type NtfInviteCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=simple_info,json=simpleInfo,proto3" json:"simple_info,omitempty"` //被邀请人信息
	PartyInfo  *PartyInfo        `protobuf:"bytes,2,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"`    //房间信息
}

func (x *NtfInviteCancel) Reset() {
	*x = NtfInviteCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfInviteCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfInviteCancel) ProtoMessage() {}

func (x *NtfInviteCancel) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfInviteCancel.ProtoReflect.Descriptor instead.
func (*NtfInviteCancel) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{40}
}

func (x *NtfInviteCancel) GetSimpleInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.SimpleInfo
	}
	return nil
}

func (x *NtfInviteCancel) GetPartyInfo() *PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

type PartyEnlistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId    string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`           // 房间id
	PartyOwner int64  `protobuf:"varint,2,opt,name=party_owner,json=partyOwner,proto3" json:"party_owner,omitempty"` // 房主ID
	OwnerName  string `protobuf:"bytes,3,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`     //房主昵称
	OwnerIcon  string `protobuf:"bytes,4,opt,name=owner_icon,json=ownerIcon,proto3" json:"owner_icon,omitempty"`     //房主头像
	HeroCup    int32  `protobuf:"varint,5,opt,name=hero_cup,json=heroCup,proto3" json:"hero_cup,omitempty"`          //房主奖杯数
	PlayId     int32  `protobuf:"varint,6,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`             // 房间玩法ID
	MaxMember  int32  `protobuf:"varint,7,opt,name=max_member,json=maxMember,proto3" json:"max_member,omitempty"`    //最大成员数
	CurMember  int32  `protobuf:"varint,8,opt,name=cur_member,json=curMember,proto3" json:"cur_member,omitempty"`    //当前成员数
}

func (x *PartyEnlistInfo) Reset() {
	*x = PartyEnlistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyEnlistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyEnlistInfo) ProtoMessage() {}

func (x *PartyEnlistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyEnlistInfo.ProtoReflect.Descriptor instead.
func (*PartyEnlistInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{41}
}

func (x *PartyEnlistInfo) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *PartyEnlistInfo) GetPartyOwner() int64 {
	if x != nil {
		return x.PartyOwner
	}
	return 0
}

func (x *PartyEnlistInfo) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *PartyEnlistInfo) GetOwnerIcon() string {
	if x != nil {
		return x.OwnerIcon
	}
	return ""
}

func (x *PartyEnlistInfo) GetHeroCup() int32 {
	if x != nil {
		return x.HeroCup
	}
	return 0
}

func (x *PartyEnlistInfo) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *PartyEnlistInfo) GetMaxMember() int32 {
	if x != nil {
		return x.MaxMember
	}
	return 0
}

func (x *PartyEnlistInfo) GetCurMember() int32 {
	if x != nil {
		return x.CurMember
	}
	return 0
}

// 获取招募信息
type C2SPartyEnlistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SPartyEnlistInfo) Reset() {
	*x = C2SPartyEnlistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPartyEnlistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPartyEnlistInfo) ProtoMessage() {}

func (x *C2SPartyEnlistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPartyEnlistInfo.ProtoReflect.Descriptor instead.
func (*C2SPartyEnlistInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{42}
}

type S2CPartyEnlistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnlistInfo []*PartyEnlistInfo `protobuf:"bytes,1,rep,name=enlist_info,json=enlistInfo,proto3" json:"enlist_info,omitempty"` //招募消息
}

func (x *S2CPartyEnlistInfo) Reset() {
	*x = S2CPartyEnlistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPartyEnlistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPartyEnlistInfo) ProtoMessage() {}

func (x *S2CPartyEnlistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPartyEnlistInfo.ProtoReflect.Descriptor instead.
func (*S2CPartyEnlistInfo) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{43}
}

func (x *S2CPartyEnlistInfo) GetEnlistInfo() []*PartyEnlistInfo {
	if x != nil {
		return x.EnlistInfo
	}
	return nil
}

// 发布招募信息
type C2SPartyEnlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayId int32 `protobuf:"varint,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
}

func (x *C2SPartyEnlist) Reset() {
	*x = C2SPartyEnlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPartyEnlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPartyEnlist) ProtoMessage() {}

func (x *C2SPartyEnlist) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPartyEnlist.ProtoReflect.Descriptor instead.
func (*C2SPartyEnlist) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{44}
}

func (x *C2SPartyEnlist) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

type S2CPartyEnlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"` //操作code 同error_code
}

func (x *S2CPartyEnlist) Reset() {
	*x = S2CPartyEnlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPartyEnlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPartyEnlist) ProtoMessage() {}

func (x *S2CPartyEnlist) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPartyEnlist.ProtoReflect.Descriptor instead.
func (*S2CPartyEnlist) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{45}
}

func (x *S2CPartyEnlist) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

type C2SQuickJoinEnlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SQuickJoinEnlist) Reset() {
	*x = C2SQuickJoinEnlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SQuickJoinEnlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SQuickJoinEnlist) ProtoMessage() {}

func (x *C2SQuickJoinEnlist) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SQuickJoinEnlist.ProtoReflect.Descriptor instead.
func (*C2SQuickJoinEnlist) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{46}
}

type S2CQuickJoinEnlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	PartyId string `protobuf:"bytes,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *S2CQuickJoinEnlist) Reset() {
	*x = S2CQuickJoinEnlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_party_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CQuickJoinEnlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CQuickJoinEnlist) ProtoMessage() {}

func (x *S2CQuickJoinEnlist) ProtoReflect() protoreflect.Message {
	mi := &file_bff_party_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CQuickJoinEnlist.ProtoReflect.Descriptor instead.
func (*S2CQuickJoinEnlist) Descriptor() ([]byte, []int) {
	return file_bff_party_proto_rawDescGZIP(), []int{47}
}

func (x *S2CQuickJoinEnlist) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S2CQuickJoinEnlist) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

var File_bff_party_proto protoreflect.FileDescriptor

var file_bff_party_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x66, 0x66, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x62, 0x66, 0x66, 0x1a, 0x11, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xfa, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x51, 0x0a, 0x11, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a,
	0x12, 0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a,
	0x6f, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0x57, 0x0a, 0x13, 0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x14, 0x4e, 0x74, 0x66,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x1a, 0x51, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x38, 0x0a, 0x05, 0x68, 0x65,
	0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x65,
	0x72, 0x6f, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x68,
	0x65, 0x72, 0x6f, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d,
	0x0a, 0x0c, 0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x55, 0x0a,
	0x0f, 0x43, 0x32, 0x53, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x40, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x4b, 0x69, 0x63, 0x6b, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x32,
	0x43, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x22, 0x2c, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x22,
	0x13, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4d, 0x61, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x12, 0x53, 0x32,
	0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x4a, 0x6f, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x44, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x4e, 0x74, 0x66, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x57, 0x0a, 0x17, 0x43, 0x32, 0x53, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f,
	0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x53,
	0x32, 0x43, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8d,
	0x01, 0x0a, 0x17, 0x4e, 0x74, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e,
	0x0a, 0x11, 0x43, 0x32, 0x53, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x13,
	0x0a, 0x11, 0x53, 0x32, 0x43, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x22, 0x3e, 0x0a, 0x0e, 0x4e, 0x74, 0x66, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x22,
	0x6a, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x12,
	0x4e, 0x74, 0x66, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x32, 0x53, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x32, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x73, 0x0a,
	0x18, 0x4e, 0x74, 0x66, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x2e, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x78, 0x0a, 0x0f, 0x4e, 0x74, 0x66, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xfd, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x63, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x68, 0x65, 0x72, 0x6f, 0x43, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x14, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x45, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0b, 0x65,
	0x6e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x29, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x6e,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x22, 0x2b, 0x0a,
	0x0e, 0x53, 0x32, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x32,
	0x53, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x4a, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4a, 0x6f, 0x69, 0x6e,
	0x45, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x2a, 0x53, 0x0a, 0x11,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10,
	0x02, 0x2a, 0x6f, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x47, 0x52,
	0x45, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x52, 0x45,
	0x46, 0x55, 0x53, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f,
	0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x4f, 0x4d, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x42, 0x55, 0x53, 0x59,
	0x10, 0x04, 0x42, 0x0c, 0x5a, 0x0a, 0x62, 0x66, 0x66, 0x2f, 0x3b, 0x62, 0x66, 0x66, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_party_proto_rawDescOnce sync.Once
	file_bff_party_proto_rawDescData = file_bff_party_proto_rawDesc
)

func file_bff_party_proto_rawDescGZIP() []byte {
	file_bff_party_proto_rawDescOnce.Do(func() {
		file_bff_party_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_party_proto_rawDescData)
	})
	return file_bff_party_proto_rawDescData
}

var file_bff_party_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bff_party_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_bff_party_proto_goTypes = []any{
	(PartyMemberStatus)(0),           // 0: bff.PartyMemberStatus
	(PartyReplyCode)(0),              // 1: bff.PartyReplyCode
	(*PartyMember)(nil),              // 2: bff.PartyMember
	(*PartyInfo)(nil),                // 3: bff.PartyInfo
	(*NtfPartyMemberJoin)(nil),       // 4: bff.NtfPartyMemberJoin
	(*NtfPartyMemberLeave)(nil),      // 5: bff.NtfPartyMemberLeave
	(*NtfPartyMemberStatus)(nil),     // 6: bff.NtfPartyMemberStatus
	(*NtfPartyMemberHero)(nil),       // 7: bff.NtfPartyMemberHero
	(*NtfPartyInfo)(nil),             // 8: bff.NtfPartyInfo
	(*C2SGetPartyInfo)(nil),          // 9: bff.C2SGetPartyInfo
	(*S2CGetPartyInfo)(nil),          // 10: bff.S2CGetPartyInfo
	(*C2SCreateParty)(nil),           // 11: bff.C2SCreateParty
	(*S2CCreateParty)(nil),           // 12: bff.S2CCreateParty
	(*C2SLeaveParty)(nil),            // 13: bff.C2SLeaveParty
	(*S2CLeaveParty)(nil),            // 14: bff.S2CLeaveParty
	(*C2SKickParty)(nil),             // 15: bff.C2SKickParty
	(*S2CKickParty)(nil),             // 16: bff.S2CKickParty
	(*C2SReadyParty)(nil),            // 17: bff.C2SReadyParty
	(*S2CReadyParty)(nil),            // 18: bff.S2CReadyParty
	(*C2SCancelReadyParty)(nil),      // 19: bff.C2SCancelReadyParty
	(*S2CCancelReadyParty)(nil),      // 20: bff.S2CCancelReadyParty
	(*C2SChoosePartyMap)(nil),        // 21: bff.C2SChoosePartyMap
	(*S2CChoosePartyMap)(nil),        // 22: bff.S2CChoosePartyMap
	(*C2SFriendPartyInfo)(nil),       // 23: bff.C2SFriendPartyInfo
	(*S2CFriendPartyInfo)(nil),       // 24: bff.S2CFriendPartyInfo
	(*C2SJoinParty)(nil),             // 25: bff.C2SJoinParty
	(*S2CJoinParty)(nil),             // 26: bff.S2CJoinParty
	(*NtfApplyJoinParty)(nil),        // 27: bff.NtfApplyJoinParty
	(*C2SApplyJoinPartyReplay)(nil),  // 28: bff.C2SApplyJoinPartyReplay
	(*S2CApplyJoinPartyReplay)(nil),  // 29: bff.S2CApplyJoinPartyReplay
	(*NtfApplyJoinPartyReplay)(nil),  // 30: bff.NtfApplyJoinPartyReplay
	(*C2SReadyJoinParty)(nil),        // 31: bff.C2SReadyJoinParty
	(*S2CReadyJoinParty)(nil),        // 32: bff.S2CReadyJoinParty
	(*NtfPartyUpdate)(nil),           // 33: bff.NtfPartyUpdate
	(*C2SInviteJoinParty)(nil),       // 34: bff.C2SInviteJoinParty
	(*S2CInviteJoinParty)(nil),       // 35: bff.S2CInviteJoinParty
	(*NtfInviteJoinParty)(nil),       // 36: bff.NtfInviteJoinParty
	(*C2SInviteJoinPartyReplay)(nil), // 37: bff.C2SInviteJoinPartyReplay
	(*S2CInviteJoinPartyReplay)(nil), // 38: bff.S2CInviteJoinPartyReplay
	(*NtfInviteJoinPartyReplay)(nil), // 39: bff.NtfInviteJoinPartyReplay
	(*C2SInviteCancel)(nil),          // 40: bff.C2SInviteCancel
	(*S2CInviteCancel)(nil),          // 41: bff.S2CInviteCancel
	(*NtfInviteCancel)(nil),          // 42: bff.NtfInviteCancel
	(*PartyEnlistInfo)(nil),          // 43: bff.PartyEnlistInfo
	(*C2SPartyEnlistInfo)(nil),       // 44: bff.C2SPartyEnlistInfo
	(*S2CPartyEnlistInfo)(nil),       // 45: bff.S2CPartyEnlistInfo
	(*C2SPartyEnlist)(nil),           // 46: bff.C2SPartyEnlist
	(*S2CPartyEnlist)(nil),           // 47: bff.S2CPartyEnlist
	(*C2SQuickJoinEnlist)(nil),       // 48: bff.C2SQuickJoinEnlist
	(*S2CQuickJoinEnlist)(nil),       // 49: bff.S2CQuickJoinEnlist
	nil,                              // 50: bff.PartyInfo.PartyMembersEntry
	nil,                              // 51: bff.NtfPartyMemberStatus.StatusEntry
	nil,                              // 52: bff.NtfPartyMemberHero.HerosEntry
	(*PlayerSimpleInfo)(nil),         // 53: bff.PlayerSimpleInfo
}
var file_bff_party_proto_depIdxs = []int32{
	53, // 0: bff.PartyMember.simple_info:type_name -> bff.PlayerSimpleInfo
	0,  // 1: bff.PartyMember.status:type_name -> bff.PartyMemberStatus
	50, // 2: bff.PartyInfo.party_members:type_name -> bff.PartyInfo.PartyMembersEntry
	2,  // 3: bff.NtfPartyMemberJoin.members:type_name -> bff.PartyMember
	51, // 4: bff.NtfPartyMemberStatus.status:type_name -> bff.NtfPartyMemberStatus.StatusEntry
	52, // 5: bff.NtfPartyMemberHero.heros:type_name -> bff.NtfPartyMemberHero.HerosEntry
	3,  // 6: bff.S2CGetPartyInfo.party_info:type_name -> bff.PartyInfo
	3,  // 7: bff.S2CCreateParty.party_info:type_name -> bff.PartyInfo
	3,  // 8: bff.S2CFriendPartyInfo.info:type_name -> bff.PartyInfo
	53, // 9: bff.NtfApplyJoinParty.simple_info:type_name -> bff.PlayerSimpleInfo
	53, // 10: bff.NtfApplyJoinPartyReplay.simple_info:type_name -> bff.PlayerSimpleInfo
	3,  // 11: bff.NtfPartyUpdate.partyInfo:type_name -> bff.PartyInfo
	53, // 12: bff.NtfInviteJoinParty.simple_info:type_name -> bff.PlayerSimpleInfo
	3,  // 13: bff.NtfInviteJoinParty.party_info:type_name -> bff.PartyInfo
	53, // 14: bff.NtfInviteJoinPartyReplay.simple_info:type_name -> bff.PlayerSimpleInfo
	53, // 15: bff.NtfInviteCancel.simple_info:type_name -> bff.PlayerSimpleInfo
	3,  // 16: bff.NtfInviteCancel.party_info:type_name -> bff.PartyInfo
	43, // 17: bff.S2CPartyEnlistInfo.enlist_info:type_name -> bff.PartyEnlistInfo
	2,  // 18: bff.PartyInfo.PartyMembersEntry.value:type_name -> bff.PartyMember
	0,  // 19: bff.NtfPartyMemberStatus.StatusEntry.value:type_name -> bff.PartyMemberStatus
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_bff_party_proto_init() }
func file_bff_party_proto_init() {
	if File_bff_party_proto != nil {
		return
	}
	file_bff_bcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bff_party_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PartyMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPartyMemberJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPartyMemberLeave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPartyMemberStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPartyMemberHero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*C2SGetPartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*S2CGetPartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*C2SCreateParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*S2CCreateParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*C2SLeaveParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*S2CLeaveParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*C2SKickParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*S2CKickParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*C2SReadyParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*S2CReadyParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*C2SCancelReadyParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*S2CCancelReadyParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*C2SChoosePartyMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*S2CChoosePartyMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendPartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendPartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*C2SJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*S2CJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*NtfApplyJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*C2SApplyJoinPartyReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*S2CApplyJoinPartyReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*NtfApplyJoinPartyReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*C2SReadyJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*S2CReadyJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPartyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*C2SInviteJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*S2CInviteJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*NtfInviteJoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*C2SInviteJoinPartyReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*S2CInviteJoinPartyReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*NtfInviteJoinPartyReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*C2SInviteCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*S2CInviteCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*NtfInviteCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*PartyEnlistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPartyEnlistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPartyEnlistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*C2SPartyEnlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*S2CPartyEnlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*C2SQuickJoinEnlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_party_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*S2CQuickJoinEnlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bff_party_proto_msgTypes[7].OneofWrappers = []any{
		(*C2SGetPartyInfo_PartyId)(nil),
		(*C2SGetPartyInfo_MemberId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_party_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bff_party_proto_goTypes,
		DependencyIndexes: file_bff_party_proto_depIdxs,
		EnumInfos:         file_bff_party_proto_enumTypes,
		MessageInfos:      file_bff_party_proto_msgTypes,
	}.Build()
	File_bff_party_proto = out.File
	file_bff_party_proto_rawDesc = nil
	file_bff_party_proto_goTypes = nil
	file_bff_party_proto_depIdxs = nil
}
