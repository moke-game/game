// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bff/buddy.proto

package bffpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 玩家信息
type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`       //基本信息
	Remarks string            `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"` //备注
	Tim     int64             `protobuf:"varint,3,opt,name=tim,proto3" json:"tim,omitempty"`        //是好友时表示成为好友时的时间戳 是黑名单时表示拉入黑名单时时间戳 是申请名单时表示申请时间戳 秒
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{0}
}

func (x *FriendInfo) GetInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *FriendInfo) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *FriendInfo) GetTim() int64 {
	if x != nil {
		return x.Tim
	}
	return 0
}

// 获取好友列表
type C2SFriendGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListType int32 `protobuf:"varint,1,opt,name=list_type,json=listType,proto3" json:"list_type,omitempty"` //1 好友 2申请 3黑名单 4近期同队
}

func (x *C2SFriendGet) Reset() {
	*x = C2SFriendGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendGet) ProtoMessage() {}

func (x *C2SFriendGet) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendGet.ProtoReflect.Descriptor instead.
func (*C2SFriendGet) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{1}
}

func (x *C2SFriendGet) GetListType() int32 {
	if x != nil {
		return x.ListType
	}
	return 0
}

type S2CFriendGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListType     int32         `protobuf:"varint,1,opt,name=list_type,json=listType,proto3" json:"list_type,omitempty"` //1 好友 2申请 3黑名单 4近期同队
	Infos        []*FriendInfo `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`                        //列表
	MyFriendCode string        `protobuf:"bytes,3,opt,name=myFriendCode,proto3" json:"myFriendCode,omitempty"`          //我的好友码
}

func (x *S2CFriendGet) Reset() {
	*x = S2CFriendGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendGet) ProtoMessage() {}

func (x *S2CFriendGet) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendGet.ProtoReflect.Descriptor instead.
func (*S2CFriendGet) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{2}
}

func (x *S2CFriendGet) GetListType() int32 {
	if x != nil {
		return x.ListType
	}
	return 0
}

func (x *S2CFriendGet) GetInfos() []*FriendInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *S2CFriendGet) GetMyFriendCode() string {
	if x != nil {
		return x.MyFriendCode
	}
	return ""
}

// 根据好友邀请码获取玩家信息
type C2SFriendGetPlayerInfoByCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendCode string `protobuf:"bytes,1,opt,name=friend_code,json=friendCode,proto3" json:"friend_code,omitempty"`
}

func (x *C2SFriendGetPlayerInfoByCode) Reset() {
	*x = C2SFriendGetPlayerInfoByCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendGetPlayerInfoByCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendGetPlayerInfoByCode) ProtoMessage() {}

func (x *C2SFriendGetPlayerInfoByCode) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendGetPlayerInfoByCode.ProtoReflect.Descriptor instead.
func (*C2SFriendGetPlayerInfoByCode) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{3}
}

func (x *C2SFriendGetPlayerInfoByCode) GetFriendCode() string {
	if x != nil {
		return x.FriendCode
	}
	return ""
}

type S2CFriendGetPlayerInfoByCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=infos,proto3" json:"infos,omitempty"`
}

func (x *S2CFriendGetPlayerInfoByCode) Reset() {
	*x = S2CFriendGetPlayerInfoByCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendGetPlayerInfoByCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendGetPlayerInfoByCode) ProtoMessage() {}

func (x *S2CFriendGetPlayerInfoByCode) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendGetPlayerInfoByCode.ProtoReflect.Descriptor instead.
func (*S2CFriendGetPlayerInfoByCode) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{4}
}

func (x *S2CFriendGetPlayerInfoByCode) GetInfos() *PlayerSimpleInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// 申请添加好友
type C2SFriendAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddUid int64 `protobuf:"varint,1,opt,name=addUid,proto3" json:"addUid,omitempty"` //playerUid
}

func (x *C2SFriendAdd) Reset() {
	*x = C2SFriendAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendAdd) ProtoMessage() {}

func (x *C2SFriendAdd) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendAdd.ProtoReflect.Descriptor instead.
func (*C2SFriendAdd) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{5}
}

func (x *C2SFriendAdd) GetAddUid() int64 {
	if x != nil {
		return x.AddUid
	}
	return 0
}

type S2CFriendAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CFriendAdd) Reset() {
	*x = S2CFriendAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendAdd) ProtoMessage() {}

func (x *S2CFriendAdd) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendAdd.ProtoReflect.Descriptor instead.
func (*S2CFriendAdd) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{6}
}

type S2CFriendAddNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=requestInfo,proto3" json:"requestInfo,omitempty"` //好友申请方信息
	AddTime     int64             `protobuf:"varint,2,opt,name=addTime,proto3" json:"addTime,omitempty"`        //申请时间
}

func (x *S2CFriendAddNotify) Reset() {
	*x = S2CFriendAddNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendAddNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendAddNotify) ProtoMessage() {}

func (x *S2CFriendAddNotify) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendAddNotify.ProtoReflect.Descriptor instead.
func (*S2CFriendAddNotify) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{7}
}

func (x *S2CFriendAddNotify) GetRequestInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.RequestInfo
	}
	return nil
}

func (x *S2CFriendAddNotify) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

// 同意添加好友
type C2SFriendAgree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *C2SFriendAgree) Reset() {
	*x = C2SFriendAgree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendAgree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendAgree) ProtoMessage() {}

func (x *C2SFriendAgree) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendAgree.ProtoReflect.Descriptor instead.
func (*C2SFriendAgree) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{8}
}

func (x *C2SFriendAgree) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type S2CFriendAgree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendInfo *PlayerSimpleInfo `protobuf:"bytes,1,opt,name=friendInfo,proto3" json:"friendInfo,omitempty"` //新增好友信息（客户端需要把uid放入好友列表, 并且移除申请列表中的对应player）
}

func (x *S2CFriendAgree) Reset() {
	*x = S2CFriendAgree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendAgree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendAgree) ProtoMessage() {}

func (x *S2CFriendAgree) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendAgree.ProtoReflect.Descriptor instead.
func (*S2CFriendAgree) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{9}
}

func (x *S2CFriendAgree) GetFriendInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

// 拒绝添加好友
type C2SFriendRefuse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids        []int64 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
	IsBlacklist bool    `protobuf:"varint,2,opt,name=isBlacklist,proto3" json:"isBlacklist,omitempty"` // true 加入黑名单
}

func (x *C2SFriendRefuse) Reset() {
	*x = C2SFriendRefuse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendRefuse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendRefuse) ProtoMessage() {}

func (x *C2SFriendRefuse) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendRefuse.ProtoReflect.Descriptor instead.
func (*C2SFriendRefuse) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{10}
}

func (x *C2SFriendRefuse) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

func (x *C2SFriendRefuse) GetIsBlacklist() bool {
	if x != nil {
		return x.IsBlacklist
	}
	return false
}

type S2CFriendRefuse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids        []int64 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`        //删除的id
	IsBlacklist bool    `protobuf:"varint,2,opt,name=isBlacklist,proto3" json:"isBlacklist,omitempty"` // true 加入黑名单
}

func (x *S2CFriendRefuse) Reset() {
	*x = S2CFriendRefuse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendRefuse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendRefuse) ProtoMessage() {}

func (x *S2CFriendRefuse) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendRefuse.ProtoReflect.Descriptor instead.
func (*S2CFriendRefuse) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{11}
}

func (x *S2CFriendRefuse) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

func (x *S2CFriendRefuse) GetIsBlacklist() bool {
	if x != nil {
		return x.IsBlacklist
	}
	return false
}

// 删除好友（双向删除）
type C2SFriendDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelUid      int64 `protobuf:"varint,1,opt,name=delUid,proto3" json:"delUid,omitempty"`           //playerUid
	IsBlacklist bool  `protobuf:"varint,2,opt,name=isBlacklist,proto3" json:"isBlacklist,omitempty"` // 1加入黑名单
}

func (x *C2SFriendDelete) Reset() {
	*x = C2SFriendDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendDelete) ProtoMessage() {}

func (x *C2SFriendDelete) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendDelete.ProtoReflect.Descriptor instead.
func (*C2SFriendDelete) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{12}
}

func (x *C2SFriendDelete) GetDelUid() int64 {
	if x != nil {
		return x.DelUid
	}
	return 0
}

func (x *C2SFriendDelete) GetIsBlacklist() bool {
	if x != nil {
		return x.IsBlacklist
	}
	return false
}

type S2CFriendDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelUid      int64 `protobuf:"varint,1,opt,name=delUid,proto3" json:"delUid,omitempty"`           //playerUid
	IsBlacklist bool  `protobuf:"varint,2,opt,name=isBlacklist,proto3" json:"isBlacklist,omitempty"` // 1加入黑名单
}

func (x *S2CFriendDelete) Reset() {
	*x = S2CFriendDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendDelete) ProtoMessage() {}

func (x *S2CFriendDelete) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendDelete.ProtoReflect.Descriptor instead.
func (*S2CFriendDelete) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{13}
}

func (x *S2CFriendDelete) GetDelUid() int64 {
	if x != nil {
		return x.DelUid
	}
	return 0
}

func (x *S2CFriendDelete) GetIsBlacklist() bool {
	if x != nil {
		return x.IsBlacklist
	}
	return false
}

// 备注
type C2SFriendNickName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"` //别名
}

func (x *C2SFriendNickName) Reset() {
	*x = C2SFriendNickName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendNickName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendNickName) ProtoMessage() {}

func (x *C2SFriendNickName) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendNickName.ProtoReflect.Descriptor instead.
func (*C2SFriendNickName) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{14}
}

func (x *C2SFriendNickName) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *C2SFriendNickName) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type S2CFriendNickName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"` //别名
}

func (x *S2CFriendNickName) Reset() {
	*x = S2CFriendNickName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendNickName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendNickName) ProtoMessage() {}

func (x *S2CFriendNickName) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendNickName.ProtoReflect.Descriptor instead.
func (*S2CFriendNickName) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{15}
}

func (x *S2CFriendNickName) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *S2CFriendNickName) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

// 移除黑名单
type C2SFriendDeleteBlack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` //要移除黑名单中的uid
}

func (x *C2SFriendDeleteBlack) Reset() {
	*x = C2SFriendDeleteBlack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFriendDeleteBlack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFriendDeleteBlack) ProtoMessage() {}

func (x *C2SFriendDeleteBlack) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFriendDeleteBlack.ProtoReflect.Descriptor instead.
func (*C2SFriendDeleteBlack) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{16}
}

func (x *C2SFriendDeleteBlack) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type S2CFriendDeleteBlack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *S2CFriendDeleteBlack) Reset() {
	*x = S2CFriendDeleteBlack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_buddy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFriendDeleteBlack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFriendDeleteBlack) ProtoMessage() {}

func (x *S2CFriendDeleteBlack) ProtoReflect() protoreflect.Message {
	mi := &file_bff_buddy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFriendDeleteBlack.ProtoReflect.Descriptor instead.
func (*S2CFriendDeleteBlack) Descriptor() ([]byte, []int) {
	return file_bff_buddy_proto_rawDescGZIP(), []int{17}
}

func (x *S2CFriendDeleteBlack) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_bff_buddy_proto protoreflect.FileDescriptor

var file_bff_buddy_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x75, 0x64, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x62, 0x66, 0x66, 0x1a, 0x11, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x0a, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x69, 0x6d, 0x22, 0x2b,
	0x0a, 0x0c, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x0c, 0x53,
	0x32, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x3f, 0x0a, 0x1c, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x1c, 0x53, 0x32, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x26, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x64, 0x64, 0x55, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x32, 0x43,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x22, 0x67, 0x0a, 0x12, 0x53, 0x32, 0x43,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x37, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x22, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x47, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x4b, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4b,
	0x0a, 0x0f, 0x53, 0x32, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x11, 0x43,
	0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41,
	0x0a, 0x11, 0x53, 0x32, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x28, 0x0a, 0x14, 0x43, 0x32, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x53,
	0x32, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x42, 0x0c, 0x5a, 0x0a, 0x62, 0x66, 0x66, 0x2f, 0x3b, 0x62, 0x66,
	0x66, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_buddy_proto_rawDescOnce sync.Once
	file_bff_buddy_proto_rawDescData = file_bff_buddy_proto_rawDesc
)

func file_bff_buddy_proto_rawDescGZIP() []byte {
	file_bff_buddy_proto_rawDescOnce.Do(func() {
		file_bff_buddy_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_buddy_proto_rawDescData)
	})
	return file_bff_buddy_proto_rawDescData
}

var file_bff_buddy_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bff_buddy_proto_goTypes = []any{
	(*FriendInfo)(nil),                   // 0: bff.FriendInfo
	(*C2SFriendGet)(nil),                 // 1: bff.C2SFriendGet
	(*S2CFriendGet)(nil),                 // 2: bff.S2CFriendGet
	(*C2SFriendGetPlayerInfoByCode)(nil), // 3: bff.C2SFriendGetPlayerInfoByCode
	(*S2CFriendGetPlayerInfoByCode)(nil), // 4: bff.S2CFriendGetPlayerInfoByCode
	(*C2SFriendAdd)(nil),                 // 5: bff.C2SFriendAdd
	(*S2CFriendAdd)(nil),                 // 6: bff.S2CFriendAdd
	(*S2CFriendAddNotify)(nil),           // 7: bff.S2CFriendAddNotify
	(*C2SFriendAgree)(nil),               // 8: bff.C2SFriendAgree
	(*S2CFriendAgree)(nil),               // 9: bff.S2CFriendAgree
	(*C2SFriendRefuse)(nil),              // 10: bff.C2SFriendRefuse
	(*S2CFriendRefuse)(nil),              // 11: bff.S2CFriendRefuse
	(*C2SFriendDelete)(nil),              // 12: bff.C2SFriendDelete
	(*S2CFriendDelete)(nil),              // 13: bff.S2CFriendDelete
	(*C2SFriendNickName)(nil),            // 14: bff.C2SFriendNickName
	(*S2CFriendNickName)(nil),            // 15: bff.S2CFriendNickName
	(*C2SFriendDeleteBlack)(nil),         // 16: bff.C2SFriendDeleteBlack
	(*S2CFriendDeleteBlack)(nil),         // 17: bff.S2CFriendDeleteBlack
	(*PlayerSimpleInfo)(nil),             // 18: bff.PlayerSimpleInfo
}
var file_bff_buddy_proto_depIdxs = []int32{
	18, // 0: bff.FriendInfo.info:type_name -> bff.PlayerSimpleInfo
	0,  // 1: bff.S2CFriendGet.infos:type_name -> bff.FriendInfo
	18, // 2: bff.S2CFriendGetPlayerInfoByCode.infos:type_name -> bff.PlayerSimpleInfo
	18, // 3: bff.S2CFriendAddNotify.requestInfo:type_name -> bff.PlayerSimpleInfo
	18, // 4: bff.S2CFriendAgree.friendInfo:type_name -> bff.PlayerSimpleInfo
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_bff_buddy_proto_init() }
func file_bff_buddy_proto_init() {
	if File_bff_buddy_proto != nil {
		return
	}
	file_bff_bcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bff_buddy_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendGetPlayerInfoByCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendGetPlayerInfoByCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendAddNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendAgree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendAgree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendRefuse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendRefuse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendNickName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendNickName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*C2SFriendDeleteBlack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_buddy_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*S2CFriendDeleteBlack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_buddy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bff_buddy_proto_goTypes,
		DependencyIndexes: file_bff_buddy_proto_depIdxs,
		MessageInfos:      file_bff_buddy_proto_msgTypes,
	}.Build()
	File_bff_buddy_proto = out.File
	file_bff_buddy_proto_rawDesc = nil
	file_bff_buddy_proto_goTypes = nil
	file_bff_buddy_proto_depIdxs = nil
}
