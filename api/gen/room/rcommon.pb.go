// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: room/rcommon.proto

package roompb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoleState int32

const (
	RoleState_State_None         RoleState = 0
	RoleState_State_Stun         RoleState = 1    // stun：昏迷：无法主动移动或使用主动技能，但可以被动移动和触发被动技能；
	RoleState_State_Hold         RoleState = 2    // hold：举起：无法使用投掷一些外的技能
	RoleState_State_Behold       RoleState = 4    // behold：被举起：无法施放摆脱以外的技能，被举在头顶，隐藏血条，无法被选作目标，无敌
	RoleState_State_Charge       RoleState = 8    // charge：冲锋：不可停止移动，即使摇杆没有方向也会以允许的最快速度向默认方向前进。
	RoleState_State_Anklet       RoleState = 16   // anklet：脚镣：不可主动移动，但可以被动移动。
	RoleState_State_Shackled     RoleState = 32   // shackled：束缚：不可主动或被动移动。
	RoleState_State_Silence      RoleState = 64   // silence：沉默：不可以使用主动技能，但可以触发被动技能
	RoleState_State_Frozen       RoleState = 128  // frozen：冻结：无法主动移动或使用主动技能和被动技能，但可以被动移动，并且摩擦力变为0.
	RoleState_State_Invincible   RoleState = 256  // invincible：无敌：不会受到任何伤害。
	RoleState_State_Untargetable RoleState = 512  // untargetable：不可被选做目标
	RoleState_State_Fly          RoleState = 1024 // fly：击飞
)

// Enum value maps for RoleState.
var (
	RoleState_name = map[int32]string{
		0:    "State_None",
		1:    "State_Stun",
		2:    "State_Hold",
		4:    "State_Behold",
		8:    "State_Charge",
		16:   "State_Anklet",
		32:   "State_Shackled",
		64:   "State_Silence",
		128:  "State_Frozen",
		256:  "State_Invincible",
		512:  "State_Untargetable",
		1024: "State_Fly",
	}
	RoleState_value = map[string]int32{
		"State_None":         0,
		"State_Stun":         1,
		"State_Hold":         2,
		"State_Behold":       4,
		"State_Charge":       8,
		"State_Anklet":       16,
		"State_Shackled":     32,
		"State_Silence":      64,
		"State_Frozen":       128,
		"State_Invincible":   256,
		"State_Untargetable": 512,
		"State_Fly":          1024,
	}
)

func (x RoleState) Enum() *RoleState {
	p := new(RoleState)
	*p = x
	return p
}

func (x RoleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleState) Descriptor() protoreflect.EnumDescriptor {
	return file_room_rcommon_proto_enumTypes[0].Descriptor()
}

func (RoleState) Type() protoreflect.EnumType {
	return &file_room_rcommon_proto_enumTypes[0]
}

func (x RoleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleState.Descriptor instead.
func (RoleState) EnumDescriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{0}
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{0}
}

func (x *Vector) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type SceneItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId    int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`          //道具id
	ItemType  int32 `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`    //道具类型
	ItemCount int32 `protobuf:"varint,3,opt,name=item_count,json=itemCount,proto3" json:"item_count,omitempty"` //道具数量
	PosIndex  int32 `protobuf:"varint,4,opt,name=pos_index,json=posIndex,proto3" json:"pos_index,omitempty"`    // 位置索引
	DropId    int64 `protobuf:"varint,5,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`          //掉落物uid
	IsVisible bool  `protobuf:"varint,6,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"` //是否可见
}

func (x *SceneItem) Reset() {
	*x = SceneItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneItem) ProtoMessage() {}

func (x *SceneItem) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneItem.ProtoReflect.Descriptor instead.
func (*SceneItem) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{1}
}

func (x *SceneItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SceneItem) GetItemType() int32 {
	if x != nil {
		return x.ItemType
	}
	return 0
}

func (x *SceneItem) GetItemCount() int32 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

func (x *SceneItem) GetPosIndex() int32 {
	if x != nil {
		return x.PosIndex
	}
	return 0
}

func (x *SceneItem) GetDropId() int64 {
	if x != nil {
		return x.DropId
	}
	return 0
}

func (x *SceneItem) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner     int64   `protobuf:"varint,1,opt,name=owner,proto3" json:"owner,omitempty"`                         // 所有者
	Index     int32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`                         // 技能序列号
	Cid       int32   `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`                             // 技能配置id
	SelfPos   *Vector `protobuf:"bytes,4,opt,name=self_pos,json=selfPos,proto3" json:"self_pos,omitempty"`       // 自身位置
	TargetPos *Vector `protobuf:"bytes,5,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"` // 目标位置，当技能类型为方向技能时需要传入
	TargetId  int64   `protobuf:"varint,6,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`   // 玩家目标id，当技能类型为锁定目标时需要传入
	Shift     *Vector `protobuf:"bytes,7,opt,name=shift,proto3" json:"shift,omitempty"`                          // 位移终点坐标
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{2}
}

func (x *Skill) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Skill) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Skill) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Skill) GetSelfPos() *Vector {
	if x != nil {
		return x.SelfPos
	}
	return nil
}

func (x *Skill) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *Skill) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Skill) GetShift() *Vector {
	if x != nil {
		return x.Shift
	}
	return nil
}

type Buff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             // buff id
	Duration int32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"` // 持续时间(ms)
	Overlay  int32 `protobuf:"varint,3,opt,name=overlay,proto3" json:"overlay,omitempty"`   // 叠加层数
}

func (x *Buff) Reset() {
	*x = Buff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Buff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buff) ProtoMessage() {}

func (x *Buff) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buff.ProtoReflect.Descriptor instead.
func (*Buff) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{3}
}

func (x *Buff) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Buff) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Buff) GetOverlay() int32 {
	if x != nil {
		return x.Overlay
	}
	return 0
}

type RoomRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64              `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname       string             `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                                                     // 昵称
	HeroId         int32              `protobuf:"varint,3,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`                                                                          // 英雄id
	Hp             int32              `protobuf:"varint,4,opt,name=hp,proto3" json:"hp,omitempty"`                                                                                                // 血量
	MaxHp          int32              `protobuf:"varint,5,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`                                                                             // 最大血量
	Speed          int32              `protobuf:"varint,6,opt,name=speed,proto3" json:"speed,omitempty"`                                                                                          // 速度
	Direction      *Vector            `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"`                                                                                   // 方向
	Pos            *Vector            `protobuf:"bytes,8,opt,name=pos,proto3" json:"pos,omitempty"`                                                                                               // 坐标
	State          map[int32]bool     `protobuf:"bytes,9,rep,name=state,proto3" json:"state,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 状态 参考: RoleState
	HeroMasteryExp int32              `protobuf:"varint,10,opt,name=hero_mastery_exp,json=heroMasteryExp,proto3" json:"hero_mastery_exp,omitempty"`                                               // 英雄熟练度
	GroupId        int32              `protobuf:"varint,11,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                                                                      // 阵营id
	DeadInfo       *RoomRole_DeadInfo `protobuf:"bytes,12,opt,name=dead_info,json=deadInfo,proto3" json:"dead_info,omitempty"`                                                                    //死亡信息
	IsRobot        bool               `protobuf:"varint,13,opt,name=is_robot,json=isRobot,proto3" json:"is_robot,omitempty"`                                                                      //是否是机器人
	Buffs          map[int32]*Buff    `protobuf:"bytes,14,rep,name=buffs,proto3" json:"buffs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //buff列表
}

func (x *RoomRole) Reset() {
	*x = RoomRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomRole) ProtoMessage() {}

func (x *RoomRole) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomRole.ProtoReflect.Descriptor instead.
func (*RoomRole) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{4}
}

func (x *RoomRole) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoomRole) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RoomRole) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *RoomRole) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *RoomRole) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *RoomRole) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RoomRole) GetDirection() *Vector {
	if x != nil {
		return x.Direction
	}
	return nil
}

func (x *RoomRole) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *RoomRole) GetState() map[int32]bool {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *RoomRole) GetHeroMasteryExp() int32 {
	if x != nil {
		return x.HeroMasteryExp
	}
	return 0
}

func (x *RoomRole) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *RoomRole) GetDeadInfo() *RoomRole_DeadInfo {
	if x != nil {
		return x.DeadInfo
	}
	return nil
}

func (x *RoomRole) GetIsRobot() bool {
	if x != nil {
		return x.IsRobot
	}
	return false
}

func (x *RoomRole) GetBuffs() map[int32]*Buff {
	if x != nil {
		return x.Buffs
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`     // 1:圆形 2:矩形 3:扇形
	Radius int32 `protobuf:"varint,2,opt,name=radius,proto3" json:"radius,omitempty"` // 半径
	Width  int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`   // 宽度
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"` // 高度
	Angle  int32 `protobuf:"varint,5,opt,name=angle,proto3" json:"angle,omitempty"`   // 角度
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{5}
}

func (x *Range) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Range) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *Range) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Range) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Range) GetAngle() int32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       //唯一id
	TypeId  int32 `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"` // 类型
	Num     int32 `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`                     // 数量
	Expired int64 `protobuf:"varint,4,opt,name=expired,proto3" json:"expired,omitempty"`             // 过期时间
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{6}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Item) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Item) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

type Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[int64]*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Items) Reset() {
	*x = Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{7}
}

func (x *Items) GetItems() map[int64]*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type RoleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                    //玩家UID
	KillCount   int32  `protobuf:"varint,2,opt,name=kill_count,json=killCount,proto3" json:"kill_count,omitempty"`       //击杀数
	AssistCount int32  `protobuf:"varint,3,opt,name=assist_count,json=assistCount,proto3" json:"assist_count,omitempty"` //助攻数
	DeathCount  int32  `protobuf:"varint,4,opt,name=death_count,json=deathCount,proto3" json:"death_count,omitempty"`    //死亡数
	TotalDamage int32  `protobuf:"varint,5,opt,name=total_damage,json=totalDamage,proto3" json:"total_damage,omitempty"` //总伤害
	TotalHeal   int32  `protobuf:"varint,6,opt,name=total_heal,json=totalHeal,proto3" json:"total_heal,omitempty"`       //总治疗
	MvpScore    int32  `protobuf:"varint,7,opt,name=mvp_score,json=mvpScore,proto3" json:"mvp_score,omitempty"`          //最终积分
	IsMvp       bool   `protobuf:"varint,8,opt,name=is_mvp,json=isMvp,proto3" json:"is_mvp,omitempty"`                   //是否是mvp
	Rewards     *Items `protobuf:"bytes,9,opt,name=rewards,proto3" json:"rewards,omitempty"`                             //道具奖励
}

func (x *RoleResult) Reset() {
	*x = RoleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleResult) ProtoMessage() {}

func (x *RoleResult) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleResult.ProtoReflect.Descriptor instead.
func (*RoleResult) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{8}
}

func (x *RoleResult) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoleResult) GetKillCount() int32 {
	if x != nil {
		return x.KillCount
	}
	return 0
}

func (x *RoleResult) GetAssistCount() int32 {
	if x != nil {
		return x.AssistCount
	}
	return 0
}

func (x *RoleResult) GetDeathCount() int32 {
	if x != nil {
		return x.DeathCount
	}
	return 0
}

func (x *RoleResult) GetTotalDamage() int32 {
	if x != nil {
		return x.TotalDamage
	}
	return 0
}

func (x *RoleResult) GetTotalHeal() int32 {
	if x != nil {
		return x.TotalHeal
	}
	return 0
}

func (x *RoleResult) GetMvpScore() int32 {
	if x != nil {
		return x.MvpScore
	}
	return 0
}

func (x *RoleResult) GetIsMvp() bool {
	if x != nil {
		return x.IsMvp
	}
	return false
}

func (x *RoleResult) GetRewards() *Items {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type RoomRole_DeadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeadFrom int64 `protobuf:"varint,1,opt,name=dead_from,json=deadFrom,proto3" json:"dead_from,omitempty"` //死亡来源
	DeadTime int32 `protobuf:"varint,2,opt,name=dead_time,json=deadTime,proto3" json:"dead_time,omitempty"` //复活剩余时间ms
}

func (x *RoomRole_DeadInfo) Reset() {
	*x = RoomRole_DeadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_rcommon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomRole_DeadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomRole_DeadInfo) ProtoMessage() {}

func (x *RoomRole_DeadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_rcommon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomRole_DeadInfo.ProtoReflect.Descriptor instead.
func (*RoomRole_DeadInfo) Descriptor() ([]byte, []int) {
	return file_room_rcommon_proto_rawDescGZIP(), []int{4, 0}
}

func (x *RoomRole_DeadInfo) GetDeadFrom() int64 {
	if x != nil {
		return x.DeadFrom
	}
	return 0
}

func (x *RoomRole_DeadInfo) GetDeadTime() int32 {
	if x != nil {
		return x.DeadTime
	}
	return 0
}

var File_room_rcommon_proto protoreflect.FileDescriptor

var file_room_rcommon_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x32, 0x0a, 0x06, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79,
	0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x22, 0xb5,
	0x01, 0x0a, 0x09, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x05, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07,
	0x73, 0x65, 0x6c, 0x66, 0x50, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x22, 0x4c, 0x0a, 0x04, 0x42, 0x75, 0x66, 0x66, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x76, 0x65,
	0x72, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x22, 0x98, 0x05, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x68, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x5f, 0x68,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x79, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x65, 0x72,
	0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x79, 0x45, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73, 0x1a, 0x44, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x38,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x0a, 0x42, 0x75, 0x66, 0x66,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x42,
	0x75, 0x66, 0x66, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77,
	0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x5b, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x22, 0x7b, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x44, 0x0a, 0x0a, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9e, 0x02, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x76, 0x70, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x76, 0x70, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6d, 0x76, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4d, 0x76, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x2a, 0xeb, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x74, 0x75, 0x6e, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x48, 0x6f, 0x6c, 0x64, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x42, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x41, 0x6e,
	0x6b, 0x6c, 0x65, 0x74, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x53, 0x68, 0x61, 0x63, 0x6b, 0x6c, 0x65, 0x64, 0x10, 0x20, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x40, 0x12, 0x11, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x10, 0x80, 0x01,
	0x12, 0x15, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x6e, 0x63,
	0x69, 0x62, 0x6c, 0x65, 0x10, 0x80, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x55, 0x6e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x80, 0x04,
	0x12, 0x0e, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x46, 0x6c, 0x79, 0x10, 0x80, 0x08,
	0x42, 0x11, 0x5a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x72, 0x6f, 0x6f,
	0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_room_rcommon_proto_rawDescOnce sync.Once
	file_room_rcommon_proto_rawDescData = file_room_rcommon_proto_rawDesc
)

func file_room_rcommon_proto_rawDescGZIP() []byte {
	file_room_rcommon_proto_rawDescOnce.Do(func() {
		file_room_rcommon_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_rcommon_proto_rawDescData)
	})
	return file_room_rcommon_proto_rawDescData
}

var file_room_rcommon_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_room_rcommon_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_room_rcommon_proto_goTypes = []interface{}{
	(RoleState)(0),            // 0: room.RoleState
	(*Vector)(nil),            // 1: room.Vector
	(*SceneItem)(nil),         // 2: room.SceneItem
	(*Skill)(nil),             // 3: room.Skill
	(*Buff)(nil),              // 4: room.Buff
	(*RoomRole)(nil),          // 5: room.RoomRole
	(*Range)(nil),             // 6: room.Range
	(*Item)(nil),              // 7: room.Item
	(*Items)(nil),             // 8: room.Items
	(*RoleResult)(nil),        // 9: room.RoleResult
	(*RoomRole_DeadInfo)(nil), // 10: room.RoomRole.DeadInfo
	nil,                       // 11: room.RoomRole.StateEntry
	nil,                       // 12: room.RoomRole.BuffsEntry
	nil,                       // 13: room.Items.ItemsEntry
}
var file_room_rcommon_proto_depIdxs = []int32{
	1,  // 0: room.Skill.self_pos:type_name -> room.Vector
	1,  // 1: room.Skill.target_pos:type_name -> room.Vector
	1,  // 2: room.Skill.shift:type_name -> room.Vector
	1,  // 3: room.RoomRole.direction:type_name -> room.Vector
	1,  // 4: room.RoomRole.pos:type_name -> room.Vector
	11, // 5: room.RoomRole.state:type_name -> room.RoomRole.StateEntry
	10, // 6: room.RoomRole.dead_info:type_name -> room.RoomRole.DeadInfo
	12, // 7: room.RoomRole.buffs:type_name -> room.RoomRole.BuffsEntry
	13, // 8: room.Items.items:type_name -> room.Items.ItemsEntry
	8,  // 9: room.RoleResult.rewards:type_name -> room.Items
	4,  // 10: room.RoomRole.BuffsEntry.value:type_name -> room.Buff
	7,  // 11: room.Items.ItemsEntry.value:type_name -> room.Item
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_room_rcommon_proto_init() }
func file_room_rcommon_proto_init() {
	if File_room_rcommon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_room_rcommon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Buff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_rcommon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomRole_DeadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_rcommon_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_room_rcommon_proto_goTypes,
		DependencyIndexes: file_room_rcommon_proto_depIdxs,
		EnumInfos:         file_room_rcommon_proto_enumTypes,
		MessageInfos:      file_room_rcommon_proto_msgTypes,
	}.Build()
	File_room_rcommon_proto = out.File
	file_room_rcommon_proto_rawDesc = nil
	file_room_rcommon_proto_goTypes = nil
	file_room_rcommon_proto_depIdxs = nil
}
