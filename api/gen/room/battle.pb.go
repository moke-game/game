// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: room/battle.proto

package roompb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BattleState int32

const (
	BattleState_Battle_State_None       BattleState = 0
	BattleState_Battle_State_Loading    BattleState = 1  //loading
	BattleState_Battle_State_Show       BattleState = 2  //展示
	BattleState_Battle_State_Fight      BattleState = 3  //战斗
	BattleState_Battle_State_FinalRound BattleState = 4  //决胜局
	BattleState_Battle_State_End_Wait   BattleState = 5  //结束等待
	BattleState_Battle_State_End        BattleState = 6  //结束
	BattleState_Battle_State_Suspend    BattleState = 99 //暂停状态
)

// Enum value maps for BattleState.
var (
	BattleState_name = map[int32]string{
		0:  "Battle_State_None",
		1:  "Battle_State_Loading",
		2:  "Battle_State_Show",
		3:  "Battle_State_Fight",
		4:  "Battle_State_FinalRound",
		5:  "Battle_State_End_Wait",
		6:  "Battle_State_End",
		99: "Battle_State_Suspend",
	}
	BattleState_value = map[string]int32{
		"Battle_State_None":       0,
		"Battle_State_Loading":    1,
		"Battle_State_Show":       2,
		"Battle_State_Fight":      3,
		"Battle_State_FinalRound": 4,
		"Battle_State_End_Wait":   5,
		"Battle_State_End":        6,
		"Battle_State_Suspend":    99,
	}
)

func (x BattleState) Enum() *BattleState {
	p := new(BattleState)
	*p = x
	return p
}

func (x BattleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleState) Descriptor() protoreflect.EnumDescriptor {
	return file_room_battle_proto_enumTypes[0].Descriptor()
}

func (BattleState) Type() protoreflect.EnumType {
	return &file_room_battle_proto_enumTypes[0]
}

func (x BattleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleState.Descriptor instead.
func (BattleState) EnumDescriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{0}
}

// 英雄战斗数据
type MBattleHero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                 //玩家UID
	KillCount   int32   `protobuf:"varint,2,opt,name=killCount,proto3" json:"killCount,omitempty"`     //击杀数
	AssistCount int32   `protobuf:"varint,3,opt,name=assistCount,proto3" json:"assistCount,omitempty"` //助攻数
	DeathCount  int32   `protobuf:"varint,4,opt,name=deathCount,proto3" json:"deathCount,omitempty"`   //死亡数
	TotalDamage int32   `protobuf:"varint,5,opt,name=totalDamage,proto3" json:"totalDamage,omitempty"` //总伤害
	TotalHeal   int32   `protobuf:"varint,6,opt,name=totalHeal,proto3" json:"totalHeal,omitempty"`     //总治疗
	MvpScore    float32 `protobuf:"fixed32,7,opt,name=mvpScore,proto3" json:"mvpScore,omitempty"`      //最终积分
	Level       int32   `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`             // 英雄等级
	Score       int32   `protobuf:"varint,9,opt,name=score,proto3" json:"score,omitempty"`             // 特殊得分
}

func (x *MBattleHero) Reset() {
	*x = MBattleHero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MBattleHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MBattleHero) ProtoMessage() {}

func (x *MBattleHero) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MBattleHero.ProtoReflect.Descriptor instead.
func (*MBattleHero) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{0}
}

func (x *MBattleHero) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MBattleHero) GetKillCount() int32 {
	if x != nil {
		return x.KillCount
	}
	return 0
}

func (x *MBattleHero) GetAssistCount() int32 {
	if x != nil {
		return x.AssistCount
	}
	return 0
}

func (x *MBattleHero) GetDeathCount() int32 {
	if x != nil {
		return x.DeathCount
	}
	return 0
}

func (x *MBattleHero) GetTotalDamage() int32 {
	if x != nil {
		return x.TotalDamage
	}
	return 0
}

func (x *MBattleHero) GetTotalHeal() int32 {
	if x != nil {
		return x.TotalHeal
	}
	return 0
}

func (x *MBattleHero) GetMvpScore() float32 {
	if x != nil {
		return x.MvpScore
	}
	return 0
}

func (x *MBattleHero) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MBattleHero) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 复活
type NtfPVPRevive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                       //复活者UID
	Pos          *Vector `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`                                        //复活位置
	Hp           int32   `protobuf:"varint,3,opt,name=hp,proto3" json:"hp,omitempty"`                                         //血量
	MaxHp        int32   `protobuf:"varint,4,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`                      //最大血量
	ChangesIndex int32   `protobuf:"varint,5,opt,name=changes_index,json=changesIndex,proto3" json:"changes_index,omitempty"` //属性变化序列号(每次更改+1)
}

func (x *NtfPVPRevive) Reset() {
	*x = NtfPVPRevive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPVPRevive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPVPRevive) ProtoMessage() {}

func (x *NtfPVPRevive) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPVPRevive.ProtoReflect.Descriptor instead.
func (*NtfPVPRevive) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{1}
}

func (x *NtfPVPRevive) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NtfPVPRevive) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *NtfPVPRevive) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *NtfPVPRevive) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *NtfPVPRevive) GetChangesIndex() int32 {
	if x != nil {
		return x.ChangesIndex
	}
	return 0
}

// 战斗同步状态
type NtfUpdateBattleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    BattleState `protobuf:"varint,1,opt,name=state,proto3,enum=room.BattleState" json:"state,omitempty"` //状态
	Duration int32       `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`                 //持续时间(s)
}

func (x *NtfUpdateBattleState) Reset() {
	*x = NtfUpdateBattleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfUpdateBattleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfUpdateBattleState) ProtoMessage() {}

func (x *NtfUpdateBattleState) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfUpdateBattleState.ProtoReflect.Descriptor instead.
func (*NtfUpdateBattleState) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{2}
}

func (x *NtfUpdateBattleState) GetState() BattleState {
	if x != nil {
		return x.State
	}
	return BattleState_Battle_State_None
}

func (x *NtfUpdateBattleState) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 击杀播报
type NtfHeroKilled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KilledUid  int64           `protobuf:"varint,1,opt,name=killed_uid,json=killedUid,proto3" json:"killed_uid,omitempty"`                                                                   //被击杀玩家ID
	KillUid    int64           `protobuf:"varint,2,opt,name=kill_uid,json=killUid,proto3" json:"kill_uid,omitempty"`                                                                         //击杀者玩家ID
	KillAmount int32           `protobuf:"varint,3,opt,name=kill_amount,json=killAmount,proto3" json:"kill_amount,omitempty"`                                                                //连杀数
	HelperUid  []int64         `protobuf:"varint,4,rep,packed,name=helper_uid,json=helperUid,proto3" json:"helper_uid,omitempty"`                                                            //助攻玩家ID
	Scores     map[int32]int32 `protobuf:"bytes,5,rep,name=scores,proto3" json:"scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //比分 key:阵营ID val:得分
	ReviveTime int32           `protobuf:"varint,6,opt,name=revive_time,json=reviveTime,proto3" json:"revive_time,omitempty"`                                                                //复活倒计时 毫秒
}

func (x *NtfHeroKilled) Reset() {
	*x = NtfHeroKilled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfHeroKilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfHeroKilled) ProtoMessage() {}

func (x *NtfHeroKilled) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfHeroKilled.ProtoReflect.Descriptor instead.
func (*NtfHeroKilled) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{3}
}

func (x *NtfHeroKilled) GetKilledUid() int64 {
	if x != nil {
		return x.KilledUid
	}
	return 0
}

func (x *NtfHeroKilled) GetKillUid() int64 {
	if x != nil {
		return x.KillUid
	}
	return 0
}

func (x *NtfHeroKilled) GetKillAmount() int32 {
	if x != nil {
		return x.KillAmount
	}
	return 0
}

func (x *NtfHeroKilled) GetHelperUid() []int64 {
	if x != nil {
		return x.HelperUid
	}
	return nil
}

func (x *NtfHeroKilled) GetScores() map[int32]int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *NtfHeroKilled) GetReviveTime() int32 {
	if x != nil {
		return x.ReviveTime
	}
	return 0
}

// 战斗结束
type NtfPVPBattleEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinCamp int32          `protobuf:"varint,1,opt,name=win_camp,json=winCamp,proto3" json:"win_camp,omitempty"` //胜利阵营
	Hero    []*MBattleHero `protobuf:"bytes,2,rep,name=hero,proto3" json:"hero,omitempty"`                       //英雄战斗数据
	Rewards []*Item        `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`                 //道具奖励
	Mvp     int64          `protobuf:"varint,4,opt,name=mvp,proto3" json:"mvp,omitempty"`                        //MVP玩家
	Extra   bool           `protobuf:"varint,5,opt,name=extra,proto3" json:"extra,omitempty"`                    //额外奖励
}

func (x *NtfPVPBattleEnd) Reset() {
	*x = NtfPVPBattleEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfPVPBattleEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfPVPBattleEnd) ProtoMessage() {}

func (x *NtfPVPBattleEnd) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfPVPBattleEnd.ProtoReflect.Descriptor instead.
func (*NtfPVPBattleEnd) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{4}
}

func (x *NtfPVPBattleEnd) GetWinCamp() int32 {
	if x != nil {
		return x.WinCamp
	}
	return 0
}

func (x *NtfPVPBattleEnd) GetHero() []*MBattleHero {
	if x != nil {
		return x.Hero
	}
	return nil
}

func (x *NtfPVPBattleEnd) GetRewards() []*Item {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *NtfPVPBattleEnd) GetMvp() int64 {
	if x != nil {
		return x.Mvp
	}
	return 0
}

func (x *NtfPVPBattleEnd) GetExtra() bool {
	if x != nil {
		return x.Extra
	}
	return false
}

// 战斗初始化信息
type NtfBattleInitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores map[int32]int32 `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //比分 key:阵营ID val:得分
	// Types that are assignable to BattleKind:
	//
	//	*NtfBattleInitInfo_Football
	//	*NtfBattleInitInfo_Piece
	//	*NtfBattleInitInfo_Boss
	BattleKind isNtfBattleInitInfo_BattleKind `protobuf_oneof:"BattleKind"`
}

func (x *NtfBattleInitInfo) Reset() {
	*x = NtfBattleInitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfBattleInitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfBattleInitInfo) ProtoMessage() {}

func (x *NtfBattleInitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfBattleInitInfo.ProtoReflect.Descriptor instead.
func (*NtfBattleInitInfo) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{5}
}

func (x *NtfBattleInitInfo) GetScores() map[int32]int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (m *NtfBattleInitInfo) GetBattleKind() isNtfBattleInitInfo_BattleKind {
	if m != nil {
		return m.BattleKind
	}
	return nil
}

func (x *NtfBattleInitInfo) GetFootball() *FootballInit {
	if x, ok := x.GetBattleKind().(*NtfBattleInitInfo_Football); ok {
		return x.Football
	}
	return nil
}

func (x *NtfBattleInitInfo) GetPiece() *PieceInit {
	if x, ok := x.GetBattleKind().(*NtfBattleInitInfo_Piece); ok {
		return x.Piece
	}
	return nil
}

func (x *NtfBattleInitInfo) GetBoss() *BossChallengeInit {
	if x, ok := x.GetBattleKind().(*NtfBattleInitInfo_Boss); ok {
		return x.Boss
	}
	return nil
}

type isNtfBattleInitInfo_BattleKind interface {
	isNtfBattleInitInfo_BattleKind()
}

type NtfBattleInitInfo_Football struct {
	Football *FootballInit `protobuf:"bytes,2,opt,name=football,proto3,oneof"`
}

type NtfBattleInitInfo_Piece struct {
	Piece *PieceInit `protobuf:"bytes,3,opt,name=piece,proto3,oneof"`
}

type NtfBattleInitInfo_Boss struct {
	Boss *BossChallengeInit `protobuf:"bytes,4,opt,name=boss,proto3,oneof"`
}

func (*NtfBattleInitInfo_Football) isNtfBattleInitInfo_BattleKind() {}

func (*NtfBattleInitInfo_Piece) isNtfBattleInitInfo_BattleKind() {}

func (*NtfBattleInitInfo_Boss) isNtfBattleInitInfo_BattleKind() {}

// 足球初始化消息
type FootballInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goals    map[int32]*Goal `protobuf:"bytes,1,rep,name=goals,proto3" json:"goals,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //球门信息 key:阵营ID val:球门信息
	WinPoint int32           `protobuf:"varint,2,opt,name=winPoint,proto3" json:"winPoint,omitempty"`                                                                                   //直接胜利分数
}

func (x *FootballInit) Reset() {
	*x = FootballInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootballInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootballInit) ProtoMessage() {}

func (x *FootballInit) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootballInit.ProtoReflect.Descriptor instead.
func (*FootballInit) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{6}
}

func (x *FootballInit) GetGoals() map[int32]*Goal {
	if x != nil {
		return x.Goals
	}
	return nil
}

func (x *FootballInit) GetWinPoint() int32 {
	if x != nil {
		return x.WinPoint
	}
	return 0
}

// 夺宝初始化消息
type PieceInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zones map[int32]*ZoneCircle `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //夺宝区域 key:阵营ID val:夺宝区域
}

func (x *PieceInit) Reset() {
	*x = PieceInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PieceInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieceInit) ProtoMessage() {}

func (x *PieceInit) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieceInit.ProtoReflect.Descriptor instead.
func (*PieceInit) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{7}
}

func (x *PieceInit) GetZones() map[int32]*ZoneCircle {
	if x != nil {
		return x.Zones
	}
	return nil
}

type ZoneCircle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Camp   int32   `protobuf:"varint,1,opt,name=camp,proto3" json:"camp,omitempty"`     //阵营
	Center *Vector `protobuf:"bytes,2,opt,name=center,proto3" json:"center,omitempty"`  //圆心
	Radius int32   `protobuf:"varint,3,opt,name=radius,proto3" json:"radius,omitempty"` //半径
}

func (x *ZoneCircle) Reset() {
	*x = ZoneCircle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneCircle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneCircle) ProtoMessage() {}

func (x *ZoneCircle) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneCircle.ProtoReflect.Descriptor instead.
func (*ZoneCircle) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{8}
}

func (x *ZoneCircle) GetCamp() int32 {
	if x != nil {
		return x.Camp
	}
	return 0
}

func (x *ZoneCircle) GetCenter() *Vector {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *ZoneCircle) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type Goal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Camp int32     `protobuf:"varint,1,opt,name=camp,proto3" json:"camp,omitempty"` //阵营
	Pos  []*Vector `protobuf:"bytes,2,rep,name=pos,proto3" json:"pos,omitempty"`    //球门位置(四个顶点坐标)
}

func (x *Goal) Reset() {
	*x = Goal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal) ProtoMessage() {}

func (x *Goal) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal.ProtoReflect.Descriptor instead.
func (*Goal) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{9}
}

func (x *Goal) GetCamp() int32 {
	if x != nil {
		return x.Camp
	}
	return 0
}

func (x *Goal) GetPos() []*Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

// 战况同步消息
type NtfBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores map[int32]int32 `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //比分 key:阵营ID val:得分
	Scorer int64           `protobuf:"varint,2,opt,name=scorer,proto3" json:"scorer,omitempty"`                                                                                          //得分者id
}

func (x *NtfBattleInfo) Reset() {
	*x = NtfBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfBattleInfo) ProtoMessage() {}

func (x *NtfBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfBattleInfo.ProtoReflect.Descriptor instead.
func (*NtfBattleInfo) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{10}
}

func (x *NtfBattleInfo) GetScores() map[int32]int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *NtfBattleInfo) GetScorer() int64 {
	if x != nil {
		return x.Scorer
	}
	return 0
}

// boss 挑战
type BossChallengeInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossId    int64   `protobuf:"varint,1,opt,name=bossId,proto3" json:"bossId,omitempty"`       //bossId
	BossCfgId int32   `protobuf:"varint,2,opt,name=bossCfgId,proto3" json:"bossCfgId,omitempty"` //boss配置ID
	Pos       *Vector `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`              //boss位置
	FaceTo    int32   `protobuf:"varint,4,opt,name=faceTo,proto3" json:"faceTo,omitempty"`       //boss朝向
	Hp        int32   `protobuf:"varint,5,opt,name=hp,proto3" json:"hp,omitempty"`               //boss血量
	MaxHp     int32   `protobuf:"varint,6,opt,name=maxHp,proto3" json:"maxHp,omitempty"`         //boss最大血量
}

func (x *BossChallengeInit) Reset() {
	*x = BossChallengeInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossChallengeInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossChallengeInit) ProtoMessage() {}

func (x *BossChallengeInit) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossChallengeInit.ProtoReflect.Descriptor instead.
func (*BossChallengeInit) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{11}
}

func (x *BossChallengeInit) GetBossId() int64 {
	if x != nil {
		return x.BossId
	}
	return 0
}

func (x *BossChallengeInit) GetBossCfgId() int32 {
	if x != nil {
		return x.BossCfgId
	}
	return 0
}

func (x *BossChallengeInit) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *BossChallengeInit) GetFaceTo() int32 {
	if x != nil {
		return x.FaceTo
	}
	return 0
}

func (x *BossChallengeInit) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *BossChallengeInit) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

type NtfBossChallengeDamageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage int64 `protobuf:"varint,1,opt,name=damage,proto3" json:"damage,omitempty"` //伤害累计
}

func (x *NtfBossChallengeDamageUpdate) Reset() {
	*x = NtfBossChallengeDamageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfBossChallengeDamageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfBossChallengeDamageUpdate) ProtoMessage() {}

func (x *NtfBossChallengeDamageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfBossChallengeDamageUpdate.ProtoReflect.Descriptor instead.
func (*NtfBossChallengeDamageUpdate) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{12}
}

func (x *NtfBossChallengeDamageUpdate) GetDamage() int64 {
	if x != nil {
		return x.Damage
	}
	return 0
}

// 买活面板
type NtfReviveImmediatelyPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` //道具ID
	Count  int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                 //数量
}

func (x *NtfReviveImmediatelyPanel) Reset() {
	*x = NtfReviveImmediatelyPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_battle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfReviveImmediatelyPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfReviveImmediatelyPanel) ProtoMessage() {}

func (x *NtfReviveImmediatelyPanel) ProtoReflect() protoreflect.Message {
	mi := &file_room_battle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfReviveImmediatelyPanel.ProtoReflect.Descriptor instead.
func (*NtfReviveImmediatelyPanel) Descriptor() ([]byte, []int) {
	return file_room_battle_proto_rawDescGZIP(), []int{13}
}

func (x *NtfReviveImmediatelyPanel) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *NtfReviveImmediatelyPanel) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_room_battle_proto protoreflect.FileDescriptor

var file_room_battle_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x1a, 0x12, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02,
	0x0a, 0x0b, 0x4d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x76, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x6d, 0x76, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x4e, 0x74, 0x66, 0x50,
	0x56, 0x50, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x68, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61,
	0x78, 0x5f, 0x68, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x48,
	0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5b, 0x0a, 0x14, 0x4e, 0x74, 0x66, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x02, 0x0a, 0x0d, 0x4e, 0x74, 0x66, 0x48, 0x65, 0x72, 0x6f, 0x4b,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x37, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x74, 0x66, 0x48, 0x65, 0x72, 0x6f, 0x4b, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x76, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x4e, 0x74, 0x66, 0x50, 0x56, 0x50, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x5f,
	0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x43,
	0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x48, 0x65, 0x72, 0x6f, 0x52, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x76, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x76, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0xa3, 0x02, 0x0a, 0x11, 0x4e, 0x74, 0x66,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x74, 0x66, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x66,
	0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x69,
	0x74, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x12, 0x27, 0x0a,
	0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x69, 0x65, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x42, 0x6f, 0x73, 0x73,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x62, 0x6f, 0x73, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0xa5,
	0x01, 0x0a, 0x0c, 0x46, 0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x12,
	0x33, 0x0a, 0x05, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x69, 0x74, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x67,
	0x6f, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x1a, 0x44, 0x0a, 0x0a, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0x4a, 0x0a, 0x0a, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x5a, 0x6f, 0x6e,
	0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x5e, 0x0a, 0x0a, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x22, 0x3a, 0x0a, 0x04, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x12, 0x1e,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x9b,
	0x01, 0x0a, 0x0d, 0x4e, 0x74, 0x66, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x74, 0x66, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa7, 0x01, 0x0a,
	0x11, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f,
	0x73, 0x73, 0x43, 0x66, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62,
	0x6f, 0x73, 0x73, 0x43, 0x66, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x65,
	0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x63, 0x65, 0x54, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x68, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x22, 0x36, 0x0a, 0x1c, 0x4e, 0x74, 0x66, 0x42, 0x6f, 0x73,
	0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x4a,
	0x0a, 0x19, 0x4e, 0x74, 0x66, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0xd5, 0x01, 0x0a, 0x0b, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x68, 0x6f, 0x77,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x45, 0x6e, 0x64, 0x5f, 0x57, 0x61, 0x69, 0x74,
	0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x45, 0x6e, 0x64, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x10, 0x63, 0x42, 0x11, 0x5a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x72,
	0x6f, 0x6f, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_room_battle_proto_rawDescOnce sync.Once
	file_room_battle_proto_rawDescData = file_room_battle_proto_rawDesc
)

func file_room_battle_proto_rawDescGZIP() []byte {
	file_room_battle_proto_rawDescOnce.Do(func() {
		file_room_battle_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_battle_proto_rawDescData)
	})
	return file_room_battle_proto_rawDescData
}

var file_room_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_room_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_room_battle_proto_goTypes = []any{
	(BattleState)(0),                     // 0: room.BattleState
	(*MBattleHero)(nil),                  // 1: room.MBattleHero
	(*NtfPVPRevive)(nil),                 // 2: room.NtfPVPRevive
	(*NtfUpdateBattleState)(nil),         // 3: room.NtfUpdateBattleState
	(*NtfHeroKilled)(nil),                // 4: room.NtfHeroKilled
	(*NtfPVPBattleEnd)(nil),              // 5: room.NtfPVPBattleEnd
	(*NtfBattleInitInfo)(nil),            // 6: room.NtfBattleInitInfo
	(*FootballInit)(nil),                 // 7: room.FootballInit
	(*PieceInit)(nil),                    // 8: room.PieceInit
	(*ZoneCircle)(nil),                   // 9: room.ZoneCircle
	(*Goal)(nil),                         // 10: room.Goal
	(*NtfBattleInfo)(nil),                // 11: room.NtfBattleInfo
	(*BossChallengeInit)(nil),            // 12: room.BossChallengeInit
	(*NtfBossChallengeDamageUpdate)(nil), // 13: room.NtfBossChallengeDamageUpdate
	(*NtfReviveImmediatelyPanel)(nil),    // 14: room.NtfReviveImmediatelyPanel
	nil,                                  // 15: room.NtfHeroKilled.ScoresEntry
	nil,                                  // 16: room.NtfBattleInitInfo.ScoresEntry
	nil,                                  // 17: room.FootballInit.GoalsEntry
	nil,                                  // 18: room.PieceInit.ZonesEntry
	nil,                                  // 19: room.NtfBattleInfo.ScoresEntry
	(*Vector)(nil),                       // 20: room.Vector
	(*Item)(nil),                         // 21: room.Item
}
var file_room_battle_proto_depIdxs = []int32{
	20, // 0: room.NtfPVPRevive.pos:type_name -> room.Vector
	0,  // 1: room.NtfUpdateBattleState.state:type_name -> room.BattleState
	15, // 2: room.NtfHeroKilled.scores:type_name -> room.NtfHeroKilled.ScoresEntry
	1,  // 3: room.NtfPVPBattleEnd.hero:type_name -> room.MBattleHero
	21, // 4: room.NtfPVPBattleEnd.rewards:type_name -> room.Item
	16, // 5: room.NtfBattleInitInfo.scores:type_name -> room.NtfBattleInitInfo.ScoresEntry
	7,  // 6: room.NtfBattleInitInfo.football:type_name -> room.FootballInit
	8,  // 7: room.NtfBattleInitInfo.piece:type_name -> room.PieceInit
	12, // 8: room.NtfBattleInitInfo.boss:type_name -> room.BossChallengeInit
	17, // 9: room.FootballInit.goals:type_name -> room.FootballInit.GoalsEntry
	18, // 10: room.PieceInit.zones:type_name -> room.PieceInit.ZonesEntry
	20, // 11: room.ZoneCircle.center:type_name -> room.Vector
	20, // 12: room.Goal.pos:type_name -> room.Vector
	19, // 13: room.NtfBattleInfo.scores:type_name -> room.NtfBattleInfo.ScoresEntry
	20, // 14: room.BossChallengeInit.pos:type_name -> room.Vector
	10, // 15: room.FootballInit.GoalsEntry.value:type_name -> room.Goal
	9,  // 16: room.PieceInit.ZonesEntry.value:type_name -> room.ZoneCircle
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_room_battle_proto_init() }
func file_room_battle_proto_init() {
	if File_room_battle_proto != nil {
		return
	}
	file_room_rcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_room_battle_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MBattleHero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPVPRevive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NtfUpdateBattleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NtfHeroKilled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NtfPVPBattleEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NtfBattleInitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FootballInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PieceInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ZoneCircle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Goal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*NtfBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BossChallengeInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*NtfBossChallengeDamageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_battle_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*NtfReviveImmediatelyPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_room_battle_proto_msgTypes[5].OneofWrappers = []any{
		(*NtfBattleInitInfo_Football)(nil),
		(*NtfBattleInitInfo_Piece)(nil),
		(*NtfBattleInitInfo_Boss)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_battle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_room_battle_proto_goTypes,
		DependencyIndexes: file_room_battle_proto_depIdxs,
		EnumInfos:         file_room_battle_proto_enumTypes,
		MessageInfos:      file_room_battle_proto_msgTypes,
	}.Build()
	File_room_battle_proto = out.File
	file_room_battle_proto_rawDesc = nil
	file_room_battle_proto_goTypes = nil
	file_room_battle_proto_depIdxs = nil
}
