// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: room/room.proto

package roompb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KickOutReason int32

const (
	KickOutReason_KICK_OUT_REASON_BACK_TO_HALL KickOutReason = 0 // 返回大厅
	KickOutReason_KICK_OUT_REASON_STATE_ERROR  KickOutReason = 1 // 状态错误
)

// Enum value maps for KickOutReason.
var (
	KickOutReason_name = map[int32]string{
		0: "KICK_OUT_REASON_BACK_TO_HALL",
		1: "KICK_OUT_REASON_STATE_ERROR",
	}
	KickOutReason_value = map[string]int32{
		"KICK_OUT_REASON_BACK_TO_HALL": 0,
		"KICK_OUT_REASON_STATE_ERROR":  1,
	}
)

func (x KickOutReason) Enum() *KickOutReason {
	p := new(KickOutReason)
	*p = x
	return p
}

func (x KickOutReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KickOutReason) Descriptor() protoreflect.EnumDescriptor {
	return file_room_room_proto_enumTypes[0].Descriptor()
}

func (KickOutReason) Type() protoreflect.EnumType {
	return &file_room_room_proto_enumTypes[0]
}

func (x KickOutReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KickOutReason.Descriptor instead.
func (KickOutReason) EnumDescriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{0}
}

// 场景技能通知
type NtfRoomSkills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skill *Skill `protobuf:"bytes,1,opt,name=skill,proto3" json:"skill,omitempty"` //技能列表
}

func (x *NtfRoomSkills) Reset() {
	*x = NtfRoomSkills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomSkills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomSkills) ProtoMessage() {}

func (x *NtfRoomSkills) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomSkills.ProtoReflect.Descriptor instead.
func (*NtfRoomSkills) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{0}
}

func (x *NtfRoomSkills) GetSkill() *Skill {
	if x != nil {
		return x.Skill
	}
	return nil
}

// 场景技能取消通知
type NtfRoomCancelSkills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId    int64 `protobuf:"varint,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`          //技能拥有者id
	SkillCid   int32 `protobuf:"varint,2,opt,name=skill_cid,json=skillCid,proto3" json:"skill_cid,omitempty"`       //技能配置id
	SkillIndex int32 `protobuf:"varint,3,opt,name=skill_index,json=skillIndex,proto3" json:"skill_index,omitempty"` //技能序列号
}

func (x *NtfRoomCancelSkills) Reset() {
	*x = NtfRoomCancelSkills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomCancelSkills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomCancelSkills) ProtoMessage() {}

func (x *NtfRoomCancelSkills) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomCancelSkills.ProtoReflect.Descriptor instead.
func (*NtfRoomCancelSkills) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{1}
}

func (x *NtfRoomCancelSkills) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *NtfRoomCancelSkills) GetSkillCid() int32 {
	if x != nil {
		return x.SkillCid
	}
	return 0
}

func (x *NtfRoomCancelSkills) GetSkillIndex() int32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

type SkillHit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId             int64   `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`                                        // 目标id
	HpChanged            int32   `protobuf:"varint,2,opt,name=hp_changed,json=hpChanged,proto3" json:"hp_changed,omitempty"`                                     // 血量变化值
	LeftHp               int32   `protobuf:"varint,3,opt,name=left_hp,json=leftHp,proto3" json:"left_hp,omitempty"`                                              // 剩余血量
	AddBuffs             []*Buff `protobuf:"bytes,4,rep,name=add_buffs,json=addBuffs,proto3" json:"add_buffs,omitempty"`                                         //添加BUFF列表
	RemoveBuffs          []int32 `protobuf:"varint,5,rep,packed,name=remove_buffs,json=removeBuffs,proto3" json:"remove_buffs,omitempty"`                        //删除BUFF列表
	ChangesIndex         int32   `protobuf:"varint,6,opt,name=changes_index,json=changesIndex,proto3" json:"changes_index,omitempty"`                            //属性变化序列号(每次更改+1)
	IsCrit               bool    `protobuf:"varint,7,opt,name=is_crit,json=isCrit,proto3" json:"is_crit,omitempty"`                                              //是否暴击
	HpSuck               int32   `protobuf:"varint,8,opt,name=hp_suck,json=hpSuck,proto3" json:"hp_suck,omitempty"`                                              // 攻击方吸血值
	LeftHpAttacker       int32   `protobuf:"varint,9,opt,name=left_hp_attacker,json=leftHpAttacker,proto3" json:"left_hp_attacker,omitempty"`                    //攻击方剩余hp
	ChangesIndexAttacker int32   `protobuf:"varint,10,opt,name=changes_index_attacker,json=changesIndexAttacker,proto3" json:"changes_index_attacker,omitempty"` //攻击方属性变化序列号(每次更改+1)
	AddBuffsAttacker     []*Buff `protobuf:"bytes,11,rep,name=add_buffs_attacker,json=addBuffsAttacker,proto3" json:"add_buffs_attacker,omitempty"`              //攻击方添加BUFF列表
	TargetPos            *Vector `protobuf:"bytes,12,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`                                     //目标位置 (针对目标隐身状态下被技能命中)
}

func (x *SkillHit) Reset() {
	*x = SkillHit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillHit) ProtoMessage() {}

func (x *SkillHit) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillHit.ProtoReflect.Descriptor instead.
func (*SkillHit) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{2}
}

func (x *SkillHit) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *SkillHit) GetHpChanged() int32 {
	if x != nil {
		return x.HpChanged
	}
	return 0
}

func (x *SkillHit) GetLeftHp() int32 {
	if x != nil {
		return x.LeftHp
	}
	return 0
}

func (x *SkillHit) GetAddBuffs() []*Buff {
	if x != nil {
		return x.AddBuffs
	}
	return nil
}

func (x *SkillHit) GetRemoveBuffs() []int32 {
	if x != nil {
		return x.RemoveBuffs
	}
	return nil
}

func (x *SkillHit) GetChangesIndex() int32 {
	if x != nil {
		return x.ChangesIndex
	}
	return 0
}

func (x *SkillHit) GetIsCrit() bool {
	if x != nil {
		return x.IsCrit
	}
	return false
}

func (x *SkillHit) GetHpSuck() int32 {
	if x != nil {
		return x.HpSuck
	}
	return 0
}

func (x *SkillHit) GetLeftHpAttacker() int32 {
	if x != nil {
		return x.LeftHpAttacker
	}
	return 0
}

func (x *SkillHit) GetChangesIndexAttacker() int32 {
	if x != nil {
		return x.ChangesIndexAttacker
	}
	return 0
}

func (x *SkillHit) GetAddBuffsAttacker() []*Buff {
	if x != nil {
		return x.AddBuffsAttacker
	}
	return nil
}

func (x *SkillHit) GetTargetPos() *Vector {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

// 场景命中通知
type NtfRoomHits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hits       []*SkillHit `protobuf:"bytes,1,rep,name=hits,proto3" json:"hits,omitempty"`                                //命中列表
	SrcId      int64       `protobuf:"varint,2,opt,name=src_id,json=srcId,proto3" json:"src_id,omitempty"`                // 释放着id
	SkillCid   int32       `protobuf:"varint,3,opt,name=skill_cid,json=skillCid,proto3" json:"skill_cid,omitempty"`       // 技能配置id
	SkillIndex int32       `protobuf:"varint,4,opt,name=skill_index,json=skillIndex,proto3" json:"skill_index,omitempty"` // 技能序列号
}

func (x *NtfRoomHits) Reset() {
	*x = NtfRoomHits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomHits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomHits) ProtoMessage() {}

func (x *NtfRoomHits) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomHits.ProtoReflect.Descriptor instead.
func (*NtfRoomHits) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{3}
}

func (x *NtfRoomHits) GetHits() []*SkillHit {
	if x != nil {
		return x.Hits
	}
	return nil
}

func (x *NtfRoomHits) GetSrcId() int64 {
	if x != nil {
		return x.SrcId
	}
	return 0
}

func (x *NtfRoomHits) GetSkillCid() int32 {
	if x != nil {
		return x.SkillCid
	}
	return 0
}

func (x *NtfRoomHits) GetSkillIndex() int32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

type NtfRoomBuffEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     int64           `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`                                                                                       // 目标id
	Buff         *Buff           `protobuf:"bytes,2,opt,name=buff,proto3" json:"buff,omitempty"`                                                                                                                //buff
	Changes      map[int32]int32 `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`                //属性变化 (1 代表当前血量，101 代表血量变换值)
	ChangesIndex int32           `protobuf:"varint,4,opt,name=changes_index,json=changesIndex,proto3" json:"changes_index,omitempty"`                                                                           //属性变化序列号(每次更改+1)
	SkillCd      map[int32]int32 `protobuf:"bytes,5,rep,name=skill_cd,json=skillCd,proto3" json:"skill_cd,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 技能CD时间改变 <技能ID:减少时间(s)>
}

func (x *NtfRoomBuffEffect) Reset() {
	*x = NtfRoomBuffEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomBuffEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomBuffEffect) ProtoMessage() {}

func (x *NtfRoomBuffEffect) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomBuffEffect.ProtoReflect.Descriptor instead.
func (*NtfRoomBuffEffect) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{4}
}

func (x *NtfRoomBuffEffect) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NtfRoomBuffEffect) GetBuff() *Buff {
	if x != nil {
		return x.Buff
	}
	return nil
}

func (x *NtfRoomBuffEffect) GetChanges() map[int32]int32 {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *NtfRoomBuffEffect) GetChangesIndex() int32 {
	if x != nil {
		return x.ChangesIndex
	}
	return 0
}

func (x *NtfRoomBuffEffect) GetSkillCd() map[int32]int32 {
	if x != nil {
		return x.SkillCd
	}
	return nil
}

type NtfRoomBuffDestroy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId int64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // 目标id
	BuffId   int32 `protobuf:"varint,2,opt,name=buff_id,json=buffId,proto3" json:"buff_id,omitempty"`       //buff id
}

func (x *NtfRoomBuffDestroy) Reset() {
	*x = NtfRoomBuffDestroy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomBuffDestroy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomBuffDestroy) ProtoMessage() {}

func (x *NtfRoomBuffDestroy) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomBuffDestroy.ProtoReflect.Descriptor instead.
func (*NtfRoomBuffDestroy) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{5}
}

func (x *NtfRoomBuffDestroy) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NtfRoomBuffDestroy) GetBuffId() int32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

type NtfRoomBuffKnockback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuffId       int32   `protobuf:"varint,1,opt,name=buff_id,json=buffId,proto3" json:"buff_id,omitempty"`                  // buff id
	TargetId     int64   `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`            // 目标id
	SrcId        int64   `protobuf:"varint,3,opt,name=src_id,json=srcId,proto3" json:"src_id,omitempty"`                     // 释放者id
	SkillIndex   int32   `protobuf:"varint,4,opt,name=skill_index,json=skillIndex,proto3" json:"skill_index,omitempty"`      // 技能序列号
	KnockbackPos *Vector `protobuf:"bytes,5,opt,name=knockback_pos,json=knockbackPos,proto3" json:"knockback_pos,omitempty"` //击退的目标位置
}

func (x *NtfRoomBuffKnockback) Reset() {
	*x = NtfRoomBuffKnockback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomBuffKnockback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomBuffKnockback) ProtoMessage() {}

func (x *NtfRoomBuffKnockback) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomBuffKnockback.ProtoReflect.Descriptor instead.
func (*NtfRoomBuffKnockback) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{6}
}

func (x *NtfRoomBuffKnockback) GetBuffId() int32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

func (x *NtfRoomBuffKnockback) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *NtfRoomBuffKnockback) GetSrcId() int64 {
	if x != nil {
		return x.SrcId
	}
	return 0
}

func (x *NtfRoomBuffKnockback) GetSkillIndex() int32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

func (x *NtfRoomBuffKnockback) GetKnockbackPos() *Vector {
	if x != nil {
		return x.KnockbackPos
	}
	return nil
}

type NtfRoomSkillEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcId      int64   `protobuf:"varint,1,opt,name=src_id,json=srcId,proto3" json:"src_id,omitempty"`                // 释放者id
	EffectCid  int32   `protobuf:"varint,2,opt,name=effect_cid,json=effectCid,proto3" json:"effect_cid,omitempty"`    // 效果配置id
	SkillIndex int32   `protobuf:"varint,3,opt,name=skill_index,json=skillIndex,proto3" json:"skill_index,omitempty"` // 技能序列号
	Direct     int32   `protobuf:"varint,4,opt,name=direct,proto3" json:"direct,omitempty"`                           // 方向(弧度)
	Pos        *Vector `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`                                  // 位置
	Delay      int64   `protobuf:"varint,6,opt,name=delay,proto3" json:"delay,omitempty"`                             // 延迟时间(ms)
}

func (x *NtfRoomSkillEffect) Reset() {
	*x = NtfRoomSkillEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomSkillEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomSkillEffect) ProtoMessage() {}

func (x *NtfRoomSkillEffect) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomSkillEffect.ProtoReflect.Descriptor instead.
func (*NtfRoomSkillEffect) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{7}
}

func (x *NtfRoomSkillEffect) GetSrcId() int64 {
	if x != nil {
		return x.SrcId
	}
	return 0
}

func (x *NtfRoomSkillEffect) GetEffectCid() int32 {
	if x != nil {
		return x.EffectCid
	}
	return 0
}

func (x *NtfRoomSkillEffect) GetSkillIndex() int32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

func (x *NtfRoomSkillEffect) GetDirect() int32 {
	if x != nil {
		return x.Direct
	}
	return 0
}

func (x *NtfRoomSkillEffect) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *NtfRoomSkillEffect) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type NtfRoomSkillEffectActive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcId      int64   `protobuf:"varint,1,opt,name=src_id,json=srcId,proto3" json:"src_id,omitempty"`                // 释放者id
	EffectCid  int32   `protobuf:"varint,2,opt,name=effect_cid,json=effectCid,proto3" json:"effect_cid,omitempty"`    // 效果配置id
	SkillIndex int32   `protobuf:"varint,3,opt,name=skill_index,json=skillIndex,proto3" json:"skill_index,omitempty"` // 技能序列号
	Direct     int32   `protobuf:"varint,4,opt,name=direct,proto3" json:"direct,omitempty"`                           // 方向(弧度)
	Pos        *Vector `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`                                  // 位置
}

func (x *NtfRoomSkillEffectActive) Reset() {
	*x = NtfRoomSkillEffectActive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfRoomSkillEffectActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfRoomSkillEffectActive) ProtoMessage() {}

func (x *NtfRoomSkillEffectActive) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfRoomSkillEffectActive.ProtoReflect.Descriptor instead.
func (*NtfRoomSkillEffectActive) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{8}
}

func (x *NtfRoomSkillEffectActive) GetSrcId() int64 {
	if x != nil {
		return x.SrcId
	}
	return 0
}

func (x *NtfRoomSkillEffectActive) GetEffectCid() int32 {
	if x != nil {
		return x.EffectCid
	}
	return 0
}

func (x *NtfRoomSkillEffectActive) GetSkillIndex() int32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

func (x *NtfRoomSkillEffectActive) GetDirect() int32 {
	if x != nil {
		return x.Direct
	}
	return 0
}

func (x *NtfRoomSkillEffectActive) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

type C2SEnterRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                //登录获取的token
	RoomId      string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                // 房间id
	RoomToken   string `protobuf:"bytes,3,opt,name=room_token,json=roomToken,proto3" json:"room_token,omitempty"`       //战斗房间token
	CountryCode string `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` //国家码(CN,US)
}

func (x *C2SEnterRoom) Reset() {
	*x = C2SEnterRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SEnterRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SEnterRoom) ProtoMessage() {}

func (x *C2SEnterRoom) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SEnterRoom.ProtoReflect.Descriptor instead.
func (*C2SEnterRoom) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{9}
}

func (x *C2SEnterRoom) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *C2SEnterRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *C2SEnterRoom) GetRoomToken() string {
	if x != nil {
		return x.RoomToken
	}
	return ""
}

func (x *C2SEnterRoom) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type S2CEnterRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId  string         `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	MapId   int32          `protobuf:"varint,2,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"` //地图id
	Players []*ScenePlayer `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	PlayId  int32          `protobuf:"varint,5,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"` //玩法ID 试炼为999 0为大厅
}

func (x *S2CEnterRoom) Reset() {
	*x = S2CEnterRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CEnterRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CEnterRoom) ProtoMessage() {}

func (x *S2CEnterRoom) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CEnterRoom.ProtoReflect.Descriptor instead.
func (*S2CEnterRoom) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{10}
}

func (x *S2CEnterRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *S2CEnterRoom) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *S2CEnterRoom) GetPlayers() []*ScenePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *S2CEnterRoom) GetPlayId() int32 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

type C2SUseSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skill *Skill `protobuf:"bytes,1,opt,name=skill,proto3" json:"skill,omitempty"`
}

func (x *C2SUseSkill) Reset() {
	*x = C2SUseSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SUseSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SUseSkill) ProtoMessage() {}

func (x *C2SUseSkill) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SUseSkill.ProtoReflect.Descriptor instead.
func (*C2SUseSkill) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{11}
}

func (x *C2SUseSkill) GetSkill() *Skill {
	if x != nil {
		return x.Skill
	}
	return nil
}

type S2CUseSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillIndex int32 `protobuf:"varint,1,opt,name=skill_index,json=skillIndex,proto3" json:"skill_index,omitempty"` //请求id
	ErrCode    int32 `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`          // 错误码
	SkillCid   int32 `protobuf:"varint,3,opt,name=skill_cid,json=skillCid,proto3" json:"skill_cid,omitempty"`       //技能id
}

func (x *S2CUseSkill) Reset() {
	*x = S2CUseSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CUseSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CUseSkill) ProtoMessage() {}

func (x *S2CUseSkill) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CUseSkill.ProtoReflect.Descriptor instead.
func (*S2CUseSkill) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{12}
}

func (x *S2CUseSkill) GetSkillIndex() int32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

func (x *S2CUseSkill) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *S2CUseSkill) GetSkillCid() int32 {
	if x != nil {
		return x.SkillCid
	}
	return 0
}

// 取消技能释放，客户端在持续释放技能时，如果按下了取消技能的按钮，会发送这个消息
type C2SCancelSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillCid int32 `protobuf:"varint,1,opt,name=skill_cid,json=skillCid,proto3" json:"skill_cid,omitempty"` // 技能配置id
}

func (x *C2SCancelSkill) Reset() {
	*x = C2SCancelSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCancelSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCancelSkill) ProtoMessage() {}

func (x *C2SCancelSkill) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCancelSkill.ProtoReflect.Descriptor instead.
func (*C2SCancelSkill) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{13}
}

func (x *C2SCancelSkill) GetSkillCid() int32 {
	if x != nil {
		return x.SkillCid
	}
	return 0
}

// 取消技能释放返回
type S2CCancelSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CCancelSkill) Reset() {
	*x = S2CCancelSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCancelSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCancelSkill) ProtoMessage() {}

func (x *S2CCancelSkill) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCancelSkill.ProtoReflect.Descriptor instead.
func (*S2CCancelSkill) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{14}
}

type C2SLeaveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SLeaveRoom) Reset() {
	*x = C2SLeaveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SLeaveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SLeaveRoom) ProtoMessage() {}

func (x *C2SLeaveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SLeaveRoom.ProtoReflect.Descriptor instead.
func (*C2SLeaveRoom) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{15}
}

type S2CLeaveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CLeaveRoom) Reset() {
	*x = S2CLeaveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CLeaveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CLeaveRoom) ProtoMessage() {}

func (x *S2CLeaveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CLeaveRoom.ProtoReflect.Descriptor instead.
func (*S2CLeaveRoom) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{16}
}

type RoomResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinGroupId int32                 `protobuf:"varint,1,opt,name=win_group_id,json=winGroupId,proto3" json:"win_group_id,omitempty"`                                                               // 胜利阵营id
	BattleTime int32                 `protobuf:"varint,2,opt,name=battle_time,json=battleTime,proto3" json:"battle_time,omitempty"`                                                                 // 战斗时长(秒)
	Results    map[int64]*RoleResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //玩家结果
}

func (x *RoomResult) Reset() {
	*x = RoomResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomResult) ProtoMessage() {}

func (x *RoomResult) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomResult.ProtoReflect.Descriptor instead.
func (*RoomResult) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{17}
}

func (x *RoomResult) GetWinGroupId() int32 {
	if x != nil {
		return x.WinGroupId
	}
	return 0
}

func (x *RoomResult) GetBattleTime() int32 {
	if x != nil {
		return x.BattleTime
	}
	return 0
}

func (x *RoomResult) GetResults() map[int64]*RoleResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// ScenePlayer 场景角色
type ScenePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname     string          `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                                                     // 昵称
	HeroId       int32           `protobuf:"varint,3,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`                                                                          // 英雄id
	Hp           int32           `protobuf:"varint,4,opt,name=hp,proto3" json:"hp,omitempty"`                                                                                                // 血量
	MaxHp        int32           `protobuf:"varint,5,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`                                                                             // 最大血量
	Speed        int32           `protobuf:"varint,6,opt,name=speed,proto3" json:"speed,omitempty"`                                                                                          // 速度
	Direction    *Vector         `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"`                                                                                   // 方向
	Pos          *Vector         `protobuf:"bytes,8,opt,name=pos,proto3" json:"pos,omitempty"`                                                                                               // 坐标
	GroupId      int32           `protobuf:"varint,9,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                                                                       // 阵营id
	Buffs        map[int32]*Buff `protobuf:"bytes,10,rep,name=buffs,proto3" json:"buffs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //buff列表
	PetProfileId int64           `protobuf:"varint,11,opt,name=pet_profile_id,json=petProfileId,proto3" json:"pet_profile_id,omitempty"`                                                     //宠物外观ID 身体  + 帽子 * 10000 + 翅膀*10000^2 + 武器*10000^3
	SkinId       int32           `protobuf:"varint,12,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`                                                                         //皮肤ID
}

func (x *ScenePlayer) Reset() {
	*x = ScenePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenePlayer) ProtoMessage() {}

func (x *ScenePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenePlayer.ProtoReflect.Descriptor instead.
func (*ScenePlayer) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{18}
}

func (x *ScenePlayer) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ScenePlayer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ScenePlayer) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *ScenePlayer) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *ScenePlayer) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *ScenePlayer) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ScenePlayer) GetDirection() *Vector {
	if x != nil {
		return x.Direction
	}
	return nil
}

func (x *ScenePlayer) GetPos() *Vector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *ScenePlayer) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ScenePlayer) GetBuffs() map[int32]*Buff {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *ScenePlayer) GetPetProfileId() int64 {
	if x != nil {
		return x.PetProfileId
	}
	return 0
}

func (x *ScenePlayer) GetSkinId() int32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

// 进入场景 客户端loading完毕后会请求这个消息
type C2SEnterScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SEnterScene) Reset() {
	*x = C2SEnterScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SEnterScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SEnterScene) ProtoMessage() {}

func (x *C2SEnterScene) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SEnterScene.ProtoReflect.Descriptor instead.
func (*C2SEnterScene) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{19}
}

type S2CEnterScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CEnterScene) Reset() {
	*x = S2CEnterScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CEnterScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CEnterScene) ProtoMessage() {}

func (x *S2CEnterScene) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CEnterScene.ProtoReflect.Descriptor instead.
func (*S2CEnterScene) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{20}
}

// 转场完毕
type C2SScenePrepared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SScenePrepared) Reset() {
	*x = C2SScenePrepared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SScenePrepared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SScenePrepared) ProtoMessage() {}

func (x *C2SScenePrepared) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SScenePrepared.ProtoReflect.Descriptor instead.
func (*C2SScenePrepared) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{21}
}

type S2CScenePrepared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CScenePrepared) Reset() {
	*x = S2CScenePrepared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CScenePrepared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CScenePrepared) ProtoMessage() {}

func (x *S2CScenePrepared) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CScenePrepared.ProtoReflect.Descriptor instead.
func (*S2CScenePrepared) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{22}
}

// 心跳
type C2SRoomHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SRoomHeartbeat) Reset() {
	*x = C2SRoomHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SRoomHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SRoomHeartbeat) ProtoMessage() {}

func (x *C2SRoomHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SRoomHeartbeat.ProtoReflect.Descriptor instead.
func (*C2SRoomHeartbeat) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{23}
}

type S2CRoomHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CRoomHeartbeat) Reset() {
	*x = S2CRoomHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CRoomHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CRoomHeartbeat) ProtoMessage() {}

func (x *S2CRoomHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CRoomHeartbeat.ProtoReflect.Descriptor instead.
func (*S2CRoomHeartbeat) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{24}
}

// 发送头顶表情气泡
type C2SEmojiShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId int32 `protobuf:"varint,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"` //要展示的表情ID
}

func (x *C2SEmojiShow) Reset() {
	*x = C2SEmojiShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SEmojiShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SEmojiShow) ProtoMessage() {}

func (x *C2SEmojiShow) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SEmojiShow.ProtoReflect.Descriptor instead.
func (*C2SEmojiShow) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{25}
}

func (x *C2SEmojiShow) GetEmojiId() int32 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

// 回应头顶表情气泡展示
type S2CEmojiShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId int32 `protobuf:"varint,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"` //表情ID
}

func (x *S2CEmojiShow) Reset() {
	*x = S2CEmojiShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CEmojiShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CEmojiShow) ProtoMessage() {}

func (x *S2CEmojiShow) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CEmojiShow.ProtoReflect.Descriptor instead.
func (*S2CEmojiShow) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{26}
}

func (x *S2CEmojiShow) GetEmojiId() int32 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

// 广播玩家要展示的表情气泡
type NtfEmojiShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //展示表情气泡的玩家ID
	EmojiId  int32 `protobuf:"varint,2,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`    //要展示的表情气泡ID
}

func (x *NtfEmojiShow) Reset() {
	*x = NtfEmojiShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfEmojiShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfEmojiShow) ProtoMessage() {}

func (x *NtfEmojiShow) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfEmojiShow.ProtoReflect.Descriptor instead.
func (*NtfEmojiShow) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{27}
}

func (x *NtfEmojiShow) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *NtfEmojiShow) GetEmojiId() int32 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

// 再来一场
type C2SBattleAgain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"` //是否准备 true 准备 false 取消
}

func (x *C2SBattleAgain) Reset() {
	*x = C2SBattleAgain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SBattleAgain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SBattleAgain) ProtoMessage() {}

func (x *C2SBattleAgain) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SBattleAgain.ProtoReflect.Descriptor instead.
func (*C2SBattleAgain) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{28}
}

func (x *C2SBattleAgain) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type S2CBattleAgain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"` //是否准备 true 准备 false 取消
}

func (x *S2CBattleAgain) Reset() {
	*x = S2CBattleAgain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CBattleAgain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CBattleAgain) ProtoMessage() {}

func (x *S2CBattleAgain) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CBattleAgain.ProtoReflect.Descriptor instead.
func (*S2CBattleAgain) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{29}
}

func (x *S2CBattleAgain) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// 再来一场广播
type NtfBattleAgain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //再来一场玩家ID
	Ready    bool  `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`                       //是否准备 true 准备 false 取消
}

func (x *NtfBattleAgain) Reset() {
	*x = NtfBattleAgain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfBattleAgain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfBattleAgain) ProtoMessage() {}

func (x *NtfBattleAgain) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfBattleAgain.ProtoReflect.Descriptor instead.
func (*NtfBattleAgain) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{30}
}

func (x *NtfBattleAgain) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *NtfBattleAgain) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// 踢出房间
type NtfKickOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason KickOutReason `protobuf:"varint,1,opt,name=reason,proto3,enum=room.KickOutReason" json:"reason,omitempty"` // 踢出原因
}

func (x *NtfKickOut) Reset() {
	*x = NtfKickOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtfKickOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfKickOut) ProtoMessage() {}

func (x *NtfKickOut) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfKickOut.ProtoReflect.Descriptor instead.
func (*NtfKickOut) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{31}
}

func (x *NtfKickOut) GetReason() KickOutReason {
	if x != nil {
		return x.Reason
	}
	return KickOutReason_KICK_OUT_REASON_BACK_TO_HALL
}

var File_room_room_proto protoreflect.FileDescriptor

var file_room_room_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x1a, 0x12, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x72, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0d, 0x4e,
	0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x05,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x22,
	0x6e, 0x0a, 0x13, 0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xc9, 0x03, 0x0a, 0x08, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x70, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x68, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x66, 0x74, 0x48,
	0x70, 0x12, 0x27, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x42, 0x75, 0x66, 0x66,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x42, 0x75, 0x66, 0x66, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x66, 0x66, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43, 0x72, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x70, 0x5f, 0x73, 0x75, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x70,
	0x53, 0x75, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x68, 0x70, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6c, 0x65, 0x66, 0x74, 0x48, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x75, 0x66, 0x66,
	0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x52, 0x10, 0x61, 0x64,
	0x64, 0x42, 0x75, 0x66, 0x66, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0b,
	0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x69, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x68,
	0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x69, 0x74, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x43, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0xee, 0x02, 0x0a, 0x11, 0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d,
	0x42, 0x75, 0x66, 0x66, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x42, 0x75, 0x66,
	0x66, 0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66, 0x66, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3f, 0x0a, 0x08,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66,
	0x66, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x1a, 0x3a, 0x0a,
	0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x12, 0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d,
	0x42, 0x75, 0x66, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49,
	0x64, 0x22, 0xb7, 0x01, 0x0a, 0x14, 0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66,
	0x66, 0x4b, 0x6e, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75,
	0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x66,
	0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x31, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x63,
	0x6b, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x6b,
	0x6e, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x12,
	0x4e, 0x74, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x43, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x4e, 0x74, 0x66, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x43, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x22, 0x7f, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0b, 0x43,
	0x32, 0x53, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x66, 0x0a,
	0x0b, 0x53, 0x32, 0x43, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x43, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb1, 0x03, 0x0a, 0x0b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x68, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x62, 0x75,
	0x66, 0x66, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x66,
	0x66, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x70, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x1a, 0x44, 0x0a,
	0x0a, 0x42, 0x75, 0x66, 0x66, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x32, 0x43,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x22, 0x12, 0x0a,
	0x10, 0x43, 0x32, 0x53, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x29, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64,
	0x22, 0x29, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x68, 0x6f, 0x77,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0c, 0x4e,
	0x74, 0x66, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x41, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x26, 0x0a, 0x0e, 0x53,
	0x32, 0x43, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x22, 0x43, 0x0a, 0x0e, 0x4e, 0x74, 0x66, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x41, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x39, 0x0a, 0x0a, 0x4e, 0x74, 0x66, 0x4b,
	0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4b, 0x69,
	0x63, 0x6b, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x2a, 0x52, 0x0a, 0x0d, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x1c, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x4f, 0x55, 0x54,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x4f, 0x5f,
	0x48, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x4f,
	0x55, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x3b, 0x72, 0x6f, 0x6f, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_room_room_proto_rawDescOnce sync.Once
	file_room_room_proto_rawDescData = file_room_room_proto_rawDesc
)

func file_room_room_proto_rawDescGZIP() []byte {
	file_room_room_proto_rawDescOnce.Do(func() {
		file_room_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_room_proto_rawDescData)
	})
	return file_room_room_proto_rawDescData
}

var file_room_room_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_room_room_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_room_room_proto_goTypes = []any{
	(KickOutReason)(0),               // 0: room.KickOutReason
	(*NtfRoomSkills)(nil),            // 1: room.NtfRoomSkills
	(*NtfRoomCancelSkills)(nil),      // 2: room.NtfRoomCancelSkills
	(*SkillHit)(nil),                 // 3: room.SkillHit
	(*NtfRoomHits)(nil),              // 4: room.NtfRoomHits
	(*NtfRoomBuffEffect)(nil),        // 5: room.NtfRoomBuffEffect
	(*NtfRoomBuffDestroy)(nil),       // 6: room.NtfRoomBuffDestroy
	(*NtfRoomBuffKnockback)(nil),     // 7: room.NtfRoomBuffKnockback
	(*NtfRoomSkillEffect)(nil),       // 8: room.NtfRoomSkillEffect
	(*NtfRoomSkillEffectActive)(nil), // 9: room.NtfRoomSkillEffectActive
	(*C2SEnterRoom)(nil),             // 10: room.C2SEnterRoom
	(*S2CEnterRoom)(nil),             // 11: room.S2CEnterRoom
	(*C2SUseSkill)(nil),              // 12: room.C2SUseSkill
	(*S2CUseSkill)(nil),              // 13: room.S2CUseSkill
	(*C2SCancelSkill)(nil),           // 14: room.C2SCancelSkill
	(*S2CCancelSkill)(nil),           // 15: room.S2CCancelSkill
	(*C2SLeaveRoom)(nil),             // 16: room.C2SLeaveRoom
	(*S2CLeaveRoom)(nil),             // 17: room.S2CLeaveRoom
	(*RoomResult)(nil),               // 18: room.RoomResult
	(*ScenePlayer)(nil),              // 19: room.ScenePlayer
	(*C2SEnterScene)(nil),            // 20: room.C2SEnterScene
	(*S2CEnterScene)(nil),            // 21: room.S2CEnterScene
	(*C2SScenePrepared)(nil),         // 22: room.C2SScenePrepared
	(*S2CScenePrepared)(nil),         // 23: room.S2CScenePrepared
	(*C2SRoomHeartbeat)(nil),         // 24: room.C2SRoomHeartbeat
	(*S2CRoomHeartbeat)(nil),         // 25: room.S2CRoomHeartbeat
	(*C2SEmojiShow)(nil),             // 26: room.C2SEmojiShow
	(*S2CEmojiShow)(nil),             // 27: room.S2CEmojiShow
	(*NtfEmojiShow)(nil),             // 28: room.NtfEmojiShow
	(*C2SBattleAgain)(nil),           // 29: room.C2SBattleAgain
	(*S2CBattleAgain)(nil),           // 30: room.S2CBattleAgain
	(*NtfBattleAgain)(nil),           // 31: room.NtfBattleAgain
	(*NtfKickOut)(nil),               // 32: room.NtfKickOut
	nil,                              // 33: room.NtfRoomBuffEffect.ChangesEntry
	nil,                              // 34: room.NtfRoomBuffEffect.SkillCdEntry
	nil,                              // 35: room.RoomResult.ResultsEntry
	nil,                              // 36: room.ScenePlayer.BuffsEntry
	(*Skill)(nil),                    // 37: room.Skill
	(*Buff)(nil),                     // 38: room.Buff
	(*Vector)(nil),                   // 39: room.Vector
	(*RoleResult)(nil),               // 40: room.RoleResult
}
var file_room_room_proto_depIdxs = []int32{
	37, // 0: room.NtfRoomSkills.skill:type_name -> room.Skill
	38, // 1: room.SkillHit.add_buffs:type_name -> room.Buff
	38, // 2: room.SkillHit.add_buffs_attacker:type_name -> room.Buff
	39, // 3: room.SkillHit.target_pos:type_name -> room.Vector
	3,  // 4: room.NtfRoomHits.hits:type_name -> room.SkillHit
	38, // 5: room.NtfRoomBuffEffect.buff:type_name -> room.Buff
	33, // 6: room.NtfRoomBuffEffect.changes:type_name -> room.NtfRoomBuffEffect.ChangesEntry
	34, // 7: room.NtfRoomBuffEffect.skill_cd:type_name -> room.NtfRoomBuffEffect.SkillCdEntry
	39, // 8: room.NtfRoomBuffKnockback.knockback_pos:type_name -> room.Vector
	39, // 9: room.NtfRoomSkillEffect.pos:type_name -> room.Vector
	39, // 10: room.NtfRoomSkillEffectActive.pos:type_name -> room.Vector
	19, // 11: room.S2CEnterRoom.players:type_name -> room.ScenePlayer
	37, // 12: room.C2SUseSkill.skill:type_name -> room.Skill
	35, // 13: room.RoomResult.results:type_name -> room.RoomResult.ResultsEntry
	39, // 14: room.ScenePlayer.direction:type_name -> room.Vector
	39, // 15: room.ScenePlayer.pos:type_name -> room.Vector
	36, // 16: room.ScenePlayer.buffs:type_name -> room.ScenePlayer.BuffsEntry
	0,  // 17: room.NtfKickOut.reason:type_name -> room.KickOutReason
	40, // 18: room.RoomResult.ResultsEntry.value:type_name -> room.RoleResult
	38, // 19: room.ScenePlayer.BuffsEntry.value:type_name -> room.Buff
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_room_room_proto_init() }
func file_room_room_proto_init() {
	if File_room_room_proto != nil {
		return
	}
	file_room_rcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_room_room_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomSkills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomCancelSkills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SkillHit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomHits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomBuffEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomBuffDestroy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomBuffKnockback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomSkillEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*NtfRoomSkillEffectActive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*C2SEnterRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*S2CEnterRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*C2SUseSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*S2CUseSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*C2SCancelSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*S2CCancelSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*C2SLeaveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*S2CLeaveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RoomResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ScenePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*C2SEnterScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*S2CEnterScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*C2SScenePrepared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*S2CScenePrepared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*C2SRoomHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*S2CRoomHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*C2SEmojiShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*S2CEmojiShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*NtfEmojiShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*C2SBattleAgain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*S2CBattleAgain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*NtfBattleAgain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*NtfKickOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_room_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_room_room_proto_goTypes,
		DependencyIndexes: file_room_room_proto_depIdxs,
		EnumInfos:         file_room_room_proto_enumTypes,
		MessageInfos:      file_room_room_proto_msgTypes,
	}.Build()
	File_room_room_proto = out.File
	file_room_room_proto_rawDesc = nil
	file_room_room_proto_goTypes = nil
	file_room_room_proto_depIdxs = nil
}
