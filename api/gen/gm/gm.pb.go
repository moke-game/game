// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: gm/gm.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchGMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *WatchGMRequest) Reset() {
	*x = WatchGMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_gm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchGMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchGMRequest) ProtoMessage() {}

func (x *WatchGMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_gm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchGMRequest.ProtoReflect.Descriptor instead.
func (*WatchGMRequest) Descriptor() ([]byte, []int) {
	return file_gm_gm_proto_rawDescGZIP(), []int{0}
}

func (x *WatchGMRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type WatchGMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *BannedInfo `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *WatchGMResponse) Reset() {
	*x = WatchGMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_gm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchGMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchGMResponse) ProtoMessage() {}

func (x *WatchGMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_gm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchGMResponse.ProtoReflect.Descriptor instead.
func (*WatchGMResponse) Descriptor() ([]byte, []int) {
	return file_gm_gm_proto_rawDescGZIP(), []int{1}
}

func (x *WatchGMResponse) GetDetail() *BannedInfo {
	if x != nil {
		return x.Detail
	}
	return nil
}

var File_gm_gm_proto protoreflect.FileDescriptor

var file_gm_gm_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6d, 0x2f, 0x67, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x6d, 0x2e, 0x70, 0x62, 0x1a, 0x0d, 0x67, 0x6d, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x67, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x47, 0x4d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x32, 0x84, 0x0a, 0x0a, 0x09, 0x47, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x57, 0x61, 0x74, 0x63, 0x68, 0x47, 0x4d, 0x12, 0x15, 0x2e,
	0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x47, 0x4d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6d, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x92, 0x41, 0x2d,
	0x0a, 0x05, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x20, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x1a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x20, 0x61, 0x6e, 0x20, 0x6d, 0x61, 0x69,
	0x6c, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xad, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x92, 0x41, 0x32, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x13, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x8e, 0xa9, 0xe5, 0xae, 0xb6,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x2e, 0x1a, 0x13, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7,
	0x8e, 0xa9, 0xe5, 0xae, 0xb6, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0xa9, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6d,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x92, 0x41, 0x3e, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x8e,
	0xa9, 0xe5, 0xae, 0xb6, 0xe8, 0xaf, 0xa6, 0xe7, 0xbb, 0x86, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x2e, 0x1a, 0x19, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x8e, 0xa9, 0xe5, 0xae, 0xb6, 0xe8,
	0xaf, 0xa6, 0xe7, 0xbb, 0x86, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xa0, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x67, 0x6d, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x92, 0x41, 0x32, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x13, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7,
	0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x2e, 0x1a, 0x13, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0xb2, 0x01, 0x0a, 0x10,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5d, 0x92, 0x41, 0x38, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16,
	0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x8e, 0xa9, 0xe5, 0xae, 0xb6, 0xe9, 0xbb, 0x91, 0xe5,
	0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x2e, 0x1a, 0x16, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x8e,
	0xa9, 0xe5, 0xae, 0xb6, 0xe9, 0xbb, 0x91, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d, 0x2f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x90, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x12, 0x1a, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x92, 0x41, 0x26, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0d, 0xe7, 0x8e, 0xa9, 0xe5, 0xae, 0xb6, 0xe5,
	0xb0, 0x81, 0xe7, 0xa6, 0x81, 0x2e, 0x1a, 0x0d, 0xe7, 0x8e, 0xa9, 0xe5, 0xae, 0xb6, 0xe5, 0xb0,
	0x81, 0xe7, 0xa6, 0x81, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x63, 0x6b,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x92, 0x41, 0x20, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0a, 0xe8, 0xb8, 0xa2, 0xe4, 0xb8, 0x8b, 0xe7,
	0xba, 0xbf, 0x2e, 0x1a, 0x0a, 0xe8, 0xb8, 0xa2, 0xe4, 0xb8, 0x8b, 0xe7, 0xba, 0xbf, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6d,
	0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x0b, 0x5a, 0x09, 0x67,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gm_gm_proto_rawDescOnce sync.Once
	file_gm_gm_proto_rawDescData = file_gm_gm_proto_rawDesc
)

func file_gm_gm_proto_rawDescGZIP() []byte {
	file_gm_gm_proto_rawDescOnce.Do(func() {
		file_gm_gm_proto_rawDescData = protoimpl.X.CompressGZIP(file_gm_gm_proto_rawDescData)
	})
	return file_gm_gm_proto_rawDescData
}

var file_gm_gm_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gm_gm_proto_goTypes = []any{
	(*WatchGMRequest)(nil),             // 0: gm.pb.WatchGMRequest
	(*WatchGMResponse)(nil),            // 1: gm.pb.WatchGMResponse
	(*BannedInfo)(nil),                 // 2: gm.pb.BannedInfo
	(*GetBlockedUserInfoRequest)(nil),  // 3: gm.pb.GetBlockedUserInfoRequest
	(*SendMailRequest)(nil),            // 4: gm.pb.SendMailRequest
	(*GetPlayerInfoListRequest)(nil),   // 5: gm.pb.GetPlayerInfoListRequest
	(*GetPlayerInfoRequest)(nil),       // 6: gm.pb.GetPlayerInfoRequest
	(*QueryUserListRequest)(nil),       // 7: gm.pb.QueryUserListRequest
	(*PlayerBannedListRequest)(nil),    // 8: gm.pb.PlayerBannedListRequest
	(*PlayerBannedRequest)(nil),        // 9: gm.pb.PlayerBannedRequest
	(*KickOfflineRequest)(nil),         // 10: gm.pb.KickOfflineRequest
	(*GetBlockedUserInfoResponse)(nil), // 11: gm.pb.GetBlockedUserInfoResponse
	(*SendMailResponse)(nil),           // 12: gm.pb.SendMailResponse
	(*GetPlayerInfoListResponse)(nil),  // 13: gm.pb.GetPlayerInfoListResponse
	(*GetPlayerInfoResponse)(nil),      // 14: gm.pb.GetPlayerInfoResponse
	(*QueryUserListResponse)(nil),      // 15: gm.pb.QueryUserListResponse
	(*PlayerBannedListResponse)(nil),   // 16: gm.pb.PlayerBannedListResponse
	(*PlayerBannedResponse)(nil),       // 17: gm.pb.PlayerBannedResponse
	(*KickOfflineResponse)(nil),        // 18: gm.pb.KickOfflineResponse
}
var file_gm_gm_proto_depIdxs = []int32{
	2,  // 0: gm.pb.WatchGMResponse.detail:type_name -> gm.pb.BannedInfo
	0,  // 1: gm.pb.GMService.WatchGM:input_type -> gm.pb.WatchGMRequest
	3,  // 2: gm.pb.GMService.GetBlockedUserInfo:input_type -> gm.pb.GetBlockedUserInfoRequest
	4,  // 3: gm.pb.GMService.SendMail:input_type -> gm.pb.SendMailRequest
	5,  // 4: gm.pb.GMService.GetPlayerInfoList:input_type -> gm.pb.GetPlayerInfoListRequest
	6,  // 5: gm.pb.GMService.GetPlayerInfo:input_type -> gm.pb.GetPlayerInfoRequest
	7,  // 6: gm.pb.GMService.QueryUserList:input_type -> gm.pb.QueryUserListRequest
	8,  // 7: gm.pb.GMService.PlayerBannedList:input_type -> gm.pb.PlayerBannedListRequest
	9,  // 8: gm.pb.GMService.PlayerBanned:input_type -> gm.pb.PlayerBannedRequest
	10, // 9: gm.pb.GMService.KickOffline:input_type -> gm.pb.KickOfflineRequest
	1,  // 10: gm.pb.GMService.WatchGM:output_type -> gm.pb.WatchGMResponse
	11, // 11: gm.pb.GMService.GetBlockedUserInfo:output_type -> gm.pb.GetBlockedUserInfoResponse
	12, // 12: gm.pb.GMService.SendMail:output_type -> gm.pb.SendMailResponse
	13, // 13: gm.pb.GMService.GetPlayerInfoList:output_type -> gm.pb.GetPlayerInfoListResponse
	14, // 14: gm.pb.GMService.GetPlayerInfo:output_type -> gm.pb.GetPlayerInfoResponse
	15, // 15: gm.pb.GMService.QueryUserList:output_type -> gm.pb.QueryUserListResponse
	16, // 16: gm.pb.GMService.PlayerBannedList:output_type -> gm.pb.PlayerBannedListResponse
	17, // 17: gm.pb.GMService.PlayerBanned:output_type -> gm.pb.PlayerBannedResponse
	18, // 18: gm.pb.GMService.KickOffline:output_type -> gm.pb.KickOfflineResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_gm_gm_proto_init() }
func file_gm_gm_proto_init() {
	if File_gm_gm_proto != nil {
		return
	}
	file_gm_mail_proto_init()
	file_gm_player_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gm_gm_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WatchGMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_gm_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WatchGMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gm_gm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gm_gm_proto_goTypes,
		DependencyIndexes: file_gm_gm_proto_depIdxs,
		MessageInfos:      file_gm_gm_proto_msgTypes,
	}.Build()
	File_gm_gm_proto = out.File
	file_gm_gm_proto_rawDesc = nil
	file_gm_gm_proto_goTypes = nil
	file_gm_gm_proto_depIdxs = nil
}
