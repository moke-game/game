// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: gm/cashbattle.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发布现金赛报名信息
type PubCashBattleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleInfo   *CashBattleInfo `protobuf:"bytes,1,opt,name=battle_info,json=battleInfo,proto3" json:"battle_info,omitempty"`
	CashBattleId string          `protobuf:"bytes,6,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *PubCashBattleInfoRequest) Reset() {
	*x = PubCashBattleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleInfoRequest) ProtoMessage() {}

func (x *PubCashBattleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleInfoRequest.ProtoReflect.Descriptor instead.
func (*PubCashBattleInfoRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{0}
}

func (x *PubCashBattleInfoRequest) GetBattleInfo() *CashBattleInfo {
	if x != nil {
		return x.BattleInfo
	}
	return nil
}

func (x *PubCashBattleInfoRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type CashBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime       int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                        //现金solo赛开启报名时间 不可为空 秒时间戳
	Deadline        int64                  `protobuf:"varint,2,opt,name=deadline,proto3" json:"deadline,omitempty"`                                                                                           //截至日期 不可为空 秒时间戳
	SignCoe         int64                  `protobuf:"varint,3,opt,name=sign_coe,json=signCoe,proto3" json:"sign_coe,omitempty"`                                                                              //报名系数(系数*10000，不使用小数)
	BattleIntroduce []*CashBattleIntroduce `protobuf:"bytes,4,rep,name=battle_introduce,json=battleIntroduce,proto3" json:"battle_introduce,omitempty"`                                                       //比赛信息 不可为空
	Condition       map[int32]string       `protobuf:"bytes,5,rep,name=condition,proto3" json:"condition,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //报名条件 可以为空 101=用户账号奖杯数 102=用户持有英雄数量 103=用户持有宠物数 104=用户持有道具(value中使用"道具id:数量|道具id:数量"传递)
}

func (x *CashBattleInfo) Reset() {
	*x = CashBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleInfo) ProtoMessage() {}

func (x *CashBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleInfo.ProtoReflect.Descriptor instead.
func (*CashBattleInfo) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{1}
}

func (x *CashBattleInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CashBattleInfo) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *CashBattleInfo) GetSignCoe() int64 {
	if x != nil {
		return x.SignCoe
	}
	return 0
}

func (x *CashBattleInfo) GetBattleIntroduce() []*CashBattleIntroduce {
	if x != nil {
		return x.BattleIntroduce
	}
	return nil
}

func (x *CashBattleInfo) GetCondition() map[int32]string {
	if x != nil {
		return x.Condition
	}
	return nil
}

type CashBattleIntroduce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language     string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`         //语言 不可为空
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`               //活动标题 不可为空
	Introduction string `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"` //活动简介 需支持字号和颜色 不可为空
	Condition    string `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`       //活动条件描述
}

func (x *CashBattleIntroduce) Reset() {
	*x = CashBattleIntroduce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleIntroduce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleIntroduce) ProtoMessage() {}

func (x *CashBattleIntroduce) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleIntroduce.ProtoReflect.Descriptor instead.
func (*CashBattleIntroduce) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{2}
}

func (x *CashBattleIntroduce) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CashBattleIntroduce) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CashBattleIntroduce) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CashBattleIntroduce) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type PubCashBattleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=成功 非0未失败
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //非0时的信息
}

func (x *PubCashBattleInfoResponse) Reset() {
	*x = PubCashBattleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleInfoResponse) ProtoMessage() {}

func (x *PubCashBattleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleInfoResponse.ProtoReflect.Descriptor instead.
func (*PubCashBattleInfoResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{3}
}

func (x *PubCashBattleInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PubCashBattleInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CashBattleMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index         int32              `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                                                                                                                               //阶段ID 1=获得参赛资格 2=初赛 3=复赛 以此类推
	BattleDate    int32              `protobuf:"varint,2,opt,name=battle_date,json=battleDate,proto3" json:"battle_date,omitempty"`                                                                                                   //比赛日期时间戳 秒 不可为空
	BattleInfo    []*MatchPlayerInfo `protobuf:"bytes,3,rep,name=battle_info,json=battleInfo,proto3" json:"battle_info,omitempty"`                                                                                                    //玩家信息表 不可为空
	SuccessMailId int32              `protobuf:"varint,4,opt,name=success_mail_id,json=successMailId,proto3" json:"success_mail_id,omitempty"`                                                                                        //报名入选参赛\晋级邮件模板ID 不可为空
	FailMailId    int32              `protobuf:"varint,5,opt,name=fail_mail_id,json=failMailId,proto3" json:"fail_mail_id,omitempty"`                                                                                                 //报名未入选\晋级失败邮件模板ID 不可为空
	SuccessReward map[int32]int32    `protobuf:"bytes,6,rep,name=success_reward,json=successReward,proto3" json:"success_reward,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //报名成功\晋级奖励 可为空
	FailReward    map[int32]int32    `protobuf:"bytes,7,rep,name=fail_reward,json=failReward,proto3" json:"fail_reward,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`          //报名未入选\晋级失败 安慰奖励 key:道具ID value:道具数量 可为空
}

func (x *CashBattleMatch) Reset() {
	*x = CashBattleMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleMatch) ProtoMessage() {}

func (x *CashBattleMatch) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleMatch.ProtoReflect.Descriptor instead.
func (*CashBattleMatch) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{4}
}

func (x *CashBattleMatch) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CashBattleMatch) GetBattleDate() int32 {
	if x != nil {
		return x.BattleDate
	}
	return 0
}

func (x *CashBattleMatch) GetBattleInfo() []*MatchPlayerInfo {
	if x != nil {
		return x.BattleInfo
	}
	return nil
}

func (x *CashBattleMatch) GetSuccessMailId() int32 {
	if x != nil {
		return x.SuccessMailId
	}
	return 0
}

func (x *CashBattleMatch) GetFailMailId() int32 {
	if x != nil {
		return x.FailMailId
	}
	return 0
}

func (x *CashBattleMatch) GetSuccessReward() map[int32]int32 {
	if x != nil {
		return x.SuccessReward
	}
	return nil
}

func (x *CashBattleMatch) GetFailReward() map[int32]int32 {
	if x != nil {
		return x.FailReward
	}
	return nil
}

// 发布现金赛对战信息
type PubCashBattleMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match        *CashBattleMatch `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	CashBattleId string           `protobuf:"bytes,2,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *PubCashBattleMatchRequest) Reset() {
	*x = PubCashBattleMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleMatchRequest) ProtoMessage() {}

func (x *PubCashBattleMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleMatchRequest.ProtoReflect.Descriptor instead.
func (*PubCashBattleMatchRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{5}
}

func (x *PubCashBattleMatchRequest) GetMatch() *CashBattleMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *PubCashBattleMatchRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type PubCashBattleMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PubCashBattleMatchResponse) Reset() {
	*x = PubCashBattleMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleMatchResponse) ProtoMessage() {}

func (x *PubCashBattleMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleMatchResponse.ProtoReflect.Descriptor instead.
func (*PubCashBattleMatchResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{6}
}

// 玩家配对信息
type MatchPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player_1Id string `protobuf:"bytes,1,opt,name=player_1_id,json=player1Id,proto3" json:"player_1_id,omitempty"` //玩家ID 可以为空 不允许两个字段都为空 阶段1时表示玩家获得参赛资格
	Player_2Id string `protobuf:"bytes,2,opt,name=player_2_id,json=player2Id,proto3" json:"player_2_id,omitempty"` //玩家ID
}

func (x *MatchPlayerInfo) Reset() {
	*x = MatchPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayerInfo) ProtoMessage() {}

func (x *MatchPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayerInfo.ProtoReflect.Descriptor instead.
func (*MatchPlayerInfo) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{7}
}

func (x *MatchPlayerInfo) GetPlayer_1Id() string {
	if x != nil {
		return x.Player_1Id
	}
	return ""
}

func (x *MatchPlayerInfo) GetPlayer_2Id() string {
	if x != nil {
		return x.Player_2Id
	}
	return ""
}

type CashBattleCoe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`   //系数类型 1=报名人数系数 2=竞猜参与人数系数
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"` //系数值
}

func (x *CashBattleCoe) Reset() {
	*x = CashBattleCoe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashBattleCoe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashBattleCoe) ProtoMessage() {}

func (x *CashBattleCoe) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashBattleCoe.ProtoReflect.Descriptor instead.
func (*CashBattleCoe) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{8}
}

func (x *CashBattleCoe) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CashBattleCoe) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 调整比赛报名、竞猜等系数
type PubCashBattleCoeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coe          *CashBattleCoe `protobuf:"bytes,1,opt,name=coe,proto3" json:"coe,omitempty"`                                         //系数表 不可为空
	CashBattleId string         `protobuf:"bytes,2,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *PubCashBattleCoeRequest) Reset() {
	*x = PubCashBattleCoeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleCoeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleCoeRequest) ProtoMessage() {}

func (x *PubCashBattleCoeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleCoeRequest.ProtoReflect.Descriptor instead.
func (*PubCashBattleCoeRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{9}
}

func (x *PubCashBattleCoeRequest) GetCoe() *CashBattleCoe {
	if x != nil {
		return x.Coe
	}
	return nil
}

func (x *PubCashBattleCoeRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type PubCashBattleCoeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=成功 非0未失败
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //非0时的信息
}

func (x *PubCashBattleCoeResponse) Reset() {
	*x = PubCashBattleCoeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubCashBattleCoeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubCashBattleCoeResponse) ProtoMessage() {}

func (x *PubCashBattleCoeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubCashBattleCoeResponse.ProtoReflect.Descriptor instead.
func (*PubCashBattleCoeResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{10}
}

func (x *PubCashBattleCoeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PubCashBattleCoeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CashPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                            //玩家唯一ID 不可为空
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //玩家昵称 不可为空
	TotalCup int32  `protobuf:"varint,3,opt,name=total_cup,json=totalCup,proto3" json:"total_cup,omitempty"` //玩家总奖杯数
	IsVerify bool   `protobuf:"varint,4,opt,name=is_verify,json=isVerify,proto3" json:"is_verify,omitempty"` //是否确认报名
}

func (x *CashPlayerInfo) Reset() {
	*x = CashPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashPlayerInfo) ProtoMessage() {}

func (x *CashPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashPlayerInfo.ProtoReflect.Descriptor instead.
func (*CashPlayerInfo) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{11}
}

func (x *CashPlayerInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CashPlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CashPlayerInfo) GetTotalCup() int32 {
	if x != nil {
		return x.TotalCup
	}
	return 0
}

func (x *CashPlayerInfo) GetIsVerify() bool {
	if x != nil {
		return x.IsVerify
	}
	return false
}

// 获取现金赛报名信息
type GetCashBattleSignInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashBattleId string `protobuf:"bytes,1,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *GetCashBattleSignInfoRequest) Reset() {
	*x = GetCashBattleSignInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleSignInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleSignInfoRequest) ProtoMessage() {}

func (x *GetCashBattleSignInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleSignInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleSignInfoRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{12}
}

func (x *GetCashBattleSignInfoRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

// 获取现金赛报名信息返回
type GetCashBattleSignInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfos []*CashPlayerInfo `protobuf:"bytes,1,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"` //玩家信息 不可为空
}

func (x *GetCashBattleSignInfoResponse) Reset() {
	*x = GetCashBattleSignInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleSignInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleSignInfoResponse) ProtoMessage() {}

func (x *GetCashBattleSignInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleSignInfoResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleSignInfoResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{13}
}

func (x *GetCashBattleSignInfoResponse) GetPlayerInfos() []*CashPlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

// 对战信息
type ResultInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player_1Id   string `protobuf:"bytes,1,opt,name=player_1_id,json=player1Id,proto3" json:"player_1_id,omitempty"`        //玩家ID 可以为空 不允许两个字段都为空
	Player_1Kill int32  `protobuf:"varint,2,opt,name=player_1_kill,json=player1Kill,proto3" json:"player_1_kill,omitempty"` //玩家1击杀数量
	Player_1Die  int32  `protobuf:"varint,3,opt,name=player_1_die,json=player1Die,proto3" json:"player_1_die,omitempty"`    //玩家1死亡次数
	Player_2Id   string `protobuf:"bytes,4,opt,name=player_2_id,json=player2Id,proto3" json:"player_2_id,omitempty"`        //玩家ID
	Player_2Kill int32  `protobuf:"varint,5,opt,name=player_2_kill,json=player2Kill,proto3" json:"player_2_kill,omitempty"` //玩家2击杀数量
	Player_2Die  int32  `protobuf:"varint,6,opt,name=player_2_die,json=player2Die,proto3" json:"player_2_die,omitempty"`    //玩家2死亡次数
	WinnerId     string `protobuf:"bytes,7,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`             //赢家ID 可能为空 两人都输
	RoomId       string `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                   //房间ID
}

func (x *ResultInfo) Reset() {
	*x = ResultInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultInfo) ProtoMessage() {}

func (x *ResultInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultInfo.ProtoReflect.Descriptor instead.
func (*ResultInfo) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{14}
}

func (x *ResultInfo) GetPlayer_1Id() string {
	if x != nil {
		return x.Player_1Id
	}
	return ""
}

func (x *ResultInfo) GetPlayer_1Kill() int32 {
	if x != nil {
		return x.Player_1Kill
	}
	return 0
}

func (x *ResultInfo) GetPlayer_1Die() int32 {
	if x != nil {
		return x.Player_1Die
	}
	return 0
}

func (x *ResultInfo) GetPlayer_2Id() string {
	if x != nil {
		return x.Player_2Id
	}
	return ""
}

func (x *ResultInfo) GetPlayer_2Kill() int32 {
	if x != nil {
		return x.Player_2Kill
	}
	return 0
}

func (x *ResultInfo) GetPlayer_2Die() int32 {
	if x != nil {
		return x.Player_2Die
	}
	return 0
}

func (x *ResultInfo) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *ResultInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 获取现金赛对战信息
type GetCashBattleResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashBattleId string `protobuf:"bytes,1,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *GetCashBattleResultRequest) Reset() {
	*x = GetCashBattleResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleResultRequest) ProtoMessage() {}

func (x *GetCashBattleResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleResultRequest.ProtoReflect.Descriptor instead.
func (*GetCashBattleResultRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{15}
}

func (x *GetCashBattleResultRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

// 获取现金赛对战信息返回
type GetCashBattleResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersusResultInfo []*ResultInfo `protobuf:"bytes,1,rep,name=versus_result_info,json=versusResultInfo,proto3" json:"versus_result_info,omitempty"` //对战结果信息 不可为空
}

func (x *GetCashBattleResultResponse) Reset() {
	*x = GetCashBattleResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashBattleResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashBattleResultResponse) ProtoMessage() {}

func (x *GetCashBattleResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashBattleResultResponse.ProtoReflect.Descriptor instead.
func (*GetCashBattleResultResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{16}
}

func (x *GetCashBattleResultResponse) GetVersusResultInfo() []*ResultInfo {
	if x != nil {
		return x.VersusResultInfo
	}
	return nil
}

type SignCashBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo   *CashPlayerInfo `protobuf:"bytes,1,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`         //玩家信息
	CashBattleId string          `protobuf:"bytes,2,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *SignCashBattleRequest) Reset() {
	*x = SignCashBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignCashBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignCashBattleRequest) ProtoMessage() {}

func (x *SignCashBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignCashBattleRequest.ProtoReflect.Descriptor instead.
func (*SignCashBattleRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{17}
}

func (x *SignCashBattleRequest) GetPlayerInfo() *CashPlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *SignCashBattleRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type SignCashBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignCashBattleResponse) Reset() {
	*x = SignCashBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignCashBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignCashBattleResponse) ProtoMessage() {}

func (x *SignCashBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignCashBattleResponse.ProtoReflect.Descriptor instead.
func (*SignCashBattleResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{18}
}

type ReportCashBattleResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       string      `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                     //房间ID 不可为空
	Result       *ResultInfo `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`                                   //对战结果信息 不可为空
	CashBattleId string      `protobuf:"bytes,3,opt,name=cash_battle_id,json=cashBattleId,proto3" json:"cash_battle_id,omitempty"` //现金赛ID 不可为空
}

func (x *ReportCashBattleResultRequest) Reset() {
	*x = ReportCashBattleResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCashBattleResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCashBattleResultRequest) ProtoMessage() {}

func (x *ReportCashBattleResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCashBattleResultRequest.ProtoReflect.Descriptor instead.
func (*ReportCashBattleResultRequest) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{19}
}

func (x *ReportCashBattleResultRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ReportCashBattleResultRequest) GetResult() *ResultInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReportCashBattleResultRequest) GetCashBattleId() string {
	if x != nil {
		return x.CashBattleId
	}
	return ""
}

type ReportCashBattleResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportCashBattleResultResponse) Reset() {
	*x = ReportCashBattleResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_cashbattle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCashBattleResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCashBattleResultResponse) ProtoMessage() {}

func (x *ReportCashBattleResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_cashbattle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCashBattleResultResponse.ProtoReflect.Descriptor instead.
func (*ReportCashBattleResultResponse) Descriptor() ([]byte, []int) {
	return file_gm_cashbattle_proto_rawDescGZIP(), []int{20}
}

var File_gm_cashbattle_proto protoreflect.FileDescriptor

var file_gm_cashbattle_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x6d, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x22, 0x78, 0x0a, 0x18,
	0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xaf, 0x02, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6d, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6d, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xe7, 0x03, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66,
	0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x50, 0x0a,
	0x0e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x47, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x46, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x66, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x40, 0x0a, 0x12, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x46, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x19, 0x50, 0x75, 0x62,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x75,
	0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x31, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x32, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x43,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x03, 0x63, 0x6f, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x43, 0x6f, 0x65, 0x52, 0x03, 0x63, 0x6f, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73,
	0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x43, 0x6f, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x0e, 0x43, 0x61, 0x73,
	0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x22, 0x44, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x31, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x31, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x31, 0x5f,
	0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x31, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x31, 0x5f, 0x64, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x44, 0x69, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x32, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x32, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x32, 0x5f, 0x64, 0x69, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x44, 0x69, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73,
	0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x12, 0x76, 0x65, 0x72, 0x73,
	0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x15, 0x53, 0x69, 0x67,
	0x6e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61,
	0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x67, 0x6d, 0x2f, 0x61,
	0x70, 0x69, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gm_cashbattle_proto_rawDescOnce sync.Once
	file_gm_cashbattle_proto_rawDescData = file_gm_cashbattle_proto_rawDesc
)

func file_gm_cashbattle_proto_rawDescGZIP() []byte {
	file_gm_cashbattle_proto_rawDescOnce.Do(func() {
		file_gm_cashbattle_proto_rawDescData = protoimpl.X.CompressGZIP(file_gm_cashbattle_proto_rawDescData)
	})
	return file_gm_cashbattle_proto_rawDescData
}

var file_gm_cashbattle_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_gm_cashbattle_proto_goTypes = []interface{}{
	(*PubCashBattleInfoRequest)(nil),       // 0: gm.pb.PubCashBattleInfoRequest
	(*CashBattleInfo)(nil),                 // 1: gm.pb.CashBattleInfo
	(*CashBattleIntroduce)(nil),            // 2: gm.pb.CashBattleIntroduce
	(*PubCashBattleInfoResponse)(nil),      // 3: gm.pb.PubCashBattleInfoResponse
	(*CashBattleMatch)(nil),                // 4: gm.pb.CashBattleMatch
	(*PubCashBattleMatchRequest)(nil),      // 5: gm.pb.PubCashBattleMatchRequest
	(*PubCashBattleMatchResponse)(nil),     // 6: gm.pb.PubCashBattleMatchResponse
	(*MatchPlayerInfo)(nil),                // 7: gm.pb.MatchPlayerInfo
	(*CashBattleCoe)(nil),                  // 8: gm.pb.CashBattleCoe
	(*PubCashBattleCoeRequest)(nil),        // 9: gm.pb.PubCashBattleCoeRequest
	(*PubCashBattleCoeResponse)(nil),       // 10: gm.pb.PubCashBattleCoeResponse
	(*CashPlayerInfo)(nil),                 // 11: gm.pb.CashPlayerInfo
	(*GetCashBattleSignInfoRequest)(nil),   // 12: gm.pb.GetCashBattleSignInfoRequest
	(*GetCashBattleSignInfoResponse)(nil),  // 13: gm.pb.GetCashBattleSignInfoResponse
	(*ResultInfo)(nil),                     // 14: gm.pb.ResultInfo
	(*GetCashBattleResultRequest)(nil),     // 15: gm.pb.GetCashBattleResultRequest
	(*GetCashBattleResultResponse)(nil),    // 16: gm.pb.GetCashBattleResultResponse
	(*SignCashBattleRequest)(nil),          // 17: gm.pb.SignCashBattleRequest
	(*SignCashBattleResponse)(nil),         // 18: gm.pb.SignCashBattleResponse
	(*ReportCashBattleResultRequest)(nil),  // 19: gm.pb.ReportCashBattleResultRequest
	(*ReportCashBattleResultResponse)(nil), // 20: gm.pb.ReportCashBattleResultResponse
	nil,                                    // 21: gm.pb.CashBattleInfo.ConditionEntry
	nil,                                    // 22: gm.pb.CashBattleMatch.SuccessRewardEntry
	nil,                                    // 23: gm.pb.CashBattleMatch.FailRewardEntry
}
var file_gm_cashbattle_proto_depIdxs = []int32{
	1,  // 0: gm.pb.PubCashBattleInfoRequest.battle_info:type_name -> gm.pb.CashBattleInfo
	2,  // 1: gm.pb.CashBattleInfo.battle_introduce:type_name -> gm.pb.CashBattleIntroduce
	21, // 2: gm.pb.CashBattleInfo.condition:type_name -> gm.pb.CashBattleInfo.ConditionEntry
	7,  // 3: gm.pb.CashBattleMatch.battle_info:type_name -> gm.pb.MatchPlayerInfo
	22, // 4: gm.pb.CashBattleMatch.success_reward:type_name -> gm.pb.CashBattleMatch.SuccessRewardEntry
	23, // 5: gm.pb.CashBattleMatch.fail_reward:type_name -> gm.pb.CashBattleMatch.FailRewardEntry
	4,  // 6: gm.pb.PubCashBattleMatchRequest.match:type_name -> gm.pb.CashBattleMatch
	8,  // 7: gm.pb.PubCashBattleCoeRequest.coe:type_name -> gm.pb.CashBattleCoe
	11, // 8: gm.pb.GetCashBattleSignInfoResponse.player_infos:type_name -> gm.pb.CashPlayerInfo
	14, // 9: gm.pb.GetCashBattleResultResponse.versus_result_info:type_name -> gm.pb.ResultInfo
	11, // 10: gm.pb.SignCashBattleRequest.player_info:type_name -> gm.pb.CashPlayerInfo
	14, // 11: gm.pb.ReportCashBattleResultRequest.result:type_name -> gm.pb.ResultInfo
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_gm_cashbattle_proto_init() }
func file_gm_cashbattle_proto_init() {
	if File_gm_cashbattle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gm_cashbattle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleIntroduce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashBattleCoe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleCoeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubCashBattleCoeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleSignInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleSignInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashBattleResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignCashBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignCashBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCashBattleResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_cashbattle_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCashBattleResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gm_cashbattle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gm_cashbattle_proto_goTypes,
		DependencyIndexes: file_gm_cashbattle_proto_depIdxs,
		MessageInfos:      file_gm_cashbattle_proto_msgTypes,
	}.Build()
	File_gm_cashbattle_proto = out.File
	file_gm_cashbattle_proto_rawDesc = nil
	file_gm_cashbattle_proto_goTypes = nil
	file_gm_cashbattle_proto_depIdxs = nil
}
