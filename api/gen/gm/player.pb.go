// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: gm/player.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPlayerInfoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId string   `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	ServerId   []string `protobuf:"bytes,2,rep,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Type       string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Val        string   `protobuf:"bytes,4,opt,name=val,proto3" json:"val,omitempty"`
	Page       int32    `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32    `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetPlayerInfoListRequest) Reset() {
	*x = GetPlayerInfoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoListRequest) ProtoMessage() {}

func (x *GetPlayerInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoListRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoListRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlayerInfoListRequest) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *GetPlayerInfoListRequest) GetServerId() []string {
	if x != nil {
		return x.ServerId
	}
	return nil
}

func (x *GetPlayerInfoListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetPlayerInfoListRequest) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *GetPlayerInfoListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPlayerInfoListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId     string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	PlatformName   string `protobuf:"bytes,2,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
	ServerId       string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerName     string `protobuf:"bytes,4,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ChannelId      string `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName    string `protobuf:"bytes,6,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	UserId         string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId         string `protobuf:"bytes,8,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName       string `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	ChannelUserId  string `protobuf:"bytes,10,opt,name=channel_user_id,json=channelUserId,proto3" json:"channel_user_id,omitempty"`
	Level          string `protobuf:"bytes,11,opt,name=level,proto3" json:"level,omitempty"`
	RechargeAmount int64  `protobuf:"varint,12,opt,name=recharge_amount,json=rechargeAmount,proto3" json:"recharge_amount,omitempty"`
	RegisterIp     string `protobuf:"bytes,13,opt,name=register_ip,json=registerIp,proto3" json:"register_ip,omitempty"`
	DeviceId       string `protobuf:"bytes,14,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerInfo) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *PlayerInfo) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *PlayerInfo) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *PlayerInfo) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *PlayerInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PlayerInfo) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *PlayerInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlayerInfo) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *PlayerInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *PlayerInfo) GetChannelUserId() string {
	if x != nil {
		return x.ChannelUserId
	}
	return ""
}

func (x *PlayerInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *PlayerInfo) GetRechargeAmount() int64 {
	if x != nil {
		return x.RechargeAmount
	}
	return 0
}

func (x *PlayerInfo) GetRegisterIp() string {
	if x != nil {
		return x.RegisterIp
	}
	return ""
}

func (x *PlayerInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetPlayerInfoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfoList []*PlayerInfo `protobuf:"bytes,1,rep,name=player_info_list,json=playerInfoList,proto3" json:"player_info_list,omitempty"`
}

func (x *GetPlayerInfoListResponse) Reset() {
	*x = GetPlayerInfoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoListResponse) ProtoMessage() {}

func (x *GetPlayerInfoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoListResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoListResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlayerInfoListResponse) GetPlayerInfoList() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfoList
	}
	return nil
}

type GetPlayerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	ServerId   string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	RoleId     string `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetPlayerInfoRequest) Reset() {
	*x = GetPlayerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoRequest) ProtoMessage() {}

func (x *GetPlayerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlayerInfoRequest) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *GetPlayerInfoRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetPlayerInfoRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type GoodsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId   int64  `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	GoodsName string `protobuf:"bytes,2,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`
	Quantity  int32  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Status    string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GoodsList) Reset() {
	*x = GoodsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsList) ProtoMessage() {}

func (x *GoodsList) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsList.ProtoReflect.Descriptor instead.
func (*GoodsList) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{4}
}

func (x *GoodsList) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *GoodsList) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *GoodsList) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GoodsList) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RechargeInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformOrderNo string `protobuf:"bytes,1,opt,name=platform_order_no,json=platformOrderNo,proto3" json:"platform_order_no,omitempty"`
	RechargeMoney   string `protobuf:"bytes,2,opt,name=recharge_money,json=rechargeMoney,proto3" json:"recharge_money,omitempty"`
	RechargeVcoin   string `protobuf:"bytes,3,opt,name=recharge_vcoin,json=rechargeVcoin,proto3" json:"recharge_vcoin,omitempty"`
	GiftId          string `protobuf:"bytes,4,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`
	GiftName        string `protobuf:"bytes,5,opt,name=gift_name,json=giftName,proto3" json:"gift_name,omitempty"`
	RechargeTime    string `protobuf:"bytes,6,opt,name=recharge_time,json=rechargeTime,proto3" json:"recharge_time,omitempty"`
	IsTrue          string `protobuf:"bytes,7,opt,name=is_true,json=isTrue,proto3" json:"is_true,omitempty"`
}

func (x *RechargeInfoList) Reset() {
	*x = RechargeInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargeInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeInfoList) ProtoMessage() {}

func (x *RechargeInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeInfoList.ProtoReflect.Descriptor instead.
func (*RechargeInfoList) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{5}
}

func (x *RechargeInfoList) GetPlatformOrderNo() string {
	if x != nil {
		return x.PlatformOrderNo
	}
	return ""
}

func (x *RechargeInfoList) GetRechargeMoney() string {
	if x != nil {
		return x.RechargeMoney
	}
	return ""
}

func (x *RechargeInfoList) GetRechargeVcoin() string {
	if x != nil {
		return x.RechargeVcoin
	}
	return ""
}

func (x *RechargeInfoList) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *RechargeInfoList) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

func (x *RechargeInfoList) GetRechargeTime() string {
	if x != nil {
		return x.RechargeTime
	}
	return ""
}

func (x *RechargeInfoList) GetIsTrue() string {
	if x != nil {
		return x.IsTrue
	}
	return ""
}

type ExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRole           string `protobuf:"bytes,1,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
	Power              string `protobuf:"bytes,2,opt,name=power,proto3" json:"power,omitempty"`
	Realm              string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	OwnForce           string `protobuf:"bytes,4,opt,name=ownForce,proto3" json:"ownForce,omitempty"`
	StarCoin           string `protobuf:"bytes,5,opt,name=star_coin,json=starCoin,proto3" json:"star_coin,omitempty"`
	XiaYiValue         string `protobuf:"bytes,6,opt,name=xia_yi_value,json=xiaYiValue,proto3" json:"xia_yi_value,omitempty"`
	MobileInfo         string `protobuf:"bytes,7,opt,name=mobile_info,json=mobileInfo,proto3" json:"mobile_info,omitempty"`
	AttackValue        string `protobuf:"bytes,8,opt,name=attack_value,json=attackValue,proto3" json:"attack_value,omitempty"`
	DefenceValue       string `protobuf:"bytes,9,opt,name=defence_value,json=defenceValue,proto3" json:"defence_value,omitempty"`
	HpValue            string `protobuf:"bytes,10,opt,name=hp_value,json=hpValue,proto3" json:"hp_value,omitempty"`
	StrikeRatio        string `protobuf:"bytes,11,opt,name=strike_ratio,json=strikeRatio,proto3" json:"strike_ratio,omitempty"`
	HitValue           string `protobuf:"bytes,12,opt,name=hit_value,json=hitValue,proto3" json:"hit_value,omitempty"`
	DodgeValue         string `protobuf:"bytes,13,opt,name=dodge_value,json=dodgeValue,proto3" json:"dodge_value,omitempty"`
	AttackPower        string `protobuf:"bytes,14,opt,name=attack_power,json=attackPower,proto3" json:"attack_power,omitempty"`
	MoveSpeed          string `protobuf:"bytes,15,opt,name=move_speed,json=moveSpeed,proto3" json:"move_speed,omitempty"`
	ElementAttack      string `protobuf:"bytes,16,opt,name=element_attack,json=elementAttack,proto3" json:"element_attack,omitempty"`
	ElementDefense     string `protobuf:"bytes,17,opt,name=element_defense,json=elementDefense,proto3" json:"element_defense,omitempty"`
	DamageBonus        string `protobuf:"bytes,18,opt,name=damage_bonus,json=damageBonus,proto3" json:"damage_bonus,omitempty"`
	DamageReduction    string `protobuf:"bytes,19,opt,name=damage_reduction,json=damageReduction,proto3" json:"damage_reduction,omitempty"`
	CriticalDamage     string `protobuf:"bytes,20,opt,name=critical_damage,json=criticalDamage,proto3" json:"critical_damage,omitempty"`
	ExplosiveReduction string `protobuf:"bytes,21,opt,name=explosive_reduction,json=explosiveReduction,proto3" json:"explosive_reduction,omitempty"`
}

func (x *ExtInfo) Reset() {
	*x = ExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfo) ProtoMessage() {}

func (x *ExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfo.ProtoReflect.Descriptor instead.
func (*ExtInfo) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{6}
}

func (x *ExtInfo) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

func (x *ExtInfo) GetPower() string {
	if x != nil {
		return x.Power
	}
	return ""
}

func (x *ExtInfo) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *ExtInfo) GetOwnForce() string {
	if x != nil {
		return x.OwnForce
	}
	return ""
}

func (x *ExtInfo) GetStarCoin() string {
	if x != nil {
		return x.StarCoin
	}
	return ""
}

func (x *ExtInfo) GetXiaYiValue() string {
	if x != nil {
		return x.XiaYiValue
	}
	return ""
}

func (x *ExtInfo) GetMobileInfo() string {
	if x != nil {
		return x.MobileInfo
	}
	return ""
}

func (x *ExtInfo) GetAttackValue() string {
	if x != nil {
		return x.AttackValue
	}
	return ""
}

func (x *ExtInfo) GetDefenceValue() string {
	if x != nil {
		return x.DefenceValue
	}
	return ""
}

func (x *ExtInfo) GetHpValue() string {
	if x != nil {
		return x.HpValue
	}
	return ""
}

func (x *ExtInfo) GetStrikeRatio() string {
	if x != nil {
		return x.StrikeRatio
	}
	return ""
}

func (x *ExtInfo) GetHitValue() string {
	if x != nil {
		return x.HitValue
	}
	return ""
}

func (x *ExtInfo) GetDodgeValue() string {
	if x != nil {
		return x.DodgeValue
	}
	return ""
}

func (x *ExtInfo) GetAttackPower() string {
	if x != nil {
		return x.AttackPower
	}
	return ""
}

func (x *ExtInfo) GetMoveSpeed() string {
	if x != nil {
		return x.MoveSpeed
	}
	return ""
}

func (x *ExtInfo) GetElementAttack() string {
	if x != nil {
		return x.ElementAttack
	}
	return ""
}

func (x *ExtInfo) GetElementDefense() string {
	if x != nil {
		return x.ElementDefense
	}
	return ""
}

func (x *ExtInfo) GetDamageBonus() string {
	if x != nil {
		return x.DamageBonus
	}
	return ""
}

func (x *ExtInfo) GetDamageReduction() string {
	if x != nil {
		return x.DamageReduction
	}
	return ""
}

func (x *ExtInfo) GetCriticalDamage() string {
	if x != nil {
		return x.CriticalDamage
	}
	return ""
}

func (x *ExtInfo) GetExplosiveReduction() string {
	if x != nil {
		return x.ExplosiveReduction
	}
	return ""
}

type OthersList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	SonInfoList []*SonInfoList `protobuf:"bytes,2,rep,name=son_info_list,json=sonInfoList,proto3" json:"son_info_list,omitempty"`
}

func (x *OthersList) Reset() {
	*x = OthersList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OthersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OthersList) ProtoMessage() {}

func (x *OthersList) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OthersList.ProtoReflect.Descriptor instead.
func (*OthersList) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{7}
}

func (x *OthersList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OthersList) GetSonInfoList() []*SonInfoList {
	if x != nil {
		return x.SonInfoList
	}
	return nil
}

type SonInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K string `protobuf:"bytes,1,opt,name=k,proto3" json:"k,omitempty"`
	V string `protobuf:"bytes,2,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *SonInfoList) Reset() {
	*x = SonInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SonInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SonInfoList) ProtoMessage() {}

func (x *SonInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SonInfoList.ProtoReflect.Descriptor instead.
func (*SonInfoList) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{8}
}

func (x *SonInfoList) GetK() string {
	if x != nil {
		return x.K
	}
	return ""
}

func (x *SonInfoList) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type CustomizeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomizeTitle   string              `protobuf:"bytes,1,opt,name=customize_title,json=customizeTitle,proto3" json:"customize_title,omitempty"`
	CustomizeInfo    []string            `protobuf:"bytes,2,rep,name=customize_info,json=customizeInfo,proto3" json:"customize_info,omitempty"`
	SonCustomizeList []*SonCustomizeList `protobuf:"bytes,3,rep,name=son_customize_list,json=sonCustomizeList,proto3" json:"son_customize_list,omitempty"`
}

func (x *CustomizeList) Reset() {
	*x = CustomizeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeList) ProtoMessage() {}

func (x *CustomizeList) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeList.ProtoReflect.Descriptor instead.
func (*CustomizeList) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{9}
}

func (x *CustomizeList) GetCustomizeTitle() string {
	if x != nil {
		return x.CustomizeTitle
	}
	return ""
}

func (x *CustomizeList) GetCustomizeInfo() []string {
	if x != nil {
		return x.CustomizeInfo
	}
	return nil
}

func (x *CustomizeList) GetSonCustomizeList() []*SonCustomizeList {
	if x != nil {
		return x.SonCustomizeList
	}
	return nil
}

type SonCustomizeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SonCustomizeMap map[string]string `protobuf:"bytes,1,rep,name=son_customize_map,json=sonCustomizeMap,proto3" json:"son_customize_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // key: value
}

func (x *SonCustomizeList) Reset() {
	*x = SonCustomizeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SonCustomizeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SonCustomizeList) ProtoMessage() {}

func (x *SonCustomizeList) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SonCustomizeList.ProtoReflect.Descriptor instead.
func (*SonCustomizeList) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{10}
}

func (x *SonCustomizeList) GetSonCustomizeMap() map[string]string {
	if x != nil {
		return x.SonCustomizeMap
	}
	return nil
}

type GetPlayerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId           string              `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	PlatformName         string              `protobuf:"bytes,2,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
	ServerId             string              `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerName           string              `protobuf:"bytes,4,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ChannelId            string              `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName          string              `protobuf:"bytes,6,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	UserId               string              `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId               string              `protobuf:"bytes,8,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName             string              `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	ChannelUserId        string              `protobuf:"bytes,10,opt,name=channel_user_id,json=channelUserId,proto3" json:"channel_user_id,omitempty"`
	Status               string              `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Code                 string              `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	Info                 string              `protobuf:"bytes,13,opt,name=info,proto3" json:"info,omitempty"`
	Level                string              `protobuf:"bytes,14,opt,name=level,proto3" json:"level,omitempty"`
	VipLevel             string              `protobuf:"bytes,15,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`
	BannedType           string              `protobuf:"bytes,16,opt,name=banned_type,json=bannedType,proto3" json:"banned_type,omitempty"`
	CreateTime           int64               `protobuf:"varint,17,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	LastLoginTime        int64               `protobuf:"varint,18,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	LastLogin_IP         string              `protobuf:"bytes,19,opt,name=last_login_IP,json=lastLoginIP,proto3" json:"last_login_IP,omitempty"`
	CreateRoleIp         string              `protobuf:"bytes,20,opt,name=create_role_ip,json=createRoleIp,proto3" json:"create_role_ip,omitempty"`
	MajorId              string              `protobuf:"bytes,21,opt,name=major_id,json=majorId,proto3" json:"major_id,omitempty"`
	MajorName            string              `protobuf:"bytes,22,opt,name=major_name,json=majorName,proto3" json:"major_name,omitempty"`
	EmpiricalValue       string              `protobuf:"bytes,23,opt,name=empirical_value,json=empiricalValue,proto3" json:"empirical_value,omitempty"`
	TopUpStarCoin        int32               `protobuf:"varint,24,opt,name=top_up_star_coin,json=topUpStarCoin,proto3" json:"top_up_star_coin,omitempty"`
	Copper               int32               `protobuf:"varint,25,opt,name=copper,proto3" json:"copper,omitempty"`
	DeviceInfo           string              `protobuf:"bytes,26,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	CurrentOnlineTime    int64               `protobuf:"varint,27,opt,name=current_online_time,json=currentOnlineTime,proto3" json:"current_online_time,omitempty"`
	TotalOnline          int64               `protobuf:"varint,28,opt,name=total_online,json=totalOnline,proto3" json:"total_online,omitempty"`
	RechargeAmount       string              `protobuf:"bytes,29,opt,name=recharge_amount,json=rechargeAmount,proto3" json:"recharge_amount,omitempty"`
	RecentRechargeAmount string              `protobuf:"bytes,30,opt,name=recent_recharge_amount,json=recentRechargeAmount,proto3" json:"recent_recharge_amount,omitempty"`
	LastOptTime          string              `protobuf:"bytes,31,opt,name=last_opt_time,json=lastOptTime,proto3" json:"last_opt_time,omitempty"`
	ClientVersion        string              `protobuf:"bytes,32,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	LastRechargeTime     int64               `protobuf:"varint,33,opt,name=last_recharge_time,json=lastRechargeTime,proto3" json:"last_recharge_time,omitempty"`
	GoodsList            []*GoodsList        `protobuf:"bytes,34,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	RechargeInfoList     []*RechargeInfoList `protobuf:"bytes,35,rep,name=recharge_info_list,json=rechargeInfoList,proto3" json:"recharge_info_list,omitempty"`
	ExtInfo              *ExtInfo            `protobuf:"bytes,36,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`
	OthersList           []*OthersList       `protobuf:"bytes,37,rep,name=others_list,json=othersList,proto3" json:"others_list,omitempty"`
	CustomizeList        []*CustomizeList    `protobuf:"bytes,38,rep,name=customize_list,json=customizeList,proto3" json:"customize_list,omitempty"`
}

func (x *GetPlayerInfoResponse) Reset() {
	*x = GetPlayerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse) ProtoMessage() {}

func (x *GetPlayerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlayerInfoResponse) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetChannelUserId() string {
	if x != nil {
		return x.ChannelUserId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetVipLevel() string {
	if x != nil {
		return x.VipLevel
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetBannedType() string {
	if x != nil {
		return x.BannedType
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetLastLogin_IP() string {
	if x != nil {
		return x.LastLogin_IP
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetCreateRoleIp() string {
	if x != nil {
		return x.CreateRoleIp
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetMajorId() string {
	if x != nil {
		return x.MajorId
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetMajorName() string {
	if x != nil {
		return x.MajorName
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetEmpiricalValue() string {
	if x != nil {
		return x.EmpiricalValue
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetTopUpStarCoin() int32 {
	if x != nil {
		return x.TopUpStarCoin
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetCopper() int32 {
	if x != nil {
		return x.Copper
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetCurrentOnlineTime() int64 {
	if x != nil {
		return x.CurrentOnlineTime
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetTotalOnline() int64 {
	if x != nil {
		return x.TotalOnline
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetRechargeAmount() string {
	if x != nil {
		return x.RechargeAmount
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetRecentRechargeAmount() string {
	if x != nil {
		return x.RecentRechargeAmount
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetLastOptTime() string {
	if x != nil {
		return x.LastOptTime
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *GetPlayerInfoResponse) GetLastRechargeTime() int64 {
	if x != nil {
		return x.LastRechargeTime
	}
	return 0
}

func (x *GetPlayerInfoResponse) GetGoodsList() []*GoodsList {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetRechargeInfoList() []*RechargeInfoList {
	if x != nil {
		return x.RechargeInfoList
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetExtInfo() *ExtInfo {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetOthersList() []*OthersList {
	if x != nil {
		return x.OthersList
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetCustomizeList() []*CustomizeList {
	if x != nil {
		return x.CustomizeList
	}
	return nil
}

type QueryUserMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	ServerId   string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ChannelId  string `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	IsOnline   string `protobuf:"bytes,4,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	UserId     string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId     string `protobuf:"bytes,6,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName   string `protobuf:"bytes,7,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Page       int32  `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32  `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *QueryUserMsg) Reset() {
	*x = QueryUserMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserMsg) ProtoMessage() {}

func (x *QueryUserMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserMsg.ProtoReflect.Descriptor instead.
func (*QueryUserMsg) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{12}
}

func (x *QueryUserMsg) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *QueryUserMsg) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *QueryUserMsg) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *QueryUserMsg) GetIsOnline() string {
	if x != nil {
		return x.IsOnline
	}
	return ""
}

func (x *QueryUserMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *QueryUserMsg) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *QueryUserMsg) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *QueryUserMsg) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryUserMsg) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryUserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sign string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *QueryUserListRequest) Reset() {
	*x = QueryUserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListRequest) ProtoMessage() {}

func (x *QueryUserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListRequest.ProtoReflect.Descriptor instead.
func (*QueryUserListRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{13}
}

func (x *QueryUserListRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *QueryUserListRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type QueryUserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList []*PlayerInfo `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
}

func (x *QueryUserListResponse) Reset() {
	*x = QueryUserListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListResponse) ProtoMessage() {}

func (x *QueryUserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListResponse.ProtoReflect.Descriptor instead.
func (*QueryUserListResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{14}
}

func (x *QueryUserListResponse) GetUserList() []*PlayerInfo {
	if x != nil {
		return x.UserList
	}
	return nil
}

type PlayerBannedListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val        string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	PageSize   int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page       int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PlatformId string `protobuf:"bytes,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	Type       string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	ServerId   string `protobuf:"bytes,6,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *PlayerBannedListRequest) Reset() {
	*x = PlayerBannedListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBannedListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBannedListRequest) ProtoMessage() {}

func (x *PlayerBannedListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBannedListRequest.ProtoReflect.Descriptor instead.
func (*PlayerBannedListRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{15}
}

func (x *PlayerBannedListRequest) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *PlayerBannedListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PlayerBannedListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PlayerBannedListRequest) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *PlayerBannedListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlayerBannedListRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type PlayerBannedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId      string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	PlatformName    string `protobuf:"bytes,2,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
	ServerId        string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerName      string `protobuf:"bytes,4,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ChannelId       string `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName     string `protobuf:"bytes,6,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	UserId          string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId          string `protobuf:"bytes,8,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName        string `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	ChannelUserId   string `protobuf:"bytes,10,opt,name=channel_user_id,json=channelUserId,proto3" json:"channel_user_id,omitempty"`
	Level           string `protobuf:"bytes,11,opt,name=level,proto3" json:"level,omitempty"`
	RechargeAmount  string `protobuf:"bytes,12,opt,name=recharge_amount,json=rechargeAmount,proto3" json:"recharge_amount,omitempty"`
	CreateTime      int64  `protobuf:"varint,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	LockTime        int64  `protobuf:"varint,14,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	UnlockTime      int64  `protobuf:"varint,15,opt,name=unlock_time,json=unlockTime,proto3" json:"unlock_time,omitempty"`
	BannedType      int32  `protobuf:"varint,16,opt,name=banned_type,json=bannedType,proto3" json:"banned_type,omitempty"`
	BannedDimension string `protobuf:"bytes,17,opt,name=banned_dimension,json=bannedDimension,proto3" json:"banned_dimension,omitempty"`
	OperatorId      string `protobuf:"bytes,18,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Operator        string `protobuf:"bytes,19,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *PlayerBannedInfo) Reset() {
	*x = PlayerBannedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBannedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBannedInfo) ProtoMessage() {}

func (x *PlayerBannedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBannedInfo.ProtoReflect.Descriptor instead.
func (*PlayerBannedInfo) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerBannedInfo) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *PlayerBannedInfo) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *PlayerBannedInfo) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *PlayerBannedInfo) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *PlayerBannedInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PlayerBannedInfo) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *PlayerBannedInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlayerBannedInfo) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *PlayerBannedInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *PlayerBannedInfo) GetChannelUserId() string {
	if x != nil {
		return x.ChannelUserId
	}
	return ""
}

func (x *PlayerBannedInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *PlayerBannedInfo) GetRechargeAmount() string {
	if x != nil {
		return x.RechargeAmount
	}
	return ""
}

func (x *PlayerBannedInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PlayerBannedInfo) GetLockTime() int64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *PlayerBannedInfo) GetUnlockTime() int64 {
	if x != nil {
		return x.UnlockTime
	}
	return 0
}

func (x *PlayerBannedInfo) GetBannedType() int32 {
	if x != nil {
		return x.BannedType
	}
	return 0
}

func (x *PlayerBannedInfo) GetBannedDimension() string {
	if x != nil {
		return x.BannedDimension
	}
	return ""
}

func (x *PlayerBannedInfo) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *PlayerBannedInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type PlayerBannedListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     int32               `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	BannedInfoList []*PlayerBannedInfo `protobuf:"bytes,2,rep,name=banned_info_list,json=bannedInfoList,proto3" json:"banned_info_list,omitempty"`
}

func (x *PlayerBannedListResponse) Reset() {
	*x = PlayerBannedListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBannedListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBannedListResponse) ProtoMessage() {}

func (x *PlayerBannedListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBannedListResponse.ProtoReflect.Descriptor instead.
func (*PlayerBannedListResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerBannedListResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *PlayerBannedListResponse) GetBannedInfoList() []*PlayerBannedInfo {
	if x != nil {
		return x.BannedInfoList
	}
	return nil
}

type PlayerBannedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sign string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *PlayerBannedRequest) Reset() {
	*x = PlayerBannedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBannedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBannedRequest) ProtoMessage() {}

func (x *PlayerBannedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBannedRequest.ProtoReflect.Descriptor instead.
func (*PlayerBannedRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{18}
}

func (x *PlayerBannedRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *PlayerBannedRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type BannedReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId      string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	ServerId        string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	UserId          string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId          string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	BannedType      int32  `protobuf:"varint,5,opt,name=banned_type,json=bannedType,proto3" json:"banned_type,omitempty"`
	BannedDimension string `protobuf:"bytes,6,opt,name=banned_dimension,json=bannedDimension,proto3" json:"banned_dimension,omitempty"`
	BannedDuration  int32  `protobuf:"varint,7,opt,name=banned_duration,json=bannedDuration,proto3" json:"banned_duration,omitempty"`
	BannedReason    string `protobuf:"bytes,8,opt,name=banned_reason,json=bannedReason,proto3" json:"banned_reason,omitempty"`
	Remark          string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	OperatorId      string `protobuf:"bytes,10,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Operator        string `protobuf:"bytes,11,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *BannedReqMsg) Reset() {
	*x = BannedReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedReqMsg) ProtoMessage() {}

func (x *BannedReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedReqMsg.ProtoReflect.Descriptor instead.
func (*BannedReqMsg) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{19}
}

func (x *BannedReqMsg) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *BannedReqMsg) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *BannedReqMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BannedReqMsg) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *BannedReqMsg) GetBannedType() int32 {
	if x != nil {
		return x.BannedType
	}
	return 0
}

func (x *BannedReqMsg) GetBannedDimension() string {
	if x != nil {
		return x.BannedDimension
	}
	return ""
}

func (x *BannedReqMsg) GetBannedDuration() int32 {
	if x != nil {
		return x.BannedDuration
	}
	return 0
}

func (x *BannedReqMsg) GetBannedReason() string {
	if x != nil {
		return x.BannedReason
	}
	return ""
}

func (x *BannedReqMsg) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *BannedReqMsg) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *BannedReqMsg) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type BannedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannedTime   int64  `protobuf:"varint,1,opt,name=banned_time,json=bannedTime,proto3" json:"banned_time,omitempty"`
	UnsealTime   int64  `protobuf:"varint,2,opt,name=unseal_time,json=unsealTime,proto3" json:"unseal_time,omitempty"`
	BannedType   int32  `protobuf:"varint,3,opt,name=banned_type,json=bannedType,proto3" json:"banned_type,omitempty"` // 封禁类型(1:禁言 2:账号封禁 3:重复登陆 4:gm主动踢出)
	BannedReason string `protobuf:"bytes,4,opt,name=banned_reason,json=bannedReason,proto3" json:"banned_reason,omitempty"`
}

func (x *BannedInfo) Reset() {
	*x = BannedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedInfo) ProtoMessage() {}

func (x *BannedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedInfo.ProtoReflect.Descriptor instead.
func (*BannedInfo) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{20}
}

func (x *BannedInfo) GetBannedTime() int64 {
	if x != nil {
		return x.BannedTime
	}
	return 0
}

func (x *BannedInfo) GetUnsealTime() int64 {
	if x != nil {
		return x.UnsealTime
	}
	return 0
}

func (x *BannedInfo) GetBannedType() int32 {
	if x != nil {
		return x.BannedType
	}
	return 0
}

func (x *BannedInfo) GetBannedReason() string {
	if x != nil {
		return x.BannedReason
	}
	return ""
}

type PlayerBannedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannedInfo *BannedInfo `protobuf:"bytes,1,opt,name=banned_info,json=bannedInfo,proto3" json:"banned_info,omitempty"`
	Status     string      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Code       string      `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Info       string      `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PlayerBannedResponse) Reset() {
	*x = PlayerBannedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBannedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBannedResponse) ProtoMessage() {}

func (x *PlayerBannedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBannedResponse.ProtoReflect.Descriptor instead.
func (*PlayerBannedResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{21}
}

func (x *PlayerBannedResponse) GetBannedInfo() *BannedInfo {
	if x != nil {
		return x.BannedInfo
	}
	return nil
}

func (x *PlayerBannedResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlayerBannedResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PlayerBannedResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetBlockedUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetBlockedUserInfoRequest) Reset() {
	*x = GetBlockedUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockedUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockedUserInfoRequest) ProtoMessage() {}

func (x *GetBlockedUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockedUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBlockedUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{22}
}

func (x *GetBlockedUserInfoRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetBlockedUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *BannedInfo `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *GetBlockedUserInfoResponse) Reset() {
	*x = GetBlockedUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockedUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockedUserInfoResponse) ProtoMessage() {}

func (x *GetBlockedUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockedUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBlockedUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{23}
}

func (x *GetBlockedUserInfoResponse) GetDetail() *BannedInfo {
	if x != nil {
		return x.Detail
	}
	return nil
}

type KickOfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // 1: 角色名 2: 角色ID 3: 用户ID
	Val  string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KickOfflineRequest) Reset() {
	*x = KickOfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOfflineRequest) ProtoMessage() {}

func (x *KickOfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOfflineRequest.ProtoReflect.Descriptor instead.
func (*KickOfflineRequest) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{24}
}

func (x *KickOfflineRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *KickOfflineRequest) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type KickOfflineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickOfflineResponse) Reset() {
	*x = KickOfflineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gm_player_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOfflineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOfflineResponse) ProtoMessage() {}

func (x *KickOfflineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gm_player_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOfflineResponse.ProtoReflect.Descriptor instead.
func (*KickOfflineResponse) Descriptor() ([]byte, []int) {
	return file_gm_player_proto_rawDescGZIP(), []int{25}
}

var File_gm_player_proto protoreflect.FileDescriptor

var file_gm_player_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc6, 0x03, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x09,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x76, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x56, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x54, 0x72, 0x75, 0x65, 0x22, 0xcc, 0x05, 0x0a, 0x07, 0x45,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x78, 0x69, 0x61, 0x5f,
	0x79, 0x69, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x78, 0x69, 0x61, 0x59, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x6c,
	0x6f, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x0a, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a,
	0x0d, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x0b, 0x53, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76,
	0x22, 0xa6, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x73, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x53, 0x6f,
	0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58,
	0x0a, 0x11, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6d, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x2e, 0x53, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x42, 0x0a, 0x14, 0x53, 0x6f, 0x6e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xff, 0x0a, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x70,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x49,
	0x50, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x50, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x69, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x6d, 0x70, 0x69, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a,
	0x10, 0x74, 0x6f, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x55, 0x70, 0x53, 0x74,
	0x61, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a,
	0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x25, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6d, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x88,
	0x02, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x47, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xf6, 0x04, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x7e, 0x0a, 0x18,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x13,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xed, 0x02, 0x0a, 0x0c,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x0a,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x6e, 0x73, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x2d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x47,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x6d, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x3a, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x15, 0x0a, 0x13, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x67, 0x6d,
	0x2f, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gm_player_proto_rawDescOnce sync.Once
	file_gm_player_proto_rawDescData = file_gm_player_proto_rawDesc
)

func file_gm_player_proto_rawDescGZIP() []byte {
	file_gm_player_proto_rawDescOnce.Do(func() {
		file_gm_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_gm_player_proto_rawDescData)
	})
	return file_gm_player_proto_rawDescData
}

var file_gm_player_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_gm_player_proto_goTypes = []any{
	(*GetPlayerInfoListRequest)(nil),   // 0: gm.pb.GetPlayerInfoListRequest
	(*PlayerInfo)(nil),                 // 1: gm.pb.PlayerInfo
	(*GetPlayerInfoListResponse)(nil),  // 2: gm.pb.GetPlayerInfoListResponse
	(*GetPlayerInfoRequest)(nil),       // 3: gm.pb.GetPlayerInfoRequest
	(*GoodsList)(nil),                  // 4: gm.pb.GoodsList
	(*RechargeInfoList)(nil),           // 5: gm.pb.RechargeInfoList
	(*ExtInfo)(nil),                    // 6: gm.pb.ExtInfo
	(*OthersList)(nil),                 // 7: gm.pb.OthersList
	(*SonInfoList)(nil),                // 8: gm.pb.SonInfoList
	(*CustomizeList)(nil),              // 9: gm.pb.CustomizeList
	(*SonCustomizeList)(nil),           // 10: gm.pb.SonCustomizeList
	(*GetPlayerInfoResponse)(nil),      // 11: gm.pb.GetPlayerInfoResponse
	(*QueryUserMsg)(nil),               // 12: gm.pb.QueryUserMsg
	(*QueryUserListRequest)(nil),       // 13: gm.pb.QueryUserListRequest
	(*QueryUserListResponse)(nil),      // 14: gm.pb.QueryUserListResponse
	(*PlayerBannedListRequest)(nil),    // 15: gm.pb.PlayerBannedListRequest
	(*PlayerBannedInfo)(nil),           // 16: gm.pb.PlayerBannedInfo
	(*PlayerBannedListResponse)(nil),   // 17: gm.pb.PlayerBannedListResponse
	(*PlayerBannedRequest)(nil),        // 18: gm.pb.PlayerBannedRequest
	(*BannedReqMsg)(nil),               // 19: gm.pb.BannedReqMsg
	(*BannedInfo)(nil),                 // 20: gm.pb.BannedInfo
	(*PlayerBannedResponse)(nil),       // 21: gm.pb.PlayerBannedResponse
	(*GetBlockedUserInfoRequest)(nil),  // 22: gm.pb.GetBlockedUserInfoRequest
	(*GetBlockedUserInfoResponse)(nil), // 23: gm.pb.GetBlockedUserInfoResponse
	(*KickOfflineRequest)(nil),         // 24: gm.pb.KickOfflineRequest
	(*KickOfflineResponse)(nil),        // 25: gm.pb.KickOfflineResponse
	nil,                                // 26: gm.pb.SonCustomizeList.SonCustomizeMapEntry
}
var file_gm_player_proto_depIdxs = []int32{
	1,  // 0: gm.pb.GetPlayerInfoListResponse.player_info_list:type_name -> gm.pb.PlayerInfo
	8,  // 1: gm.pb.OthersList.son_info_list:type_name -> gm.pb.SonInfoList
	10, // 2: gm.pb.CustomizeList.son_customize_list:type_name -> gm.pb.SonCustomizeList
	26, // 3: gm.pb.SonCustomizeList.son_customize_map:type_name -> gm.pb.SonCustomizeList.SonCustomizeMapEntry
	4,  // 4: gm.pb.GetPlayerInfoResponse.goods_list:type_name -> gm.pb.GoodsList
	5,  // 5: gm.pb.GetPlayerInfoResponse.recharge_info_list:type_name -> gm.pb.RechargeInfoList
	6,  // 6: gm.pb.GetPlayerInfoResponse.ext_info:type_name -> gm.pb.ExtInfo
	7,  // 7: gm.pb.GetPlayerInfoResponse.others_list:type_name -> gm.pb.OthersList
	9,  // 8: gm.pb.GetPlayerInfoResponse.customize_list:type_name -> gm.pb.CustomizeList
	1,  // 9: gm.pb.QueryUserListResponse.user_list:type_name -> gm.pb.PlayerInfo
	16, // 10: gm.pb.PlayerBannedListResponse.banned_info_list:type_name -> gm.pb.PlayerBannedInfo
	20, // 11: gm.pb.PlayerBannedResponse.banned_info:type_name -> gm.pb.BannedInfo
	20, // 12: gm.pb.GetBlockedUserInfoResponse.detail:type_name -> gm.pb.BannedInfo
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_gm_player_proto_init() }
func file_gm_player_proto_init() {
	if File_gm_player_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gm_player_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayerInfoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayerInfoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GoodsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RechargeInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*OthersList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SonInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CustomizeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SonCustomizeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerBannedListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerBannedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerBannedListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerBannedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*BannedReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*BannedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerBannedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlockedUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlockedUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*KickOfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gm_player_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*KickOfflineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gm_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gm_player_proto_goTypes,
		DependencyIndexes: file_gm_player_proto_depIdxs,
		MessageInfos:      file_gm_player_proto_msgTypes,
	}.Build()
	File_gm_player_proto = out.File
	file_gm_player_proto_rawDesc = nil
	file_gm_player_proto_goTypes = nil
	file_gm_player_proto_depIdxs = nil
}
