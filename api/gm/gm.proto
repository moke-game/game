syntax = "proto3";

package gm.pb;

import "gm/mail.proto";
import "gm/player.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "gm/api;pb";

service GMService {
  // watch block list
  rpc WatchGM(WatchGMRequest) returns (stream WatchGMResponse) {}

  // get blocked user info
  rpc GetBlockedUserInfo(GetBlockedUserInfoRequest) returns (GetBlockedUserInfoResponse) {}

  rpc SendMail(SendMailRequest) returns (SendMailResponse) {
    option (google.api.http) = {
      post: "/v1/gm/sendEmailInfo"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Send mail."
      description: "Send an mail to players."
      tags: "mails"
    };
  }

  rpc GetPlayerInfoList(GetPlayerInfoListRequest) returns (GetPlayerInfoListResponse) {
    option (google.api.http) = {
      post: "/v1/gm/playerInfoList"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "获取玩家信息."
      description: "获取玩家信息."
      tags: "player"
    };
  }

  rpc GetPlayerInfo(GetPlayerInfoRequest) returns (GetPlayerInfoResponse) {
    option (google.api.http) = {
      post: "/v1/gm/playerInfo"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "获取玩家详细信息."
      description: "获取玩家详细信息."
      tags: "player"
    };
  }

  rpc QueryUserList(QueryUserListRequest) returns (QueryUserListResponse) {
    option (google.api.http) = {
      post: "/v1/gm/userQueryList"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "查询用户列表."
      description: "查询用户列表."
      tags: "player"
    };
  }
  // 获取玩家黑名单
  rpc PlayerBannedList(PlayerBannedListRequest) returns (PlayerBannedListResponse) {
    option (google.api.http) = {
      post: "/v1/gm/playerBannedList"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "获取玩家黑名单."
      description: "获取玩家黑名单."
      tags: "player"
    };
  }
  // 玩家封禁
  rpc PlayerBanned(PlayerBannedRequest) returns (PlayerBannedResponse) {
    option (google.api.http) = {
      post: "/v1/gm/playerBanned"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "玩家封禁."
      description: "玩家封禁."
      tags: "player"
    };
  }

  // 踢下线
  rpc KickOffline(KickOfflineRequest) returns (KickOfflineResponse) {
    option (google.api.http) = {
      post: "/v1/gm/playerKick"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "踢下线."
      description: "踢下线."
      tags: "player"
    };
  }
}

message WatchGMRequest {
  string uid = 1;
}

message WatchGMResponse {
  BannedInfo detail = 1;
}
